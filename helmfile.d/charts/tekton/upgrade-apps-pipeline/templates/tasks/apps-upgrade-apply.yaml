---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ck8s-apps-upgrade
spec:
  workspaces:
  - name: source
  params:
    - name: devbox-image-tag
      description: The devbox image tag to use based on the README.md of the config repository
      type: string
      default: {{ .Values.tekton.pipeline.devbox.tag | quote }}
    - name: kubespray-version
      description: The kubespray version
      type: string
      {{- with .Values.tekton.pipeline.kubesprayVersion }}
      default: {{ . | quote }}
      {{- end }}
    - name: apps-version
      description: The apps version
      type: string
      {{- with .Values.tekton.pipeline.appsVersion }}
      default: {{ . | quote }}
      {{- end }}
  steps:
    - name: upgrade-apps
      image: {{ .Values.tekton.pipeline.devbox.repository }}:$(inputs.params.devbox-image-tag)
      {{- with .Values.tekton.pipeline.resources }}
      resources:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      env:
        - name: "CK8S_CONFIG_PATH"
          value: $(workspaces.source.path)/config
        - name: "CK8S_PGP_FP"
          value: {{ .Values.tekton.gpg.fingerprint | quote }}
      script: |
        #!/usr/bin/env bash

        export GPG_TTY=$(tty)
        export GNUPGHOME=$(workspaces.source.path)

        gpg -v --batch --import /tmp/gpg/gpg-privatekey

        # Strip this file to only include existing keys
        cat <<EOF > ${CK8S_CONFIG_PATH}/.sops.yaml
        creation_rules:
          - pgp: ${CK8S_PGP_FP}
            path_regex: (.state/s3cfg.ini|secrets.yaml)$
        EOF

        target_version="$(inputs.params.apps-version)"

        echo "compliantkubernetes-apps/bin/ck8s upgrade both v${target_version%\.[0-9]*} apply"

        /git/compliantkubernetes-apps/bin/ck8s upgrade both "v${target_version%.[0-9]*}" apply

      securityContext:
        runAsNonRoot: true
        runAsGroup: 65532
        runAsUser: 65532
      volumeMounts:
        - name: gpg-key
          mountPath: /tmp/gpg
        - name: kubeconfigs
          mountPath: $(workspaces.source.path)/config/.state/kube_config_sc.yaml
          subPath: kube_config_sc.yaml
        - name: kubeconfigs
          mountPath: $(workspaces.source.path)/config/.state/kube_config_wc.yaml
          subPath: kube_config_wc.yaml
  volumes:
    - name: gpg-key
      secret:
        secretName: gpg
    - name: kubeconfigs
      secret:
        secretName: kubeconfigs
