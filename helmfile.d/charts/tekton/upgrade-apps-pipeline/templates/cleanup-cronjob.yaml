{{- if .Values.tekton.cleanup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cleanup-runs
spec:
  schedule: {{ .Values.tekton.cleanup.schedule | quote }}
  timeZone: {{ .Values.tekton.cleanup.timeZone | quote }}
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 10
      template:
        spec:
          containers:
          - name: cleanup
            image: gcr.io/tekton-releases/dogfooding/tkn@sha256:d17fec04f655551464a47dd59553c9b44cf660cc72dbcdbd52c0b8e8668c0579
            {{ if .Values.tekton.cleanup.resources }}
            command:
              - sh
              - -c
              - |
              {{- range .Values.tekton.cleanup.resources }}
                tkn {{ . }} delete --all -f  --keep {{ $.Values.tekton.cleanup.keepLast  }}
              {{- end }}
              {{- end }}
            env:
              - name: KUBECONFIG
                value: /tekton/home/.kube/kube_config_sc.yaml
            volumeMounts:
              - name: kubeconfig
                mountPath: /tekton/home/.kube
            securityContext:
              runAsNonRoot: true
              runAsUser: 65532
          volumes:
            - name: kubeconfig
              secret:
                secretName: kubeconfigs
          restartPolicy: Never
{{- end }}
