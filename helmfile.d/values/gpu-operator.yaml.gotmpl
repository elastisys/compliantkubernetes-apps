gpu:
  enabled: {{ .Values.gpu.enabled }}
operator:
  resources: {{- toYaml .Values.gpu.operator.resources | nindent 4 }}
  tolerations: {{- toYaml .Values.gpu.operator.tolerations | nindent 4 }}
  affinity: {{- toYaml .Values.gpu.operator.affinity | nindent 4 }}
node-feature-discovery:
  worker:
    resources: {{- toYaml .Values.gpu.nodeFeatureDiscovery.worker.resources | nindent 6 }}
    tolerations: {{- toYaml .Values.gpu.nodeFeatureDiscovery.worker.tolerations | nindent 6 }}
    affinity: {{- toYaml .Values.gpu.nodeFeatureDiscovery.worker.affinity | nindent 6 }}
  master:
    resources: {{- toYaml .Values.gpu.nodeFeatureDiscovery.controlPlane.resources | nindent 6 }}
    tolerations: {{- toYaml .Values.gpu.nodeFeatureDiscovery.controlPlane.tolerations | nindent 6 }}
    affinity: {{- toYaml .Values.gpu.nodeFeatureDiscovery.controlPlane.affinity | nindent 6 }}
daemonsets: {{- toYaml .Values.gpu.daemonsets | nindent 2 }}

# By default anyone can use this env var to use the GPU, even if it's not
# requested, this option makes the runtime instead inject volume mounts
# before the container can make use of the gpu
# https://docs.google.com/document/d/1zy0key-EL6JH50MZgwg96RPYxxXXnVUdxLZwGiyqLd8
toolkit:
  env:
  - name: ACCEPT_NVIDIA_VISIBLE_DEVICES_ENVVAR_WHEN_UNPRIVILEGED
    value: "false"
  - name: ACCEPT_NVIDIA_VISIBLE_DEVICES_AS_VOLUME_MOUNTS
    value: "true"

mig: {{- toYaml .Values.gpu.mig | nindent 2 }}

{{- if .Values.gpu.devicePlugin }}
devicePlugin: {{- toYaml .Values.gpu.devicePlugin | nindent 2 }}
{{- end }}

dcgmExporter:
  env:
    - name: DCGM_EXPORTER_LISTEN
      value: ":9400"
    - name: DCGM_EXPORTER_KUBERNETES
      value: "true"
    - name: DCGM_EXPORTER_COLLECTORS
      value: "/etc/dcgm-exporter/dcp-metrics-included.csv"
    - name: DCGM_EXPORTER_KUBERNETES
      value: "true"
    - name: NVIDIA_MIG_MONITOR_DEVICES
      value: "all"
    - name: DCGM_EXPORTER_ENABLE_DCGM_LOG
      value: 'true'
    - name: NVIDIA_VISIBLE_DEVICES
      value: all
    - name: NVIDIA_MIG_CONFIG_DEVICES
      value: all
  serviceMonitor:
    enabled: true
    relabelings:
    - sourceLabels:
      - __meta_kubernetes_pod_node_name
      regex: (.*)
      targetLabel: instance
      replacement: $1
      action: replace
  {{- if .Values.gpu.extraMetrics }}
  config:
    name: custom-dcgm-exporter-metrics
    create: true
    data: |-
      # Format
      # If line starts with a '#' it is considered a comment
      # DCGM FIELD, Prometheus metric type, help message

      # Clocks
      DCGM_FI_DEV_SM_CLOCK,  gauge, SM clock frequency (in MHz).
      DCGM_FI_DEV_MEM_CLOCK, gauge, Memory clock frequency (in MHz).
      # DCGM_EXP_CLOCK_EVENTS_COUNT, gauge, Count of clock events within the user-specified time window (see clock-events-count-window-size param).

      # Temperature
      DCGM_FI_DEV_MEMORY_TEMP, gauge, Memory temperature (in C).
      DCGM_FI_DEV_GPU_TEMP,    gauge, GPU temperature (in C).

      # Power
      DCGM_FI_DEV_POWER_USAGE,              gauge, Power draw (in W).
      DCGM_FI_DEV_TOTAL_ENERGY_CONSUMPTION, counter, Total energy consumption since boot (in mJ).

      # PCIE
      DCGM_FI_PROF_PCIE_TX_BYTES,  counter, Total number of bytes transmitted through PCIe TX via NVML.
      DCGM_FI_PROF_PCIE_RX_BYTES,  counter, Total number of bytes received through PCIe RX via NVML.
      DCGM_FI_DEV_PCIE_REPLAY_COUNTER, counter, Total number of PCIe retries.

      # Utilization (the sample period varies depending on the product)
      DCGM_FI_DEV_GPU_UTIL,      gauge, GPU utilization (in %).
      DCGM_FI_DEV_MEM_COPY_UTIL, gauge, Memory utilization (in %).
      DCGM_FI_DEV_ENC_UTIL,      gauge, Encoder utilization (in %).
      DCGM_FI_DEV_DEC_UTIL ,     gauge, Decoder utilization (in %).

      # Errors and violations
      DCGM_FI_DEV_XID_ERRORS,              gauge,   Value of the last XID error encountered.
      # DCGM_FI_DEV_POWER_VIOLATION,       counter, Throttling duration due to power constraints (in us).
      # DCGM_FI_DEV_THERMAL_VIOLATION,     counter, Throttling duration due to thermal constraints (in us).
      # DCGM_FI_DEV_SYNC_BOOST_VIOLATION,  counter, Throttling duration due to sync-boost constraints (in us).
      # DCGM_FI_DEV_BOARD_LIMIT_VIOLATION, counter, Throttling duration due to board limit constraints (in us).
      # DCGM_FI_DEV_LOW_UTIL_VIOLATION,    counter, Throttling duration due to low utilization (in us).
      # DCGM_FI_DEV_RELIABILITY_VIOLATION, counter, Throttling duration due to reliability constraints (in us).
      # DCGM_EXP_XID_ERRORS_COUNT,         gauge,   Count of XID Errors within user-specified time window (see xid-count-window-size param).
      # Memory usage
      DCGM_FI_DEV_FB_FREE, gauge, Frame buffer memory free (in MB).
      DCGM_FI_DEV_FB_USED, gauge, Frame buffer memory used (in MB).

      # ECC
      # DCGM_FI_DEV_ECC_SBE_VOL_TOTAL, counter, Total number of single-bit volatile ECC errors.
      # DCGM_FI_DEV_ECC_DBE_VOL_TOTAL, counter, Total number of double-bit volatile ECC errors.
      # DCGM_FI_DEV_ECC_SBE_AGG_TOTAL, counter, Total number of single-bit persistent ECC errors.
      # DCGM_FI_DEV_ECC_DBE_AGG_TOTAL, counter, Total number of double-bit persistent ECC errors.

      # Retired pages
      # DCGM_FI_DEV_RETIRED_SBE,     counter, Total number of retired pages due to single-bit errors.
      # DCGM_FI_DEV_RETIRED_DBE,     counter, Total number of retired pages due to double-bit errors.
      # DCGM_FI_DEV_RETIRED_PENDING, counter, Total number of pages pending retirement.

      # NVLink
      # DCGM_FI_DEV_NVLINK_CRC_FLIT_ERROR_COUNT_TOTAL, counter, Total number of NVLink flow-control CRC errors.
      # DCGM_FI_DEV_NVLINK_CRC_DATA_ERROR_COUNT_TOTAL, counter, Total number of NVLink data CRC errors.
      # DCGM_FI_DEV_NVLINK_REPLAY_ERROR_COUNT_TOTAL,   counter, Total number of NVLink retries.
      # DCGM_FI_DEV_NVLINK_RECOVERY_ERROR_COUNT_TOTAL, counter, Total number of NVLink recovery errors.
      DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL,            counter, Total number of NVLink bandwidth counters for all lanes

      # VGPU License status
      DCGM_FI_DEV_VGPU_LICENSE_STATUS, gauge, vGPU License status

      # Remapped rows
      DCGM_FI_DEV_UNCORRECTABLE_REMAPPED_ROWS, counter, Number of remapped rows for uncorrectable errors
      DCGM_FI_DEV_CORRECTABLE_REMAPPED_ROWS,   counter, Number of remapped rows for correctable errors
      DCGM_FI_DEV_ROW_REMAP_FAILURE,           gauge,   Whether remapping of rows has failed

      # Static configuration information. These appear as labels on the other metrics
      DCGM_FI_DRIVER_VERSION,        label, Driver Version
      # DCGM_FI_NVML_VERSION,          label, NVML Version
      # DCGM_FI_DEV_BRAND,             label, Device Brand
      # DCGM_FI_DEV_SERIAL,            label, Device Serial Number
      # DCGM_FI_DEV_OEM_INFOROM_VER,   label, OEM inforom version
      # DCGM_FI_DEV_ECC_INFOROM_VER,   label, ECC inforom version
      # DCGM_FI_DEV_POWER_INFOROM_VER, label, Power management object inforom version
      # DCGM_FI_DEV_INFOROM_IMAGE_VER, label, Inforom image version
      # DCGM_FI_DEV_VBIOS_VERSION,     label, VBIOS version of the device

      DCGM_FI_PROF_PIPE_FP64_ACTIVE, gauge, fp64
      DCGM_FI_PROF_PIPE_FP32_ACTIVE, gauge, fp32
      DCGM_FI_PROF_PIPE_FP16_ACTIVE, gauge, fp16
      DCGM_FI_PROF_SM_ACTIVE       , gauge, sm
      DCGM_FI_PROF_SM_OCCUPANCY    , gauge, smo
      DCGM_FI_DEV_FB_TOTAL         , gauge, total
      DCGM_FI_PROF_GR_ENGINE_ACTIVE, gauge, uuh
  {{- end }}
