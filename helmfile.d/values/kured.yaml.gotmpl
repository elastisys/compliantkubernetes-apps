{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}
{{- with .Values.images | dig "kured" "image" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
{{- if or .registry .repository .image .tag .digest }}
image:
  {{- with include "gen.reg-rep-img" . }}
  repository: {{ . }}
  {{- end }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}
{{- end }}

metrics:
  create: {{ .Values.kured.metrics.enabled }}
  interval: {{ .Values.kured.metrics.interval }}
  labels: {{- toYaml .Values.kured.metrics.labels | nindent 4 }}

resources:    {{- toYaml .Values.kured.resources | nindent 2 }}
nodeSelector: {{- toYaml .Values.kured.nodeSelector | nindent 2 }}
affinity:     {{- toYaml .Values.kured.affinity | nindent 2 }}
tolerations:  {{- toYaml .Values.kured.tolerations | nindent 2 }}

configuration:
  rebootMethod: signal
  {{- toYaml .Values.kured.configuration | nindent 2 }}

extraArgs: {{- toYaml .Values.kured.extraArgs | nindent 2 }}

extraEnvVars:
{{- if .Values.kured.extraEnvVars }}
{{- toYaml .Values.kured.extraEnvVars | nindent 2 }}
{{- end }}
{{- if .Values.kured.notification.slack.enabled }}
  - name: KURED_NOTIFY_URL
    valueFrom:
      secretKeyRef:
        name: kured-secret
        key: notifyUrl
{{ end }}

dsAnnotations: {{- toYaml .Values.kured.dsAnnotations | nindent 2 }}

{{- if .Values.kured.notification.slack.enabled }}
slack:
  enabled: {{ .Values.kured.notification.slack.enabled }}
  channel: {{ .Values.kured.notification.slack.channel }}
  botToken: {{ .Values.kured.slack.botToken }}
{{- end }}

hostNetwork: false

containerSecurityContext:
  runAsUser: 0
  runAsGroup: 0
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    add:
    - CAP_KILL
    drop:
    - '*'

podAnnotations:
  # This is needed to allow kured to send a signal to trigger a node reboot
  container.apparmor.security.beta.kubernetes.io/kured: unconfined
