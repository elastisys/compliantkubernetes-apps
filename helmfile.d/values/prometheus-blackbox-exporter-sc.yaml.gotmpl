{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}

{{- with .Values.images | dig "monitoring" "blackboxExporter" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
image:
  {{- with .registry }}
  registry: {{ . }}
  {{- end }}
  {{- with join "/" (compact (list .repository .image)) }}
  repository: {{ . }}
  {{- end }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}

resources: {{- toYaml .Values.prometheusBlackboxExporter.resources | nindent 4 }}

tolerations: {{- toYaml .Values.prometheusBlackboxExporter.tolerations | nindent 4 }}
affinity: {{- toYaml .Values.prometheusBlackboxExporter.affinity | nindent 4 }}

pspEnabled: false

config:
  modules:
    http_2xx:
      http:
        tls_config:
          insecure_skip_verify: {{ not .Values.global.verifyTls }}
    http_400:
      prober: http
      timeout: 5s
      http:
        # We are not logged in, just checking that it can be reached
        valid_status_codes: [400]
        valid_http_versions: ["HTTP/1.0","HTTP/1.1", "HTTP/2.0"]
        follow_redirects: true
        preferred_ip_protocol: "ip4"
        tls_config:
          insecure_skip_verify: true
    http_401:
      prober: http
      timeout: 5s
      http:
        # We are not logged in, just checking that it can be reached
        valid_status_codes: [401]
        valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
        follow_redirects: true
        preferred_ip_protocol: "ip4"
        tls_config:
          insecure_skip_verify: true
    {{- if or (eq .Values.harbor.database.type "external") (eq .Values.harbor.redis.type "external") }}
    tcp_connect:
      prober: tcp
    {{- end }}
service:
  ipDualStack:
    enabled: true
    ipFamilyPolicy: {{ .Values.global.ipFamilyPolicy }}
    ipFamilies: {{ toYaml .Values.global.ipFamilies | nindent 6 }}
serviceMonitor:
  enabled: true
  targets:
    {{- if .Values.prometheusBlackboxExporter.targets.rook }}
    - name: rook
      url: rook-ceph-mgr.rook-ceph.svc.cluster.local:9283/health
      interval: 60s
      scrapeTimeout: 30s
      module: http_2xx
    {{- end }}
    {{- if .Values.prometheusBlackboxExporter.targets.nginx }}
    - name: nginx
      url: ingress-nginx-controller-admission.ingress-nginx.svc.cluster.local:443
      interval: 60s
      scrapeTimeout: 30s
      module: http_400
    {{- end }}
    {{- if .Values.prometheusBlackboxExporter.targets.fluentd }}
    - name: fluentd
      url: http://fluentd-aggregator-aggregator.fluentd-system.svc.cluster.local:9880/fluentd.healthcheck?json=%7B%22ping%22%3A+%22pong%22%7D
      interval: 60s
      scrapeTimeout: 30s
      module: http_2xx
    {{- end }}
    {{- if .Values.prometheusBlackboxExporter.targets.thanosQuery }}
    - name: thanos-query
      url: thanos-query-query.thanos.svc.cluster.local:9090
      interval: 60s
      scrapeTimeout: 30s
      module: http_2xx
    {{- end }}
    {{- if .Values.prometheusBlackboxExporter.targets.thanosReceiver }}
    - name: thanos-internal-receiver
      url: thanos-receiver-receive.thanos.svc.cluster.local:10902/-/ready
      interval: 60s
      scrapeTimeout: 30s
      module: http_2xx
    {{- end }}
    {{- if .Values.prometheusBlackboxExporter.targets.prometheus }}
    - name: prometheus
      url: kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090/-/ready
      interval: 60s
      scrapeTimeout: 30s
      module: http_2xx
    {{- end }}
    - name: dex
      url: https://{{ .Values.dex.subdomain }}.{{ .Values.global.baseDomain }}/healthz
      interval: 60s
      scrapeTimeout: 30s
      module: http_2xx
    - name: grafana
      url: https://{{ .Values.grafana.user.subdomain }}.{{ .Values.global.baseDomain }}/api/health
      interval: 60s
      scrapeTimeout: 30s
      module: http_2xx
    {{- if .Values.harbor.enabled }}
    - name: harbor
      url: https://{{ .Values.harbor.subdomain }}.{{ .Values.global.baseDomain }}/api/v2.0/ping
      interval: 60s
      scrapeTimeout: 30s
      module: http_2xx
    {{- end }}
    - name: opensearch-dashboards
      url: https://{{ .Values.opensearch.dashboards.subdomain }}.{{ .Values.global.baseDomain }}/api/status
      interval: 60s
      scrapeTimeout: 30s
      module: http_401
    {{ if .Values.prometheusBlackboxExporter.customKubeapiTargets }}
    {{ range $kubeapiTarget := .Values.prometheusBlackboxExporter.customKubeapiTargets }}
    - name: {{ $kubeapiTarget.name }}
      url: https://kube-apiserver.{{ $kubeapiTarget.domain }}:/healthz
      interval: 60s
      scrapeTimeout: 30s
      module: http_401
    {{ end }}
    {{ else }}
    - name: user-api-server
      url: https://kube-apiserver.{{ .Values.global.baseDomain }}:/healthz
      interval: 60s
      scrapeTimeout: 30s
      module: http_401
    {{ end }}
    {{- if and .Values.thanos.enabled .Values.thanos.receiver.enabled }}
    - name: thanos-receiver
      url: https://{{ .Values.thanos.receiver.subdomain }}.{{ .Values.global.opsDomain }}
      interval: 60s
      scrapeTimeout: 30s
      module: http_401
    {{- end }}

{{- with .Values.prometheusBlackboxExporter.hostAliases }}
hostAliases:
  {{- range . }}
  - ip: {{ .ip }}
    hostNames:
      {{- range .hostNames }}
      - {{ . }}
      {{- end }}
  {{- end }}
{{- end }}
