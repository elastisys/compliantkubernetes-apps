es:
  # Set to null! This is set through env instead.
  # See https://github.com/justwatchcom/elasticsearch_exporter/issues/307
  uri: https://{{ .Values.opensearch.clusterName }}-master:9200
  all: true
  indices: true
  indices_settings: true
  shards: true
  snapshots: true
  cluster_settings: false
  indices_mappings: true
  {{- if or (contains "m" .Values.opensearch.exporter.serviceMonitor.scrapeTimeout) (contains "h" .Values.opensearch.exporter.serviceMonitor.scrapeTimeout) }}
  {{- fail "scrapeTimeout must only be given in seconds" }}
  {{ else }}
  timeout: {{ .Values.opensearch.exporter.serviceMonitor.scrapeTimeout | trimSuffix "s" | atoi | add -5 }}s
  {{- end }}
  sslSkipVerify: true

# Load credentials from secret, used in uri below
envFromSecret: opensearch-metrics-exporter-user

env:
  ES_USERNAME: $(username)
  ES_PASSWORD: $(password)

serviceMonitor:
  enabled: true
  namespace: opensearch-system
  interval: {{ .Values.opensearch.exporter.serviceMonitor.interval }}
  scrapeTimeout: {{ .Values.opensearch.exporter.serviceMonitor.scrapeTimeout }}
  scheme: http

resources: {{- toYaml .Values.opensearch.exporter.resources | nindent 2 }}

tolerations: {{- toYaml .Values.opensearch.exporter.tolerations | nindent 2 }}

podSecurityPolicies:
  enabled: false

fullnameOverride: "prometheus-opensearch-exporter"

{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}
{{- with .Values.images | dig "opensearch" "exporter" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
image:
  {{- with include "gen.reg-rep-img" . }}
  repository: {{ . }}
  {{- end }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}
