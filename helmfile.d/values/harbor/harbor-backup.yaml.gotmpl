{{ if not (or (eq .Values.objectStorage.type "s3") (eq .Values.objectStorage.type "gcs") (eq .Values.objectStorage.type "azure") ) }}
{{ fail "\nERROR: Harbor backup requires s3 or gcs object storage, see Values.objectStorage.type" }}
{{ end }}
{{ if and .Values.harbor.backup.enabled (eq .Values.harbor.database.type "external") }}
{{ fail "\nERROR: Harbor backup is not available for external database" }}
{{ end }}

dbPassword: {{ .Values.harbor.internal.databasePassword }}
retentionDays: {{ .Values.harbor.backup.retentionDays }}
{{ if eq .Values.objectStorage.type "s3" -}}
s3:
  enabled: true
  accessKey: {{ .Values.objectStorage.s3.accessKey }}
  secretKey: {{ .Values.objectStorage.s3.secretKey }}
  bucket: {{ .Values.objectStorage.buckets.harbor }}
  endpoint: {{ .Values.objectStorage.s3.regionEndpoint }}
{{ else if eq .Values.objectStorage.type "gcs" -}}
# TODO
# Fix harbor backup chart to support gcs
gcs:
  enabled: true
  bucket: {{ .Values.objectStorage.buckets.harbor }}
  keyfileData: |
    {{ .Values.objectStorage.gcs.keyfileData | nindent 4 }}
{{ else if eq .Values.objectStorage.type "azure" -}}
# TODO
# Fix harbor backup chart to support azure
azure:
  enabled: true
  accountname: {{ .Values.objectStorage.azure.accountname }}
  accountkey: {{ .Values.objectStorage.azure.accountkey }}
  container: {{ .Values.objectStorage.buckets.harbor }}
  realm: core.windows.net
{{- end }}

ephemeralBackupStore:
  enabled: {{ .Values.harbor.backup.ephemeralBackupStore.enabled }}
  storageSize: {{ .Values.harbor.backup.ephemeralBackupStore.storageSize }}
