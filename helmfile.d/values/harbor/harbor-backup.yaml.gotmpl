{{ if not (or (eq .Values.objectStorage.type "s3") (eq .Values.objectStorage.type "gcs") (eq .Values.objectStorage.type "azure") ) }}
{{ fail "\nERROR: Harbor backup requires s3, gcs or azure object storage, see Values.objectStorage.type" }}
{{ end }}
{{ if and .Values.harbor.backup.enabled (eq .Values.harbor.database.type "external") }}
{{ fail "\nERROR: Harbor backup is not available for external database" }}
{{ end }}

dbPassword: {{ .Values.harbor.internal.databasePassword }}
retentionDays: {{ .Values.harbor.backup.retentionDays }}
schedule: {{ .Values.harbor.backup.schedule | quote }}
{{ if eq .Values.objectStorage.type "s3" -}}
s3:
  enabled: true
  accessKey: {{ include "componentObjectStorage" (list "harbor" "accessKey" .) }}
  secretKey: {{ include "componentObjectStorage" (list "harbor" "secretKey" .) }}
  bucket: {{ .Values.objectStorage.buckets.harbor }}
  endpoint: {{ .Values.objectStorage.s3.regionEndpoint }}
{{ else if eq .Values.objectStorage.type "gcs" -}}
# TODO
# Fix harbor backup chart to support gcs
gcs:
  enabled: true
  bucket: {{ .Values.objectStorage.buckets.harbor }}
  keyfileData: |
    {{ .Values.objectStorage.gcs.keyfileData | nindent 4 }}
{{ else if eq .Values.objectStorage.type "azure" -}}
azure:
  enabled: true
  storageAccountName: {{ .Values.objectStorage.azure.storageAccountName }}
  storageAccountKey: {{ .Values.objectStorage.azure.storageAccountKey }}
  containerName: {{ .Values.objectStorage.buckets.harbor }}
  realm: core.windows.net
{{- end }}

ephemeralBackupStore:
  enabled: {{ .Values.harbor.backup.ephemeralBackupStore.enabled }}
  storageSize: {{ .Values.harbor.backup.ephemeralBackupStore.storageSize }}

{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}
{{- with .Values.images | dig "harbor" "backupJob" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
image:
  {{- with include "gen.reg-rep-img" . }}
  repository: {{ . }}
  {{- end }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}
