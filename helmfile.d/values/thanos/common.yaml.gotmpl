{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}
# common values for thanos
# all components are disabled and are instead enabled in separate values files
global:
  security:
    allowInsecureImages: true
{{- with .Values.images | dig "thanos" "image" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
  imageRegistry: ""

image:
  registry: "{{ .registry }}"
  {{- with include "gen.rep-img" . }}
  repository: {{ . }}
  {{- end }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}

bucketweb:
  enabled: false
  networkPolicy:
    enabled: false
  pdb:
    create: false
compactor:
  enabled: false
  networkPolicy:
    enabled: false
  pdb:
    create: false
receive:
  enabled: false
  networkPolicy:
    enabled: false
  pdb:
    create: false
receiveDistributor:
  enabled: false
  networkPolicy:
    enabled: false
  pdb:
    create: false
ruler:
  enabled: false
  networkPolicy:
    enabled: false
  pdb:
    create: false
query:
  enabled: false
  networkPolicy:
    enabled: false
  pdb:
    create: false
queryFrontend:
  enabled: false
  networkPolicy:
    enabled: false
  pdb:
    create: false
storegateway:
  enabled: false
  networkPolicy:
    enabled: false
  pdb:
    create: false
