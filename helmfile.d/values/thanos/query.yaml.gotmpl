existingObjstoreSecret: thanos-objectstorage-secret-objstore-secret

query:
  networkPolicy:
    enabled: false
  enabled: true
  replicaCount: {{ .Values.thanos.query.replicaCount }}
  topologySpreadConstraints: {{- toYaml .Values.thanos.query.topologySpreadConstraints | nindent 4 }}
  affinity: {{- toYaml .Values.thanos.query.affinity | nindent 4 }}

  service:
    additionalHeadless: true

  extraFlags:
    - "--query.auto-downsampling"

  dnsDiscovery:
    enabled: false

  stores:
    - "thanos-receiver-storegateway:10901"
    - dnssrv+_grpc._tcp.thanos-receiver-receive-headless.thanos.svc
    - dnssrv+_grpc._tcp.thanos-receiver-ruler-headless.thanos.svc

  replicaLabel:
    - replica
    - prometheus_replica

  resources: {{- toYaml .Values.thanos.query.resources | nindent 4 }}

  containerSecurityContext:
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault

queryFrontend:
  networkPolicy:
    enabled: false
  enabled: true
  resources: {{- toYaml .Values.thanos.queryFrontend.resources | nindent 4 }}

  containerSecurityContext:
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault

metrics:
  enabled: {{ .Values.thanos.metrics.enabled }}
  serviceMonitor:
    enabled: {{ .Values.thanos.metrics.serviceMonitor.enabled }}

bucketweb:
  networkPolicy:
    enabled: false
compactor:
  networkPolicy:
    enabled: false
receive:
  networkPolicy:
    enabled: false
ruler:
  networkPolicy:
    enabled: false
storegateway:
  networkPolicy:
    enabled: false
