opensearch:
  clusterService: {{ .Values.opensearch.clusterName }}-master

securityConfig:
  config.yml: |-
    _meta:
      type: "config"
      config_version: 2

    config:
      dynamic:
        kibana:
          server_username: dashboards
        authc:
          basic_internal_auth_domain:
            description: "Authenticate via HTTP Basic against internal users database"
            http_enabled: true
            transport_enabled: true
            order: 0
            http_authenticator:
              type: basic
              challenge: false
            authentication_backend:
              type: internal

          {{ if .Values.opensearch.sso.enabled -}}
          openid_auth_domain:
            description: "OpenID Connect"
            http_enabled: true
            transport_enabled: true
            order: 1
            http_authenticator:
              type: openid
              challenge: false
              config:
                openid_connect_url: http://dex.dex.svc.cluster.local:5556/.well-known/openid-configuration
                openid_connect_idp:
                  enable_ssl: false
                  verify_hostnames: false
                subject_key: {{ .Values.opensearch.sso.subjectKey }}
                roles_key: {{ .Values.opensearch.sso.rolesKey }}
            authentication_backend:
              type: noop
          {{- end }}

  internal_users.yml: |-
    _meta:
      type: "internalusers"
      config_version: 2

    admin:
      hash: {{ .Values.opensearch.adminHash }}
      reserved: true
      opendistro_security_roles:
      - "all_access"
      - "manage_snapshots"
      description: "Admin user"

    dashboards:
      hash: {{ .Values.opensearch.dashboardsHash }}
      reserved: true
      opendistro_security_roles:
      - "kibana_server"
      description: "OpenSearch Dashboards user"

    configurer:
      hash: {{ .Values.opensearch.configurerHash }}
      reserved: true
      opendistro_security_roles:
      - "kibana_user"
      - "configurer"
      description: "Configurer user"

  roles.yml: |-
    _meta:
      type: "roles"
      config_version: 2

    # Allows users to view monitors, destinations and alerts
    alerting_read_access:
      reserved: false
      cluster_permissions:
        - cluster:admin/opendistro/alerting/alerts/get
        - cluster:admin/opendistro/alerting/destination/get
        - cluster:admin/opendistro/alerting/monitor/get
        - cluster:admin/opendistro/alerting/monitor/search

    # Allows users to view and acknowledge alerts
    alerting_ack_alerts:
      reserved: false
      cluster_permissions:
        - cluster:admin/opendistro/alerting/alerts/*

    # Allows users to use all alerting functionality
    alerting_full_access:
      reserved: false
      cluster_permissions:
        - cluster_monitor
        - cluster:admin/opendistro/alerting/*
        - cluster:admin/opensearch/notifications/*
      index_permissions:
        - index_patterns:
            - kubernetes-*
            - kubeaudit-*
          allowed_actions:
            - indices_monitor
            - indices:admin/aliases/get
            - indices:admin/mappings/get

    # Can probably be locked down further
    configurer:
      static: false
      hidden: false
      reserved: false
      cluster_permissions:
      - "cluster:admin/repository/put"
      - "cluster:admin/repository/get"
      - "cluster_manage_index_templates"
      - "cluster:admin/opendistro/ism/policy/*"
      - "cluster:admin/snapshot/get"
      - "cluster:admin/snapshot/create"
      - "cluster:admin/snapshot/delete"
      - "cluster:admin/opensearch/snapshot_management/policy/get"
      - "cluster:admin/opensearch/snapshot_management/policy/search"
      - "cluster:admin/opensearch/snapshot_management/policy/write"
      - indices:admin/index_template/put
      index_permissions:
      - index_patterns:
        - "*"
        allowed_actions:
        - "create_index"
        - "crud"
        - "manage_aliases"
        - "indices:admin/index_template/*"
        - "indices:admin/opensearch/ism/managedindex"
        - "indices:admin/rollover"
        - "indices:monitor/stats"

  # Needed
  roles_mapping.yml: |-
    _meta:
      type: "rolesmapping"
      config_version: 2

  # Needed
  tenants.yml: |-
    _meta:
      type: "tenants"
      config_version: 2

  # Needed
  action_groups.yml: |-
    _meta:
      type: "actiongroups"
      config_version: 2

  # Optional
  nodes_dn.yml: |-
    _meta:
      type: "nodesdn"
      config_version: 2

  # Optional
  whitelist.yml: |-
    _meta:
      type: "whitelist"
      config_version: 2
    config:
      enabled: false

activeDeadlineSeconds: {{ .Values.opensearch.securityadmin.activeDeadlineSeconds }}

resources: {{- toYaml .Values.opensearch.securityadmin.resources | nindent 2 }}

{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}
{{- with .Values.images | dig "opensearch" "image" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
image:
  {{- with include "gen.reg-rep-img" . }}
  repository: {{ . }}
  {{- end }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}
