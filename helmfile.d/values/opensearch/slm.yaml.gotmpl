{{ if not (or (eq .Values.objectStorage.type "s3") (eq .Values.objectStorage.type "gcs") (eq .Values.objectStorage.type "azure") ) }}
{{ fail "\nERROR: OpenSearch slm requires s3 or gcs or azure object storage, see Values.objectStorage.type" }}
{{ end }}

opensearch:
  userSecret: opensearch-snapshotter-user
  clusterEndpoint: {{ .Values.opensearch.clusterName }}-master:9200

startingDeadlineSeconds: {{ .Values.opensearch.snapshot.retentionStartingDeadlineSeconds }}
activeDeadlineSeconds: {{ .Values.opensearch.snapshot.retentionActiveDeadlineSeconds }}

schedule: {{ .Values.opensearch.snapshot.retentionSchedule | quote }}

snapshotRepository: {{ .Values.opensearch.snapshot.repository }}

snapshots:
  min: {{ .Values.opensearch.snapshot.min }}
  max: {{ .Values.opensearch.snapshot.max }}
  maxAgeSeconds: {{ .Values.opensearch.snapshot.ageSeconds | quote }}
  maxRequestSeconds: {{ .Values.opensearch.snapshot.maxRequestSeconds | quote }}

resources: {{- toYaml .Values.opensearch.snapshot.retentionResources | nindent 2 }}

{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}
{{- with .Values.images | dig "opensearch" "slmCronjob" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
image:
  {{- with include "gen.reg-rep-img" . }}
  repository: {{ . }}
  {{- end }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}
