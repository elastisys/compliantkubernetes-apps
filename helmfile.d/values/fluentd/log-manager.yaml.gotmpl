{{- if eq .Values.objectStorage.type "azure"}}
azure:
  storageAccountName: {{ .Values.objectStorage.azure.storageAccountName }}
  storageAccountKey: {{ .Values.objectStorage.azure.storageAccountKey }}
  enabled: true
  azcopyBufferGB: {{ .Values.fluentd.logManager.compaction.azureCopyBufferGB }}
  azcopyConcurrency: {{ .Values.fluentd.logManager.compaction.azureCopyConcurrency }}
{{- else if eq .Values.objectStorage.type "s3"}}
s3:
  forcePathStyle: {{ .Values.objectStorage.s3.forcePathStyle }}
  regionEndpoint: {{ .Values.objectStorage.s3.regionEndpoint }}
  accessKey: {{ include "componentObjectStorage" (list "fluentd" "accessKey" .) }}
  secretKey: {{ include "componentObjectStorage" (list "fluentd" "secretKey" .) }}
  enabled: true
{{- end }}

instances:
  {{- if .Values.fluentd.audit.enabled }}
  {{- range .Values.global.clustersMonitoring }}
  - bucket: {{ $.Values.objectStorage.buckets.audit }}
    name: audit
    prefix: {{ . }}
    compaction:
      enabled: {{ $.Values.fluentd.audit.compaction.enabled }}
      ephemeralVolumes:
        enabled: {{ $.Values.fluentd.audit.compaction.ephemeralVolumes.enabled }}
      schedule: {{ $.Values.fluentd.audit.compaction.schedule }}
      days: {{ $.Values.fluentd.audit.compaction.days }}
    retention:
      enabled: {{ $.Values.fluentd.audit.retention.enabled }}
      schedule: {{ $.Values.fluentd.audit.retention.schedule }}
      days: {{ $.Values.fluentd.audit.retention.days }}
  {{- end }}
  {{- end }}
  {{- if .Values.fluentd.enabled }}
  {{- if .Values.fluentd.audit.enabled }}
  - bucket: {{ .Values.objectStorage.buckets.audit }}
    name: audit
    prefix: {{ .Values.global.clusterName }}
    compaction:
      enabled: {{ .Values.fluentd.audit.compaction.enabled }}
      ephemeralVolumes:
        enabled: {{ .Values.fluentd.audit.compaction.ephemeralVolumes.enabled }}
      schedule: {{ .Values.fluentd.audit.compaction.schedule }}
      days: {{ .Values.fluentd.audit.compaction.days }}
    retention:
      enabled: {{ .Values.fluentd.audit.retention.enabled }}
      schedule: {{ .Values.fluentd.audit.retention.schedule }}
      days: {{ .Values.fluentd.audit.retention.days }}
  {{- end }}
  {{- if .Values.fluentd.scLogs.enabled }}
  - bucket: {{ .Values.objectStorage.buckets.scFluentd }}
    name: sc-logs
    prefix: logs
    compaction:
      enabled: {{ .Values.fluentd.scLogs.compaction.enabled }}
      ephemeralVolumes:
        enabled: {{ .Values.fluentd.scLogs.compaction.ephemeralVolumes.enabled }}
      schedule: {{ .Values.fluentd.scLogs.compaction.schedule }}
      days: {{ .Values.fluentd.scLogs.compaction.days }}
    retention:
      enabled: {{ .Values.fluentd.scLogs.retention.enabled }}
      schedule: {{ .Values.fluentd.scLogs.retention.schedule }}
      days: {{ .Values.fluentd.scLogs.retention.days }}
  {{- end }}
  {{- end }}

storageClassName: {{ .Values.storageClasses.default }}

compaction:
  resources: {{- toYaml .Values.fluentd.logManager.compaction.resources | nindent 4 }}
  volume: {{- toYaml .Values.fluentd.logManager.compaction.volume | nindent 4 }}

retention:
  resources: {{- toYaml .Values.fluentd.logManager.retention.resources | nindent 4 }}

tolerations: {{- toYaml .Values.fluentd.logManager.tolerations | nindent 2 }}
nodeSelector: {{- toYaml .Values.fluentd.logManager.nodeSelector | nindent 2 }}
affinity: {{- toYaml .Values.fluentd.logManager.affinity | nindent 2 }}

{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}
{{- with .Values.images | dig "fluentd" "logManager" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
image:
  pullPolicy: IfNotPresent
  {{- with include "gen.reg-rep-img" . }}
  repository: {{ . }}
  {{- end }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}
