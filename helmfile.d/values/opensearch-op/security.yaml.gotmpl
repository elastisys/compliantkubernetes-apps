opensearch:
    securityConfig:
        config.yml: |-
            _meta:
                type: "config"
                config_version: 2

            config:
                dynamic:
                    kibana:
                        server_username: dashboards
                    authc:
                        basic_internal_auth_domain:
                            description: "Authenticate via HTTP Basic against internal users database"
                            http_enabled: true
                            transport_enabled: true
                            order: 0
                            http_authenticator:
                                type: basic
                                challenge: false
                            authentication_backend:
                                type: internal

                        {{ if .Values.opensearch.sso.enabled -}}
                        openid_auth_domain:
                            description: "OpenID Connect"
                            http_enabled: true
                            transport_enabled: true
                            order: 1
                            http_authenticator:
                                type: openid
                                challenge: false
                                config:
                                    openid_connect_url: http://dex.dex.svc.cluster.local:5556/.well-known/openid-configuration
                                    openid_connect_idp:
                                        enable_ssl: false
                                        verify_hostnames: false
                                    subject_key: {{ .Values.opensearch.sso.subjectKey }}
                                    roles_key: {{ .Values.opensearch.sso.rolesKey }}
                            authentication_backend:
                                type: noop
                        {{- end }}

        internal_users.yml: |-
            _meta:
                type: "internalusers"
                config_version: 2

            admin:
                hash: {{ .Values.opensearch.adminHash }}
                reserved: true
                opendistro_security_roles:
                - "all_access"
                - "manage_snapshots"
                description: "Admin user"

            dashboards:
                hash: {{ .Values.opensearch.dashboardsHash }}
                reserved: true
                opendistro_security_roles:
                - "kibana_server"
                description: "OpenSearch Dashboards user"

            configurer:
                hash: {{ .Values.opensearch.configurerHash }}
                reserved: true
                opendistro_security_roles:
                - "kibana_user"
                - "configurer"
                description: "Configurer user"


        roles.yml: |-
            _meta:
                type: "roles"
                config_version: 2


        # Needed
        roles_mapping.yml: |-
            _meta:
                type: "rolesmapping"
                config_version: 2
            {{- range $mapping := .Values.opensearch.extraRoleMappings }}
            {{ $mapping.mapping_name }}:
                reserved: false
                users:
                {{ range $user := $mapping.definition.users }}
                - {{ $user }}
                {{ end }}
                {{- if dig "definition" "backend_roles" false $mapping }}
                backend_roles:
                {{ range $backend_roles := $mapping.definition.backend_roles }}
                - {{ $backend_roles }}
                {{ end }}
                {{ end }}
            {{ end }}

        # Needed
        tenants.yml: |-
            _meta:
                type: "tenants"
                config_version: 2

        # Needed
        action_groups.yml: |-
            _meta:
                type: "actiongroups"
                config_version: 2

        # Optional
        nodes_dn.yml: |-
            _meta:
                type: "nodesdn"
                config_version: 2

        # Optional
        whitelist.yml: |-
            _meta:
                type: "whitelist"
                config_version: 2
            config:
                enabled: false
