{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}

namespaceOverride: kyverno

admissionController:
  replicas: 3
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  container:
    {{- with .Values.images | dig "kyverno" "main" "" }}
    {{- with merge (include "container_uri.parse" . | fromJson) $global }}
    {{- if or .registry .repository .image .tag .digest }}
    image:
      {{- with .registry }}
      registry: {{ . }}
      {{- end}}
      {{- if or .repository .image }}
      repository: {{ join "/" (compact (list .repository .image)) }}
      {{- end }}
      {{- if or .tag .digest }}
      tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
      {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
    resources: {{- toYaml .Values.kyverno.resources | nindent 8 }}

  {{- with .Values.images | dig "kyverno" "init" "" }}
  {{- with merge (include "container_uri.parse" . | fromJson) $global }}
  {{- if or .registry .repository .image .tag .digest }}
  initContainer:
    image:
      {{- with .registry }}
      registry: {{ . }}
      {{- end}}
      {{- if or .repository .image }}
      repository: {{ join "/" (compact (list .repository .image)) }}
      {{- end }}
      {{- if or .tag .digest }}
      tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
      {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}

  nodeSelector: {{- toYaml .Values.kyverno.nodeSelector | nindent 4 }}
  podAffinity:  {{- toYaml .Values.kyverno.podAffinity | nindent 4 }}
  nodeAffinity: {{- toYaml .Values.kyverno.nodeAffinity | nindent 4 }}
  tolerations: {{- toYaml .Values.kyverno.tolerations | nindent 4 }}
  topologySpreadConstraints: {{- toYaml .Values.kyverno.topologySpreadConstraints | nindent 4 }}
backgroundController:
  enabled: false
cleanupController:
  enabled: false
reportsController:
  enabled: false

policyReportsCleanup:
  enabled: false

features:
  admissionReports:
    enabled: false
  aggregateReports:
    enabled: false
  policyReports:
    enabled: false
  reporting:
    validate: false
    mutate: false
    mutateExisting: false
    imageVerify: false
    generate: false
  backgroundScan:
    enabled: false

crds:
  groups:
    kyverno:
      cleanuppolicies: false
      clustercleanuppolicies: false
  migration:
    resources:
      - clusterpolicies.kyverno.io
      - globalcontextentries.kyverno.io
      - policies.kyverno.io
      - policyexceptions.kyverno.io
      - updaterequests.kyverno.io
    {{- with .Values.images | dig "kyverno" "crdsMigration" "" }}
    {{- with merge (include "container_uri.parse" . | fromJson) $global }}
    {{- if or .registry .repository .image .tag .digest }}
    image:
      {{- with .registry }}
      registry: {{ . }}
      {{- end}}
      {{- if or .repository .image }}
      repository: {{ join "/" (compact (list .repository .image)) }}
      {{- end }}
      {{- if or .tag .digest }}
      tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
      {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}



{{- with .Values.images | dig "kyverno" "webhooksCleanup" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
{{- if or .registry .repository .image .tag .digest }}
webhooksCleanup:
  image:
    {{- with .registry }}
    registry: {{ . }}
    {{- end}}
    {{- if or .repository .image }}
    repository: {{ join "/" (compact (list .repository .image)) }}
    {{- end }}
    {{- if or .tag .digest }}
    tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
    {{- end }}
{{- end }}
{{- end }}
{{- end }}
