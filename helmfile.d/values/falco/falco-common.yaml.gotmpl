falco:
  json_output: true
  syscall_event_drops:
    # Should be removed when fixed. Maybe in 2024 https://github.com/falcosecurity/falco/issues/2657
    actions:
      - ignore
  grpc:
    enabled: true
    bind_address: "unix:///var/run/falco/falco.sock"
    threadiness: 8

  grpc_output:
    enabled: true

  rules_files:
    {{- if .Values.falco.rulesFiles.default.enabled }}
    - /etc/falco/falco_rules.yaml
    {{end}}
    {{- if .Values.falco.rulesFiles.incubating.enabled }}
    - /etc/falco/falco-incubating_rules.yaml
    {{end}}
    {{- if .Values.falco.rulesFiles.sandbox.enabled }}
    - /etc/falco/falco-sandbox_rules.yaml
    {{end}}
    - /etc/falco/falco_rules.local.yaml
    - /etc/falco/rules.d

  container_engines:
    cri:
      enabled: true

metrics:
  enabled: true
  include_empty_values: true
  interval: 15m

serviceMonitor:
  create: true

tty: {{ .Values.falco.tty }}

{{- if eq .Values.falco.driver.kind "kmod" }}
containerSecurityContext:
  privileged: true
  allowPrivilegeEscalation: true
{{- end }}

podSecurityContext:
  runAsUser: 0

driver:
  kind: {{ .Values.falco.driver.kind }}
  {{- if eq .Values.falco.driver.kind "ebpf" }}
  ebpf:
    {{- with .Values.falco.driver.ebpf.path }}
    path: {{ . }}
    {{- end }}
    hostNetwork: {{ .Values.falco.driver.ebpf.hostNetwork }}
    leastPrivileged: true
  {{- else if eq .Values.falco.driver.kind "modern-bpf" }}
  modern_bpf:
    leastPrivileged: true
  {{- end }}
  loader:
    initContainer:
      securityContext:
        runAsUser: 0
        privileged: true
        allowPrivilegeEscalation: true
      {{- with .Values.falco.driver.module.repoURL }}
      env:
      - name: FALCOCTL_DRIVER_NAME
        value: {{ . }}
      {{- end }}

resources: {{- toYaml .Values.falco.resources | nindent 2  }}
nodeSelector: {{- toYaml .Values.falco.nodeSelector | nindent 2  }}
affinity: {{- toYaml .Values.falco.affinity | nindent 2  }}
tolerations: {{- toYaml .Values.falco.tolerations | nindent 2  }}

falcoctl:
  artifact:
    install:
      enabled: {{ .Values.falco.artifact.install.enabled }}
    follow:
      enabled: false
  config:
    artifact:
      install:
        refs:
          {{- if .Values.falco.rulesFiles.default.enabled }}
          - falco-rules:{{.Values.falco.rulesFiles.default.version}}
          {{end}}
          {{- if .Values.falco.rulesFiles.incubating.enabled }}
          - falco-incubating-rules:{{.Values.falco.rulesFiles.incubating.version}}
          {{end}}
          {{- if .Values.falco.rulesFiles.sandbox.enabled }}
          - falco-sandbox-rules:{{.Values.falco.rulesFiles.sandbox.version}}
          {{end}}
    {{- with .Values.falco.customIndexes }}
    indexes:
      {{- toYaml . | nindent 6 }}
    {{- end }}
customRules:
  {{- if .Values.falco.customRules }}
    {{ toYaml .Values.falco.customRules | nindent 2}}
  {{- end }}
  overwrites.yaml: |-
    {{- if .Values.falco.rulesFiles.default.enabled }}
    # Dropping these rules since they are a relatively weak indication of intrusion.
    # They would also require a significant amount of tuning before they are really useful.
    - rule: Read sensitive file trusted after startup
      enabled: false
      override:
        enabled: replace
    - rule: Read sensitive file untrusted
      enabled: false
      override:
        enabled: replace

    # Dropping these rules since they produce significant spam due to false positives.
    # For the same reasons they are also not a strong indication of intrusion.
    - rule: Terminal shell in container
      enabled: false
      override:
        enabled: replace
    - rule: Contact K8S API Server From Container
      enabled: false
      override:
        enabled: replace
    - rule: Redirect STDOUT/STDIN to Network Connection in Container
      enabled: false
      override:
        enabled: replace

    # This will be added in a later falco rules version as well
    # The fix was added upstream here (with a new condition): https://github.com/falcosecurity/rules/pull/177
    - macro: allowed_clear_log_files
      condition: (
        proc.name=containerd and (
          fd.name startswith "/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots/" or
          fd.name startswith "/var/lib/containerd/tmpmounts/"
        ))

    # Adding a repository to this list will add an exception to the rules:
    # Run shell untrusted
    - list: trusted_image_repositories
      items:
        - docker.io/calico/ctl
        - docker.io/elastisys/curl-jq
        - docker.io/jaegertracing/jaeger-operator
        - docker.io/kiwigrid/k8s-sidecar
        - docker.io/library/rabbitmq
        - docker.io/openpolicyagent/gatekeeper
        - docker.io/openpolicyagent/gatekeeper-crds
        - docker.io/rabbitmqoperator/cluster-operator
        - docker.io/rook/ceph
        - docker.io/velero/velero
        - gcr.io/k8s-staging-multitenancy/hnc-manager
        - gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/resolvers
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook
        - ghcr.io/dexidp/dex
        - ghcr.io/elastisys/argocd-managed-namespaces-manager
        - ghcr.io/elastisys/calico-accountant
        - ghcr.io/elastisys/fluentd
        - ghcr.io/elastisys/logical-backup
        - ghcr.io/elastisys/spilo-15
        - ghcr.io/elastisys/spilo-16
        - ghcr.io/kiwigrid/k8s-sidecar
        - ghcr.io/kubereboot/kured
        - mcr.microsoft.com/k8s/azureserviceoperator
        - mirror.gcr.io/aquasec/node-collector
        - mirror.gcr.io/aquasec/trivy
        - mirror.gcr.io/aquasec/trivy-operator
        - quay.io/argoproj/argocd
        - quay.io/calico/apiserver
        - quay.io/calico/cni
        - quay.io/calico/kube-controllers
        - quay.io/calico/node
        - quay.io/calico/typha
        - quay.io/ceph/ceph
        - quay.io/cephcsi/cephcsi
        - quay.io/jetstack/cert-manager-controller
        - quay.io/jetstack/cert-manager-webhook
        - quay.io/kiwigrid/k8s-sidecar
        - quay.io/metallb/controller
        - quay.io/prometheus/prometheus
        - quay.io/tigera/operator
        - registry.k8s.io/autoscaling/cluster-autoscaler
        - registry.k8s.io/capi-openstack/capi-openstack-controller
        - registry.k8s.io/cluster-api-azure/cluster-api-azure-controller
        - registry.k8s.io/cluster-api/cluster-api-controller
        - registry.k8s.io/cluster-api/kubeadm-bootstrap-controller
        - registry.k8s.io/cluster-api/kubeadm-control-plane-controller
        - registry.k8s.io/ingress-nginx/controller
        - registry.k8s.io/ingress-nginx/controller-chroot
        - registry.k8s.io/kube-state-metrics/kube-state-metrics
        - registry.k8s.io/sig-storage/csi-attacher
        - registry.k8s.io/sig-storage/csi-provisioner
        - registry.k8s.io/sig-storage/csi-resizer
        - registry.k8s.io/sig-storage/csi-snapshotter

    # Run shell untrusted
    - macro: user_shell_container_exclusions
      condition: ( container.image.repository in (trusted_image_repositories) )

    {{- if and .Values.calicoAccountant.enabled (eq .Values.calicoAccountant.backend "nftables") }}

    # Drop and execute new binary in container
    - list: known_drop_and_execute_containers
      items:
        - ghcr.io/elastisys/calico-accountant
    {{- end }}
    {{- end }}

    {{- if .Values.falco.rulesFiles.incubating.enabled }}

    # Change thread namespace
    - macro: user_known_change_thread_namespace_activities
      condition: (
        container.image.repository = ghcr.io/kubereboot/kured
        )

    - rule: Change namespace privileges via unshare
      condition: and not (
          (k8s.ns.name = kube-system and
          k8s.pod.name startswith calico-node) or
          (k8s.ns.name = monitoring and
          k8s.pod.name startswith prometheus-kube-prometheus-stack-prometheus)
        )
      override:
        condition: append

    # Non sudo setuid
    - macro: user_known_non_sudo_setuid_conditions
      condition: or container.image.repository in (
          quay.io/prometheuscommunity/elasticsearch-exporter,
          docker.io/jaegertracing/jaeger-query,
          docker.io/library/redis,
          quay.io/argoproj/argocd
        ) or (
          container.id = host
        )
      override:
        condition: append

    # Contact EC2 Instance Metadata Service From Container
    - macro: ec2_metadata_containers
      condition: (
          container.image.repository = ghcr.io/zalando/spilo-15 or
          container.image.repository = ghcr.io/elastisys/spilo-15 or
          container.image.repository = gcr.io/k8s-staging-multitenancy/hnc-manager or
          container.image.repository = docker.io/k8scloudprovider/cinder-csi-plugin
        )

    # Launch Package Management Process in Container
    - macro: user_known_package_manager_in_container
      condition: (
          container.image.repository = ghcr.io/elastisys/fluentd
        )

    # Set Setuid or Setgid bit
    - macro: user_known_set_setuid_or_setgid_bit_conditions
      condition: (
          container.image.repository = ghcr.io/zalando/spilo-15 or
          container.image.repository = ghcr.io/elastisys/spilo-15 or
          container.image.repository = quay.io/calico/cni or
          proc.name = containerd
        )

    # Unexpected UDP Traffic
    - macro: expected_udp_traffic
      condition: or container.image.repository in (
          docker.io/bitnami/fluentd,
          ghcr.io/elastisys/compliantkubernetes-apps-log-manager,
          ghcr.io/elastisys/logical-backup,
          docker.io/elastisys/rabbitmqadmin,
          ghcr.io/zalando/spilo-15,
          ghcr.io/elastisys/spilo-15
        ) or (
          proc.pname = systemd and proc.name = check-new-relea
        ) or (
          proc.name = iptables and user.name = root
        )
      override:
        condition: append

    # System procs network activity
    - macro: user_expected_system_procs_network_activity_conditions
      condition: (
          container.image.repository = docker.io/library/redis or
          container.image.repository = quay.io/calico/cni
        )

    # Launch Privileged Container
    - macro: user_privileged_containers
      condition: container.image.repository in (
          ghcr.io/elastisys/logical-backup,
          quay.io/calico/pod2daemon-flexvol,
          ghcr.io/elastisys/calico-accountant,
          docker.io/k8scloudprovider/cinder-csi-plugin,
          quay.io/calico/cni,
          docker.io/velero/velero
        )

    # DB program spawned process
    - macro: user_known_db_spawned_processes
      condition: (
          container.image.repository = ghcr.io/zalando/spilo-15 or
          container.image.repository = ghcr.io/elastisys/spilo-15
        )

    # Schedule Cron Jobs
    - macro: user_known_cron_jobs
      condition: (
          container.image.repository = ghcr.io/zalando/spilo-15 or
          container.image.repository = ghcr.io/elastisys/spilo-15
        )

    # Contact cloud metadata service from container
    - macro: user_known_metadata_access
      condition: or (
          container.image.repository = gcr.io/k8s-staging-multitenancy/hnc-manager or
          container.image.repository = ghcr.io/zalando/spilo-15 or
          container.image.repository = ghcr.io/elastisys/spilo-15
        )
      override:
        condition: append
    {{- end }}

    {{- if .Values.falco.rulesFiles.sandbox.enabled }}
    # Decoding Payload in Container
    - list: known_decode_payload_containers
      items: [ghcr.io/aquasecurity/trivy]

    # Mkdir binary dirs
    - macro: user_known_mkdir_bin_dir_activities
      condition: (
          container.image.repository = registry.k8s.io/kube-proxy
        )

    # Modify binary dirs
    - macro: user_known_modify_bin_dir_activities
      condition: (
          container.image.repository = registry.k8s.io/kube-proxy
        )

    # Kubernetes Client Tool Launched in Container
    - macro: user_known_k8s_client_container
      condition: or (
          container.image.repository = ghcr.io/elastisys/argocd-managed-namespaces-manager or
          container.image.repository = ghcr.io/zalando/spilo-15 or
          container.image.repository = ghcr.io/elastisys/spilo-15
        ) or (
          proc.cmdline = "kubectl get rolebindings --all-namespaces -o json"
        )
      override:
        condition: append

    # Write below etc
    - macro: user_known_write_etc_conditions
      condition: or (
          container.image.repository = quay.io/prometheus-operator/prometheus-config-reloader or
          container.image.repository = ghcr.io/zalando/spilo-15 or
          container.image.repository = ghcr.io/elastisys/spilo-15
        )
      override:
        condition: append

    # Write below root
    - macro: user_known_write_below_root_activities
      condition: (
          container.image.repository = ghcr.io/elastisys/logical-backup
        )

    # Launch Sensitive Mount Container
    - macro: user_sensitive_mount_containers
      condition: (
          container.image.repository = quay.io/prometheus/node-exporter or
          container.image.repository = docker.io/k8scloudprovider/cinder-csi-plugin
        )

    # Mount Launched in Privileged Container
    - macro: user_known_mount_in_privileged_containers
      condition: (
          container.image.repository = docker.io/k8scloudprovider/cinder-csi-plugin
        )
    {{- end }}

falcosidekick:
  enabled: {{ .Values.falco.alerts.enabled }}
  serviceMonitor:
    enabled: {{ .Values.falco.alerts.enabled }}
  config:
    debug: false
    {{ if eq .Values.falco.alerts.type "slack" }}
    slack:
      webhookurl: {{ .Values.falco.alerts.slackWebhook }}
      outputformat: "all"
      footer: ""
      icon: ""
      minimumpriority: {{ .Values.falco.alerts.priority }}
      messageformat: "Falco Alert : rule *{{`{{ .Rule }}`}}*"
    {{ end }}

  resources:    {{- toYaml .Values.falco.falcoSidekick.resources | nindent 4  }}
  nodeSelector: {{- toYaml .Values.falco.falcoSidekick.nodeSelector | nindent 4  }}
  affinity:     {{- toYaml .Values.falco.falcoSidekick.affinity | nindent 4  }}
  tolerations:  {{- toYaml .Values.falco.falcoSidekick.tolerations | nindent 4  }}

grafana:
  # -- dashboards contains configuration for grafana dashboards.
  dashboards:
    # -- enabled specifies whether the dashboards should be deployed.
    enabled: true
