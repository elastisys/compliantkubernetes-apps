s3:
  region: {{ .Values.objectStorage.s3.region | quote }}
  regionEndpoint: {{ .Values.objectStorage.s3.regionEndpoint | quote }}
  accessKey: {{ .Values.objectStorage.s3.accessKey | quote }}
  secretKey: {{ .Values.objectStorage.s3.secretKey | quote }}
  buckets: {{ values .Values.objectStorage.buckets | sortAlpha | toYaml | nindent 2 }}
  forcePathStyle: {{ .Values.objectStorage.s3.forcePathStyle }}

serviceMonitor:
  interval: {{ .Values.s3Exporter.interval }}
  scrapeTimeout: {{ .Values.s3Exporter.scrapeTimeout }}

resources: {{- toYaml .Values.s3Exporter.resources | nindent 2  }}
nodeSelector: {{- toYaml .Values.s3Exporter.nodeSelector | nindent 2  }}
tolerations: {{- toYaml .Values.s3Exporter.tolerations | nindent 2  }}
affinity: {{- toYaml .Values.s3Exporter.affinity | nindent 2  }}

{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}

{{- with .Values.images | dig "monitoring" "s3Exporter" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
image:
  {{- with include "gen.reg-rep-img" . }}
  repository: {{ . }}
  {{- end }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}
