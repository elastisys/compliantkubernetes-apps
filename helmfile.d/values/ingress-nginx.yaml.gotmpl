controller:
  ingressClassResource:
    default: true

  watchIngressWithoutClass: true
  extraArgs: {{- toYaml .Values.ingressNginx.controller.extraArgs | nindent 4 }}
  extraEnvs: {{- toYaml .Values.ingressNginx.controller.extraEnvs | nindent 4 }}

  # NGINX configuration, ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/
  config:
    annotations-risk-level: {{ .Values.ingressNginx.controller.config.annotationsRiskLevel | quote }}
    disable-ipv6-dns: "true"
    client-body-buffer-size: "256k"
    proxy-body-size: "200m"
    proxy-buffer-size: "8k"
    use-proxy-protocol: {{ .Values.ingressNginx.controller.config.useProxyProtocol | quote }}
    {{- if and .Values.externalTrafficPolicy.local .Values.externalTrafficPolicy.whitelistRange.global }}
    whitelist-source-range: {{ .Values.externalTrafficPolicy.whitelistRange.global }}
    {{- end }}
    {{- with .Values.ingressNginx.controller.additionalConfig }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

  allowSnippetAnnotations: {{ .Values.ingressNginx.controller.allowSnippetAnnotations }}

  enableAnnotationValidations: {{ .Values.ingressNginx.controller.enableAnnotationValidations }}

  {{ if .Values | get "ingressNginx.controller.useHostPort" false }}
  # Ensure we can resolve names in cluster with host network enabled.
  dnsPolicy: ClusterFirstWithHostNet
  # TODO: Can be deprecated since https://github.com/kubernetes/kubernetes/issues/23920 is merged.
  hostNetwork: true
  {{ end }}

  ## Use host ports 80 and 443
  hostPort:
    enabled: {{ .Values | get "ingressNginx.controller.useHostPort" false }}

  # When true, report the address or name of the service in ingress status.
  # When false, report the addresses of the nodes the ingress controller runs on in ingress status.
  publishService:
    enabled:  {{ .Values.ingressNginx.controller.enablepublishService }}

  kind: DaemonSet

  updateStrategy:
    type: RollingUpdate

  # Avoid killing Pods before they are ready
  minReadySeconds: 10
  # Avoid killing Pods immediately to drain connections
  terminationGracePeriodSeconds: 60

  nodeSelector: {{- toYaml .Values.ingressNginx.controller.nodeSelector | nindent 4 }}

  tolerations: {{- toYaml .Values.ingressNginx.controller.tolerations | nindent 4 }}

  affinity: {{- toYaml .Values.ingressNginx.controller.affinity | nindent 4 }}

  resources: {{- toYaml .Values.ingressNginx.controller.resources | nindent 4 }}

  service:
    {{- if .Values | get "ingressNginx.controller.service.enabled" false }}
    enabled: true

    annotations: {{- toYaml .Values.ingressNginx.controller.service.annotations | nindent 6 }}

    type: {{ .Values.ingressNginx.controller.service.type }}

    {{- with .Values | get "ingressNginx.controller.service.clusterIP" "" }}
    clusterIP: {{ . }}
    {{- end }}

    {{- if .Values.externalTrafficPolicy.local }}
    # Cause external traffic to only go to Pods local to the receiving Node.
    # Required to preserve source IP for allowlisting with direct routed and proxy loadbalancers without PROXY protocol.
    externalTrafficPolicy: Local
    {{- end }}

    {{- with .Values.ingressNginx.controller.service.ipFamilyPolicy }}
    ipFamilyPolicy: {{ . }}
    {{- end }}
    {{- with .Values.ingressNginx.controller.service.ipFamilies }}
    ipFamilies: {{- toYaml . | nindent 6 }}
    {{- end }}

    {{- if .Values | get "ingressNginx.controller.service.type" "" | eq "LoadBalancer" }}

    allocateLoadBalancerNodePorts: {{ .Values.ingressNginx.controller.service.allocateLoadBalancerNodePorts }}
    {{- with .Values | get "ingressNginx.controller.service.loadBalancerSourceRanges" list }}
    loadBalancerSourceRanges: {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values | get "ingressNginx.controller.service.loadBalancerIP" "" }}
    loadBalancerIP: {{ . }}
    {{- end }}

    {{- else if .Values | get "ingressNginx.controller.service.type" "" | eq "NodePort" }}

    nodePorts: {{- toYaml .Values.ingressNginx.controller.service.nodePorts | nindent 6 }}

    {{- end }}

    {{- else }}
    enabled: false
    {{- end }}

    internal:
      {{- if .Values | get "ingressNginx.controller.service.internal.enabled" false }}
      enabled: true

      annotations: {{- toYaml .Values.ingressNginx.controller.service.internal.annotations | nindent 8 }}

      type: {{ .Values.ingressNginx.controller.service.internal.type }}

      {{- with .Values | get "ingressNginx.controller.service.internal.clusterIP" "" }}
      clusterIP: {{ . }}
      {{- end }}

      {{- if .Values.externalTrafficPolicy.local }}
      # Cause external traffic to only go to Pods local to the receiving Node.
      # Required to preserve source IP for allowlisting with direct routed and proxy loadbalancers without PROXY protocol.
      externalTrafficPolicy: Local
      {{- end }}

      {{- with .Values.ingressNginx.controller.service.internal.ipFamilyPolicy }}
      ipFamilyPolicy: {{ . }}
      {{- end }}
      {{- with .Values.ingressNginx.controller.service.internal.ipFamilies }}
      ipFamilies: {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if .Values | get "ingressNginx.controller.service.internal.type" "" | eq "LoadBalancer" }}

      allocateLoadBalancerNodePorts: {{ .Values.ingressNginx.controller.service.internal.allocateLoadBalancerNodePorts }}
      {{- with .Values | get "ingressNginx.controller.service.internal.loadBalancerSourceRanges" list }}
      loadBalancerSourceRanges: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values | get "ingressNginx.controller.service.internal.loadBalancerIP" "" }}
      loadBalancerIP: {{ . }}
      {{- end }}

      {{- else if .Values | get "ingressNginx.controller.service.internal.type" "" | eq "NodePort" }}

      nodePorts: {{- toYaml .Values.ingressNginx.controller.service.internal.nodePorts | nindent 8 }}

      {{- end }}

      {{- else }}
      enabled: false
      {{- end }}

  metrics:
    enabled: true

    serviceMonitor:
      enabled: true

{{ if .Values.images | dig "ingressNginxChart" "controller" "" -}}
  {{- $controllerImage := include "container_uri.parse" (dict
    "Image" .Values.images.ingressNginxChart.controller
    "Global" (.Values.images | dig "global" dict)
  ) | fromJson }}

  image:
    chroot: {{ .Values.ingressNginx.controller.chroot }}
    {{ if or $controllerImage.registry $controllerImage.repository $controllerImage.image -}}
    repository: {{ join "/" (compact (list $controllerImage.registry $controllerImage.repository $controllerImage.image)) }}
    {{- end }}
    {{ if $controllerImage.tag }}tag: {{ $controllerImage.tag }}{{ end }}
    digestChroot: {{ $controllerImage.digest }}
{{- else}}
  image:
    chroot: {{ .Values.ingressNginx.controller.chroot }}
{{- end }}

  {{- if .Values.ingressNginx.controller.chroot }}
  containerSecurityContext:
    allowPrivilegeEscalation: true
    runAsUser: 101
    seccompProfile:
      type: Localhost
      localhostProfile: profiles/ingress-nginx-chroot.json
    capabilities:
      drop:
      - ALL
      add:
      - NET_BIND_SERVICE
      - SYS_CHROOT
  {{- end }}

{{ if .Values.images | dig "ingressNginxChart" "admissionWebhooks" "" -}}
  {{- $patchImage := include "container_uri.parse" (dict
    "Image" .Values.images.ingressNginxChart.admissionWebhooks
    "Global" (.Values.images | dig "global" dict)
  ) | fromJson }}
  admissionWebhooks:
    patch:
      image:
        {{ if or $patchImage.registry $patchImage.repository $patchImage.image -}}
        repository: {{ join "/" (compact (list $patchImage.registry $patchImage.repository $patchImage.image)) }}
        {{- end }}
        {{ if $patchImage.tag }}tag: {{ $patchImage.tag }}{{ end }}
        digest: {{ $patchImage.digest }}
{{- end }}

defaultBackend:
  enabled: true

  name: default-backend

  nodeSelector: {{- toYaml .Values.ingressNginx.defaultBackend.nodeSelector | nindent 4 }}

{{ if .Values.images | dig "ingressNginxChart" "defaultBackend" "" -}}
  {{- $defaultBackendImage := include "container_uri.parse" (dict
    "Image" .Values.images.ingressNginxChart.defaultBackend
    "Global" (.Values.images | dig "global" dict)
  ) | fromJson }}

  image:
    {{ if or $defaultBackendImage.registry $defaultBackendImage.repository $defaultBackendImage.image -}}
    repository: {{ join "/" (compact (list $defaultBackendImage.registry $defaultBackendImage.repository $defaultBackendImage.image)) }}
    {{- end }}
    {{ if $defaultBackendImage.tag }}tag: {{ $defaultBackendImage.tag }}{{ end }}
    digest: {{ $defaultBackendImage.digest }}
{{- end }}

  tolerations: {{- toYaml .Values.ingressNginx.defaultBackend.tolerations | nindent 4 }}

  affinity: {{- toYaml .Values.ingressNginx.defaultBackend.affinity | nindent 4 }}

  topologySpreadConstraints: {{- toYaml .Values.ingressNginx.defaultBackend.topologySpreadConstraints | nindent 4 }}

  resources: {{- toYaml .Values.ingressNginx.defaultBackend.resources | nindent 4 }}
