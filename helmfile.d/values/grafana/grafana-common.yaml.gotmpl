testFramework:
    enabled: false

initChownData:
  enabled: false

deploymentStrategy:
  type: Recreate

ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.global.issuer }}

persistence:
  type: pvc
  enabled: true
  size: 10Gi
  accessModes:
    - ReadWriteOnce
  lookupVolumeName: false

{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}
sidecar:
  dashboards:
    enabled: true
  {{- with .Values.images | dig "monitoring" "grafanaSidecar" "" }}
  {{- with merge (include "container_uri.parse" . | fromJson) $global }}
  image:
    {{- with .registry }}
    registry: {{ . }}
    {{- end }}
    {{- with join "/" (compact (list .repository .image)) }}
    repository: {{ . }}
    {{- end }}
    {{- if or .tag .digest }}
    tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
    {{- end }}
  {{- end }}
  {{- end }}

{{- with .Values.images | dig "monitoring" "grafana" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
image:
  {{- with .registry }}
  registry: {{ . }}
  {{- end }}
  {{- with join "/" (compact (list .repository .image)) }}
  repository: {{ . }}
  {{- end }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}

grafana.ini:
  analytics:
    reporting_enabled: false
    check_for_updates: false
