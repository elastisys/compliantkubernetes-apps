{{- $global := dict
  "registry" (ternary (dig "uri" "" .Values.images.global.registry) "" .Values.images.global.registry.enabled)
  "repository" (ternary (dig "uri" "" .Values.images.global.repository) "" .Values.images.global.repository.enabled)
}}
{{- with .Values.images | dig "gatekeeper" "kubectl" "" }}
{{- with merge (include "container_uri.parse" . | fromJson) $global }}
image:
  repository: {{ include "gen.reg-rep-img" . | default "" }}
  {{- if or .tag .digest }}
  tag: "{{ .tag }}{{ if .digest }}@{{ .digest }}{{ end }}"
  {{- end }}
{{- end }}
{{- end }}

waitFor:
  - k8sallowedrepos
  - k8sdisallowedtags
  - k8sdisallowlocalhostseccomp
  - k8spspallowedusers
  - k8spspallowprivilegeescalationcontainer
  - k8spspapparmor
  - k8spspcapabilities
  - k8spspflexvolumes
  - k8spspforbiddensysctls
  - k8spspfsgroup
  - k8spsphostfilesystem
  - k8spsphostnamespace
  - k8spsphostnetworkingports
  - k8spspprivilegedcontainer
  - k8spspprocmount
  - k8spspreadonlyrootfilesystem
  - k8spspseccomp
  - k8spspselinuxv2
  - k8spspvolumetypes
  - k8srejectloadbalancerservice
  - k8srequirenetworkpolicy
  - k8sresourcerequests
  - k8spreventaccidentaldeletion
{{- if and (eq .Environment.Name "workload_cluster") }}
  - k8sminimumreplicas
{{- end }}
{{- if and (eq .Environment.Name "workload_cluster") (eq .Values.gatekeeper.allowUserCRDs.enabled true) }}
  - k8susercrds
{{- end }}

{{- if eq .Environment.Name "workload_cluster" }}
userCRDs:
    enabled: {{ .Values.gatekeeper.allowUserCRDs.enabled }}
minimumDeploymentReplicas:
    enabled: {{ .Values.opa.minimumDeploymentReplicas.enabled }}
{{- end }}
