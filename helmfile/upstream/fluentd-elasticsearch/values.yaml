image:
  repository: quay.io/fluentd_elasticsearch/fluentd
  # if empty uses appVersion from Chart.yaml as default image tag
  tag: ""
  ## Specify an imagePullPolicy (Required)
  ## It's recommended to change this to 'Always' if the image tag is 'latest'
  ## ref: http://kubernetes.io/docs/user-guide/images/#updating-images
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistrKeySecretName

# Specify to use specific priorityClass for pods
# ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
# If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority
# Pods to make scheduling of the pending Pod possible.
priorityClassName: ""

fluentConfDir: "/etc/fluent/config.d"

# Specify where fluentd can find logs
hostLogDir:
  varLog: /var/log
  dockerContainers: /var/lib/docker/containers
  libSystemdDir: /usr/lib64

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 500Mi
  # requests:
  #   cpu: 100m
  #   memory: 200Mi

elasticsearch:
  auth:
    enabled: false
    user: null
    password: null
    existingSecret:
      name: null
      key: null
  includeTagKey: true
  setOutputHostEnvVar: true
  # If setOutputHostEnvVar is false the hosts value is ignored
  # If you are configuring an AWS signing sidecar, hosts should be the network
  # address of the sidecar, like "localhost:8080"
  hosts: ["elasticsearch-client:9200"]
  indexName: "fluentd"
  logstash:
    enabled: true
    prefix: "logstash"
    prefixSeparator: "-"
    dateformat: "%Y.%m.%d"
  ilm:
    enabled: false
    policy_id: logstash-policy
    policy: {}
      # example for ilm policy config
      # phases:
      #   hot:
      #     min_age: 0ms
      #     actions:
      #       rollover:
      #         max_age: 30d
      #         max_size: 20gb
      #       set_priority:
      #           priority: 100
      #   delete:
      #     min_age: 60d
      #     actions:
      #       delete:
    policies: {}
      # example for ilm policies config
      # ilm_policy_id1: {}
      # ilm_policy_id2: {}
    policy_overwrite: false
  template:
    enabled: false
    overwrite: false
    useLegacy: true
    name: fluentd-template
    file: fluentd-template.json
    content: |-
      {
        "index_patterns": [
            "logstash-*"
        ],
        "settings": {
            "index": {
                "number_of_replicas": "1"
            }
        }
      }

  path: ""
  # If you are configuring an AWS signing sidecar, scheme should be "http"
  scheme: "http"
  sslVerify: true
  sslVersion: "TLSv1_2"
  outputType: "elasticsearch"
  typeName: "_doc"
  logLevel: "info"
  log400Reason: false
  reconnectOnError: true
  reloadOnFailure: false
  reloadConnections: false
  requestTimeout: "5s"
  suppressTypeName: false
  includeTimestamp: false
  buffer:
    enabled: true
    # ref: https://docs.fluentd.org/configuration/buffer-section#chunk-keys
    chunkKeys: ""
    type: "file"
    path: "/var/log/fluentd-buffers/kubernetes.system.buffer"
    flushMode: "interval"
    retryType: "exponential_backoff"
    flushThreadCount: 2
    flushInterval: "5s"
    retryForever: true
    retryMaxInterval: 30
    chunkLimitSize: "2M"
    totalLimitSize: "512M"
    overflowAction: "block"

# If you want to change args of fluentd process
# by example you can add -vv to launch with trace log
fluentdArgs: "--no-supervisor -q"

# Specifies the output format of fluentd's own log messages. Set to
# "json" to enable structured logging.
# See https://docs.fluentd.org/deployment/logging#log-format
fluentdLogFormat: "text"

# If you want to add custom environment variables, use the env dict
# You can then reference these in your config file e.g.:
#     user "#{ENV['OUTPUT_USER']}"
env: {}
  # OUTPUT_USER: my_user
  # LIVENESS_THRESHOLD_SECONDS: 300
  # STUCK_THRESHOLD_SECONDS: 900
  # BUFFER_PATH: /var/log/fluentd-buffers/kubernetes.system.buffer

# If you want to add custom environment variables from secrets, use the secret list
secret: []
# - name: ELASTICSEARCH_PASSWORD
#   secret_name: elasticsearch
#   secret_key: password

rbac:
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  annotations: {}

## Specify if a Pod Security Policy for node-exporter must be created
## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
##
podSecurityPolicy:
  enabled: false
  annotations: {}
    ## Specify pod annotations
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#sysctl
    ##
    # seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
    # seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'
    # apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'

livenessProbe:
  enabled: true
  initialDelaySeconds: 600
  periodSeconds: 60
  kind:
    exec:
      command:
      # Liveness probe is aimed to help in situations where fluentd
      # silently hangs for no apparent reasons until manual restart.
      # The idea of this probe is that if fluentd is not queueing or
      # flushing chunks for 5 minutes, something is not right. If
      # you want to change the fluentd configuration, reducing amount of
      # logs fluentd collects, consider changing the threshold or turning
      # liveness probe off completely.
      - '/bin/sh'
      - '-c'
      - |
        LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300};
        STUCK_THRESHOLD_SECONDS=${STUCK_THRESHOLD_SECONDS:-900};
        BUFFER_PATH=${BUFFER_PATH:-/var/log/fluentd-buffers/kubernetes.system.buffer}
        if [ ! -e ${BUFFER_PATH} ];
        then
          echo "Expected file ${BUFFER_PATH} does not exist. This is likely a configuration issue.";
          exit 1;
        fi;
        touch -d "${STUCK_THRESHOLD_SECONDS} seconds ago" /tmp/marker-stuck;
        if [ -n "$(find ${BUFFER_PATH} -mindepth 1 -type d ! -newer /tmp/marker-stuck -print -quit)" ];
        then
          echo "Elasticsearch buffer found stuck longer than $STUCK_THRESHOLD_SECONDS seconds. Clearing buffer."
          rm -rf ${BUFFER_PATH};
          exit 1;
        fi;
        touch -d "${LIVENESS_THRESHOLD_SECONDS} seconds ago" /tmp/marker-liveness;
        if [ -n "$(find ${BUFFER_PATH} -mindepth 1 -type d ! -newer /tmp/marker-liveness -print -quit)" ];
        then
          echo "Elasticsearch buffer found stuck longer than $LIVENESS_THRESHOLD_SECONDS seconds."
          exit 1;
        fi;

## Extra labels to be added to created resources
labels: {}

annotations: {}

podAnnotations: {}
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "24231"

securityContext: {}
  # seLinuxOptions:
  #   type: spc_t

## DaemonSet update strategy
## Ref: https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set/
updateStrategy:
  type: RollingUpdate

tolerations: []
  # - key: node-role.kubernetes.io/master
  #   operator: Exists
  #   effect: NoSchedule

affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: node-role.kubernetes.io/master
  #         operator: DoesNotExist

nodeSelector: {}

service: {}
  # ports:
  #   - name: "monitor-agent"
  #     type: ClusterIP
  #     port: 24231

serviceMonitor:
  ## If true, a ServiceMonitor CRD is created for a prometheus operator
  ## https://github.com/coreos/prometheus-operator
  ##
  enabled: false
  interval: 10s
  path: /metrics
  port: 24231
  labels: {}
  metricRelabelings: []
  relabelings: []
  type: ClusterIP

serviceMetric:
  ## If true, the metrics service will be created
  ## Alternative to implicit creation through serviceMonitor.enabled
  ##
  enabled: false

prometheusRule:
  ## If true, a PrometheusRule CRD is created for a prometheus operator
  ## https://github.com/coreos/prometheus-operator
  ##
  enabled: false
  prometheusNamespace: monitoring
  labels: {}
  rules:
  - alert: FluentdNodeDown
    expr: up{job="{{ include "fluentd-elasticsearch.metricsServiceName" . }}"} == 0
    for: 10m
    labels:
      service: fluentd
      severity: warning
    annotations:
      summary: fluentd cannot be scraped
      description: Prometheus could not scrape {{ "{{ $labels.job }}" }} for more than 10 minutes
  - alert: FluentdNodeDown
    expr: up{job="{{ include "fluentd-elasticsearch.metricsServiceName" . }}"} == 0
    for: 30m
    labels:
      service: fluentd
      severity: critical
    annotations:
      summary: fluentd cannot be scraped
      description: Prometheus could not scrape {{ "{{ $labels.job }}" }} for more than 30 minutes
  - alert: FluentdQueueLength
    expr: rate(fluentd_status_buffer_queue_length[5m]) > 0.3
    for: 1m
    labels:
      service: fluentd
      severity: warning
    annotations:
      summary: fluentd node are failing
      description: In the last 5 minutes, fluentd queues increased 30%. Current value is {{ "{{ $value }}" }}
  - alert: FluentdQueueLength
    expr: rate(fluentd_status_buffer_queue_length[5m]) > 0.5
    for: 1m
    labels:
      service: fluentd
      severity: critical
    annotations:
      summary: fluentd node are critical
      description: In the last 5 minutes, fluentd queues increased 50%. Current value is {{ "{{ $value }}" }}
  - alert: FluentdRecordsCountsHigh
    expr: >
      sum(rate(fluentd_output_status_emit_records{job="{{ include "fluentd-elasticsearch.metricsServiceName" . }}"}[5m]))
      BY (instance) >  (3 * sum(rate(fluentd_output_status_emit_records{job="{{ include "fluentd-elasticsearch.metricsServiceName" . }}"}[15m]))
      BY (instance))
    for: 1m
    labels:
      service: fluentd
      severity: critical
    annotations:
      summary: fluentd records count are critical
      description: In the last 5m, records counts increased 3 times, comparing to the latest 15 min.
  - alert: FluentdRetry
    expr: increase(fluentd_status_retry_count[10m]) > 0
    for: 20m
    labels:
      service: fluentd
      severity: warning
    annotations:
      description: Fluentd retry count has been  {{ "{{ $value }}" }} for the last 10 minutes
      summary: Fluentd retry count has been  {{ "{{ $value }}" }} for the last 10 minutes
  - alert: FluentdOutputError
    expr: increase(fluentd_output_status_num_errors[10m]) > 0
    for: 1s
    labels:
      service: fluentd
      severity: warning
    annotations:
      description: Fluentd output error count is {{ "{{ $value }}" }} for the last 10 minutes
      summary: There have been Fluentd output error(s) for the last 10 minutes

configMaps:
  useDefaults:
    systemConf: true
    containersInputConf: true
    ## Set containersKeepTimeKey to true to keep the kubernetes container log timestamp as part of the log message
    ## Read keep_time_key at https://docs.fluentd.org/configuration/parse-section
    containersKeepTimeKey: false
    systemInputConf: true
    forwardInputConf: true
    monitoringConf: true
    outputConf: true

    # kubernetesMetadataFilterConfig lets you set arbitrary
    # configuration key-value pairs for the kubernetes_metadata
    # filter. See
    # https://github.com/fabric8io/fluent-plugin-kubernetes_metadata_filter#configuration
    kubernetesMetadataFilterConfig: {}

# can be used to add new config or overwrite the default configmaps completely after the configmaps default has been disabled above
extraConfigMaps: {}
  # system.conf: |-
  #   <system>
  #     root_dir /tmp/fluentd-buffers/
  #   </system>

extraVolumes: []
# - name: es-certs
#   secret:
#     defaultMode: 420
#     secretName: es-certs

extraVolumeMounts: []
# - name: es-certs
#   mountPath: /certs
#   readOnly: true

## Sidecar containers
##
## If using AWS Elasticsearch, all requests to ES need to be signed regardless
## of whether one is using Cognito or not. The example here shows how to
## configure a sidecar proxy that takes care of signing all requests being sent
## to the AWS ES Domain.
extraContainers: []
# - name: aws-es-proxy
#   image: abutaha/aws-es-proxy:v1.0
#   imagePullPolicy: IfNotPresent
#   args:
#   - "-endpoint"
#   # Put your ElasticSearch host here as the endpoint and set...
#   # elasticsearch.hosts location to the sidecar address, e.g. localhost:8080
#   # elasticsearch.scheme to http
#   - "http://elasticsearch-client:9200"
#   - "-listen"
#   - "localhost:8080"
#   - "-timeout"
#   - "15"
#   # You can configure some features of AWS ES Proxy by passing specific
#   # environment variables. E.g. AWS EKS IRSA is supported by providing
#   # AWS_ROLE_ARN and AWS_WEB_IDENTITY_TOKEN_FILE
#   env:
#   - name: PORT_NUM
#     value: "8080"
#   resources:
#     limits:
#       cpu: 100m
#       memory: 500Mi
#     requests:
#       cpu: 100m
#       memory: 200Mi

extraInitContainers: []
# - name: do-something
#   image: busybox
#   command: ['do', 'something']

# -- Array of extra K8s manifests to deploy
extraObjects: []
  # - apiVersion: secrets-store.csi.x-k8s.io/v1
  #   kind: SecretProviderClass
  #   metadata:
  #     name: my-secrets-store
  #   spec:
  #     provider: aws
  #     parameters:
  #       objects: |
  #         - objectName: "openid-secret"
  #           objectType: "secretsmanager"
  #           jmesPath:
  #               - path: "client_id"
  #                 objectAlias: "client_id"
  #               - path: "client_secret"
  #                 objectAlias: "client_secret"
  #     secretObjects:
  #     - data:
  #       - key: client_id
  #         objectName: client_id
  #       - key: client_secret
  #         objectName: client_secret
  #       secretName: openid-secrets-store
  #       type: Opaque
