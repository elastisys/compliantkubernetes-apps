{{ if not (or (eq .Values.objectStorage.type "s3") (eq .Values.objectStorage.type "gcs") ) }}
{{ fail "\nERROR: Fluentd aggregator requires s3 or gcs object storage, see Values.objectStorage.type" }}
{{ end }}
image:
  repository: quay.io/fluentd_elasticsearch/fluentd
  tag: v2.9.0

resources: {{- toYaml .Values.fluentd.aggregator.resources | nindent 2  }}
nodeSelector: {{- toYaml .Values.fluentd.aggregator.nodeSelector | nindent 2  }}
affinity: {{- toYaml .Values.fluentd.aggregator.affinity | nindent 2  }}
tolerations: {{- toYaml .Values.fluentd.aggregator.tolerations | nindent 2 }}

plugins:
  enabled: true
  pluginsList:
    {{ if eq .Values.objectStorage.type "s3" -}}
    # TODO: pin version
    - fluent-plugin-s3
    {{ else if eq .Values.objectStorage.type "gcs" -}}
    - digest-crc -v "0.5.1"
    - fluent-plugin-gcs
    {{- end }}

service:
  type: ClusterIP
  ports:
    - name: "monitor-agent"
      protocol: TCP
      containerPort: 24220
    - name: "forward"
      protocol: TCP
      containerPort: 24224

# Persist buffer so that the last chunks of logs can be retrieved in case of a
# disaster.
persistence:
  enabled: true
  size: 10Gi

{{ if eq .Values.objectStorage.type "s3" -}}
extraEnvVars:
 - name: AWS_ACCESS_KEY_ID
   valueFrom:
     secretKeyRef:
       name: s3-credentials
       key: s3_access_key
 - name: AWS_ACCESS_SECRET_KEY
   valueFrom:
     secretKeyRef:
       name: s3-credentials
       key: s3_secret_key
{{- end }}

configMaps:
  output.conf: |
    <match kubernetes.var.log.containers.fluentd-aggregator-**>
      @type null
    </match>
    <match **>
      @id output-s3
      {{ if eq .Values.objectStorage.type "gcs" -}}
      @type gcs

      project {{ .Values.objectStorage.gcs.project }}
      keyfile /etc/fluent/config.d/gcp_credentials.json
      bucket {{ .Values.objectStorage.buckets.scFluentd }}
      object_key_format %{path}%{time_slice}_%{index}.%{file_extension}
      {{ else if eq .Values.objectStorage.type "s3" -}}
      @type s3

      aws_key_id "#{ENV['AWS_ACCESS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_ACCESS_SECRET_KEY']}"
      {{ if eq .Values.fluentd.useRegionEndpoint true -}}
      s3_endpoint {{ .Values.objectStorage.s3.regionEndpoint }}
      force_path_style true
      {{ else -}}
      s3_region {{ .Values.objectStorage.s3.region }}
      {{ end -}}
      s3_bucket {{ .Values.objectStorage.buckets.scFluentd }}
      {{- end }}

      path logs/%Y%m%d/${tag}/

      <buffer tag,time>
        @type file

        path /var/log/fluentd-buffers/s3
        overflow_action block
        total_limit_size 9GB

        timekey 10m
        timekey_wait 1m
        timekey_use_utc true
        chunk_limit_size 50m
      </buffer>
    </match>

  {{ if eq .Values.objectStorage.type "gcs" -}}
  gcp_credentials.json: |
    {{ .Values.objectStorage.gcs.keyfileData | nindent 4 }}
  {{- end }}
