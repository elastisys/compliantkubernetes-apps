global:
  scApiserver:
    ips: {{- toYaml .Values.networkPolicies.global.scApiserver.ips | nindent 6 }}
    port: {{ .Values.networkPolicies.global.scApiserver.port }}
  scNodes:
    ips: {{- toYaml .Values.networkPolicies.global.scNodes.ips | nindent 6 }}
  scIngress:
    ips: {{- toYaml .Values.networkPolicies.global.scIngress.ips | nindent 6 }}
  wcIngress:
    ips: {{- toYaml .Values.networkPolicies.global.wcIngress.ips | nindent 6 }}
  objectStorage:
  {{ $sourceSwift := "" }}
  {{- range .Values.objectStorage.sync.buckets }}
  {{- if or (eq (get "sourceType" "" .) "swift") (and (ne (get "sourceType" "" .) "s3") (eq $.Values.objectStorage.type "swift") ) }}
  {{ $sourceSwift = "true" }}
  {{- end }}
  {{- end }}
    ips:
      {{- toYaml .Values.networkPolicies.global.objectStorage.ips | nindent 6 }}
      {{- if and (or (eq .Values.harbor.persistence.type "swift") (eq .Values.thanos.objectStorage.type "swift") ($sourceSwift)) (.Values.networkPolicies.global.objectStorageSwift.ips) }}
      {{- toYaml .Values.networkPolicies.global.objectStorageSwift.ips | nindent 6 }}
      {{- end }}
    ports:
      {{- toYaml .Values.networkPolicies.global.objectStorage.ports | nindent 6 }}
      {{- if and (or (eq .Values.harbor.persistence.type "swift") (eq .Values.thanos.objectStorage.type "swift") ($sourceSwift)) (.Values.networkPolicies.global.objectStorageSwift.ports) }}
      {{- toYaml .Values.networkPolicies.global.objectStorageSwift.ports | nindent 6 }}
      {{- end }}
  externalLoadBalancer: {{ .Values.networkPolicies.global.externalLoadBalancer }}
  ingressUsingHostNetwork: {{ .Values.ingressNginx.controller.useHostPort }}

  # TODO: Add Swift
  objectStoreEgress:
    - to:
        {{- range .Values.networkPolicies.global.objectStorage.ips }}
        - ipBlock:
            cidr: {{ . }}
        {{- end }}
      ports:
        {{- range .Values.networkPolicies.global.objectStorage.ports }}
        - protocol: TCP
          port: {{ . }}
        {{- end }}

monitoring:
  enabled: {{ .Values.networkPolicies.monitoring.enabled }}
  grafana:
    externalDataSources:
      enabled: {{ .Values.networkPolicies.monitoring.grafana.externalDataSources.enabled }}
      ips: {{- toYaml .Values.networkPolicies.monitoring.grafana.externalDataSources.ips | nindent 8 }}
      ports: {{- toYaml .Values.networkPolicies.monitoring.grafana.externalDataSources.ports | nindent 8 }}
    externalDashboardProvider:
      ips: {{- toYaml .Values.networkPolicies.monitoring.grafana.externalDashboardProvider.ips | nindent 8 }}
      ports: {{- toYaml .Values.networkPolicies.monitoring.grafana.externalDashboardProvider.ports | nindent 8 }}
  alertmanager:
    alertReceivers:
      ips: {{- toYaml .Values.networkPolicies.alertmanager.alertReceivers.ips | nindent 8 }}
      ports: {{- toYaml .Values.networkPolicies.alertmanager.alertReceivers.ports | nindent 8 }}

thanos:
  enabled: {{ .Values.networkPolicies.thanos.enabled }}

opensearch:
  enabled: {{ .Values.networkPolicies.opensearch.enabled }}
  data:
    enabled: {{ .Values.opensearch.dataNode.dedicatedPods }}
  client:
    enabled: {{ .Values.opensearch.clientNode.dedicatedPods }}
  plugins:
    ips: {{- toYaml .Values.networkPolicies.opensearch.plugins.ips | nindent 8 }}
    ports: {{- toYaml .Values.networkPolicies.opensearch.plugins.ports | nindent 8 }}

fluentd:
  enabled: {{ and .Values.fluentd.enabled .Values.networkPolicies.fluentd.enabled }}

rcloneSync:
  enabled: {{ and .Values.objectStorage.sync.enabled .Values.networkPolicies.rcloneSync.enabled }}
  destinationObjectStorage:
    ips:
      {{- if eq .Values.objectStorage.sync.type "s3" }}
      {{- toYaml .Values.networkPolicies.rcloneSync.destinationObjectStorageS3.ips | nindent 6 }}
      {{- end }}
      {{- if or (eq .Values.objectStorage.sync.type "swift") (eq .Values.harbor.persistence.type "swift") (eq .Values.thanos.objectStorage.type "swift") }}
      {{- toYaml .Values.networkPolicies.rcloneSync.destinationObjectStorageSwift.ips | nindent 6 }}
      {{- end }}
      {{- if hasKey .Values.objectStorage.sync "secondaryUrl" }}
      {{- toYaml .Values.networkPolicies.rcloneSync.secondaryUrl.ips | nindent 6 }}
      {{- end }}
    ports:
      {{- if eq .Values.objectStorage.sync.type "s3" }}
      {{- toYaml .Values.networkPolicies.rcloneSync.destinationObjectStorageS3.ports | nindent 6 }}
      {{- end }}
      {{- if or (eq .Values.objectStorage.sync.type "swift") (eq .Values.harbor.persistence.type "swift") (eq .Values.thanos.objectStorage.type "swift") }}
      {{- toYaml .Values.networkPolicies.rcloneSync.destinationObjectStorageSwift.ports | nindent 6 }}
      {{- end }}
      {{- if hasKey .Values.objectStorage.sync "secondaryUrl" }}
      {{- toYaml .Values.networkPolicies.rcloneSync.secondaryUrl.ports | nindent 6 }}
      {{- end }}

s3Exporter:
  enabled: {{ and (eq .Values.objectStorage.type "s3") (and .Values.s3Exporter.enabled .Values.networkPolicies.s3Exporter.enabled) }}

ingressNginx:
  enabled: {{ .Values.networkPolicies.ingressNginx.enabled }}
  ingressOverride:
    enabled : {{ .Values.networkPolicies.ingressNginx.ingressOverride.enabled }}
    ips: {{- toYaml .Values.networkPolicies.ingressNginx.ingressOverride.ips | nindent 4 }}

dex:
  enabled: {{ .Values.networkPolicies.dex.enabled }}
  connectors:
    ips: {{- toYaml .Values.networkPolicies.dex.connectors.ips | nindent 6 }}
    ports: {{- toYaml .Values.networkPolicies.dex.connectors.ports | nindent 6 }}

falco:
  enabled: {{ and .Values.falco.enabled .Values.networkPolicies.falco.enabled }}
