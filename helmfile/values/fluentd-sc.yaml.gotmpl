{{ if not (or (eq .Values.objectStorage.type "s3") (eq .Values.objectStorage.type "gcs") ) }}
{{ fail "\nERROR: Fluentd requires s3 or gcs object storage, see Values.objectStorage.type" }}
{{ end }}

aggregator:
  replicaCount: 1
  configMap: fluentd-aggregator-configmap
  resources:    {{- toYaml .Values.fluentd.aggregator.resources | nindent 4  }}
  nodeSelector: {{- toYaml .Values.fluentd.aggregator.nodeSelector | nindent 4  }}
  affinity:     {{- toYaml .Values.fluentd.aggregator.affinity | nindent 4  }}
  tolerations:  {{- toYaml .Values.fluentd.aggregator.tolerations | nindent 4  }}

  # Persist buffer so that the last chunks of logs can be retrieved in case of a disaster.
  persistence:
    enabled: true
    size: 10Gi

  {{ if eq .Values.objectStorage.type "s3" -}}
  extraEnvVars:
   - name: AWS_ACCESS_KEY_ID
     valueFrom:
       secretKeyRef:
         name: s3-credentials
         key: s3_access_key
   - name: AWS_ACCESS_SECRET_KEY
     valueFrom:
       secretKeyRef:
         name: s3-credentials
         key: s3_secret_key
    {{- end }}

forwarder:
  configMap: fluentd-forwarder-configmap
  resources:    {{- toYaml .Values.fluentd.forwarder.resources | nindent 4  }}
  nodeSelector: {{- toYaml .Values.fluentd.forwarder.nodeSelector | nindent 4  }}
  affinity:     {{- toYaml .Values.fluentd.forwarder.affinity | nindent 4  }}
  tolerations:  {{- toYaml .Values.fluentd.forwarder.tolerations | nindent 4  }}
  livenessProbe:
    initialDelaySeconds: {{ .Values.fluentd.forwarder.livenessProbe.initialDelaySeconds  }}
    periodSeconds: {{ .Values.fluentd.forwarder.livenessProbe.periodSeconds  }}
    timeoutSeconds: {{ .Values.fluentd.forwarder.livenessProbe.timeoutSeconds  }}
    failureThreshold: {{ .Values.fluentd.forwarder.livenessProbe.failureThreshold  }}
  readinessProbe:
    initialDelaySeconds: {{ .Values.fluentd.forwarder.readinessProbe.initialDelaySeconds  }}
    periodSeconds: {{ .Values.fluentd.forwarder.readinessProbe.periodSeconds  }}
    timeoutSeconds: {{ .Values.fluentd.forwarder.readinessProbe.timeoutSeconds  }}
    failureThreshold: {{ .Values.fluentd.forwarder.readinessProbe.failureThreshold  }}
  rbac:
    pspEnabled: true
  extraEnvVars:
    - name: OUTPUT_BUFFER_CHUNK_LIMIT
      value: "{{ .Values.fluentd.forwarder.chunkLimitSize }}"
    - name: OUTPUT_BUFFER_TOTAL_LIMIT_SIZE
      value: "{{ .Values.fluentd.forwarder.totalLimitSize }}"

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
