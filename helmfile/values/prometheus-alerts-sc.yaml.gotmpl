# The rules are split between alert and record rules so that they can be evaluated by thanos and prometheus respectively.
# With thanos ruler it will evaluate the alert rules on all cluster.
# The record rules are still evaluated by prometheus due to lack of multi-tenancy support in thanos ruler and performance reasons.

# TODO: We should update the rules for things with set namespace and job name to be able to monitor instances in the workload cluster.

osNodeCount: {{ add .Values.opensearch.dataNode.count .Values.opensearch.clientNode.count .Values.opensearch.masterNode.count }}
osIndexAlerts: {{ toYaml .Values.opensearch.promIndexAlerts | nindent 2 }}

defaultRules:
  alertLabels:
    {{- if and .Values.thanos.enabled .Values.thanos.ruler.enabled }}
    evaluate_thanos: "1"
    {{- else }}
    evaluate_prometheus: "1"
    {{- end }}
  recordLabels:
    evaluate_prometheus: "1"
  rules:
    alertmanager: true
    hnc: {{ .Values.hnc.enabled }}
    rookMonitor: {{ .Values.monitoring.rook.enabled }}
    {{- if and .Values.thanos.enabled .Values.thanos.metrics.enabled }}
    thanosMonitor: {{ .Values.thanos.metrics.enabled }}
    {{- end }}
    {{- if and .Values.thanos.enabled .Values.thanos.metrics.enabled .Values.thanos.ruler.enabled }}
    thanosRulerMonitor: {{ .Values.thanos.ruler.enabled }}
    {{- end }}

    capacityManagementAlerts: {{ .Values.prometheus.capacityManagementAlerts.enabled }}

    backupStatus: true
    dailyChecks: true

  {{- if and .Values.thanos.enabled .Values.thanos.ruler.enabled }}
  thanos:
    alertLabels:
      evaluate_prometheus: "1"
  {{- end }}

capacityManagementAlertsDiskLimit: {{ .Values.prometheus.capacityManagementAlerts.disklimit }}
capacityManagementAlertsUsageLimit: {{ .Values.prometheus.capacityManagementAlerts.usagelimit }}
capacityManagementAlertsRequestLimit: {{ toYaml .Values.prometheus.capacityManagementAlerts.requestlimit | nindent 2 }}

s3BucketAlerts:
  size:
    enabled: {{ .Values.prometheus.s3BucketAlerts.size.enabled }}
    percent: {{ .Values.prometheus.s3BucketAlerts.size.percent }}
    sizeQuotaGB: {{ .Values.prometheus.s3BucketAlerts.size.sizeQuotaGB }}
  objects:
    enabled: {{ .Values.prometheus.s3BucketAlerts.objects.enabled }}
    percent: {{ .Values.prometheus.s3BucketAlerts.objects.percent }}
    count: {{ .Values.prometheus.s3BucketAlerts.objects.count }}
  exclude: {{ toYaml .Values.prometheus.s3BucketAlerts.exclude | nindent 4 }}

buckets:
  harbor: {{ .Values.objectStorage.buckets.harbor }}
  velero: {{ .Values.objectStorage.buckets.velero }}
  opensearch: {{ .Values.objectStorage.buckets.opensearch }}
  scFluentd: {{ .Values.objectStorage.buckets.scFluentd }}
  thanos: {{ .Values.objectStorage.buckets.thanos }}
