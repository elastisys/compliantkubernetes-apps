# Elasticsearch deployment configuration
elasticsearch:
  ssl:
    transport:
      existingCertSecret: opendistro-es-es-transport-cert
      existingCertSecretCertSubPath: tls.crt
      existingCertSecretKeySubPath: tls.key
      existingCertSecretRootCASubPath: ca.crt

    admin:
      enabled: true
      existingCertSecret: opendistro-es-es-admin-cert
      existingCertSecretCertSubPath: tls.crt
      existingCertSecretKeySubPath: tls.key
      existingCertSecretRootCASubPath: ca.crt

  {{ if eq .Values.objectStorage.type "s3" -}}
  s3:
    enabled: true
    useExistingSecret: false
    secretName: opendistro-es-s3-credentials
    accessKey: {{ .Values.objectStorage.s3.accessKey }}
    secretKey: {{ .Values.objectStorage.s3.secretKey }}
    bucketName: {{ .Values.objectStorage.buckets.elasticsearch }}
  {{ else if eq .Values.objectStorage.type "gcs" -}}
  s3:
    enabled: false
  gcs:
    enabled: true
    useExistingSecret: false
    secretName: opendistro-es-gcs-credentials
    bucketName: {{ .Values.objectStorage.buckets.elasticsearch }}
    keyfileData: |
      {{ .Values.objectStorage.gcs.keyfileData | nindent 6 }}
  {{- end }}

  extraVolumes:
  - emptyDir: {}
    name: internal-elasticsearch-config-local
  - emptyDir: {}
    name: internal-elasticsearch-plugins-local
  {{ if eq .Values.objectStorage.type "s3" -}}
  - name: s3-credentials
    secret:
      secretName: opendistro-es-s3-credentials
  {{ else if eq .Values.objectStorage.type "gcs" -}}
  - name: gcs-credentials
    secret:
      secretName: opendistro-es-gcs-credentials
  {{- end }}

  extraVolumeMounts:
  - mountPath: /usr/share/elasticsearch/config
    name: internal-elasticsearch-config-local
  - mountPath: /usr/share/elasticsearch/plugins
    name: internal-elasticsearch-plugins-local

  extraInitContainers:
  - name: install-object-storage-plugin
    image: amazon/opendistro-for-elasticsearch:1.12.0
    command:
    - sh
    - -c
    - |
      {{ if eq .Values.objectStorage.type "s3" -}}
      /usr/share/elasticsearch/bin/elasticsearch-plugin install --batch repository-s3 || exit 1

      /usr/share/elasticsearch/bin/elasticsearch-keystore create
      /usr/share/elasticsearch/bin/elasticsearch-keystore add-file s3.client.default.access_key /mnt/elastic-internal/s3-credentials/s3.client.default.access_key
      /usr/share/elasticsearch/bin/elasticsearch-keystore add-file s3.client.default.secret_key /mnt/elastic-internal/s3-credentials/s3.client.default.secret_key
      {{ else if eq .Values.objectStorage.type "gcs" -}}
      /usr/share/elasticsearch/bin/elasticsearch-plugin install --batch repository-gcs || exit 1

      /usr/share/elasticsearch/bin/elasticsearch-keystore add-file --force gcs.client.default.credentials_file /mnt/elastic-internal/gcs-credentials.json
      {{- end }}

      # Disable performance_analyzer due to issue where disk is being filled up
      /usr/share/elasticsearch/bin/elasticsearch-plugin remove opendistro_performance_analyzer

      if [[ -z "$(ls -A /usr/share/elasticsearch/config)" ]]; then
        echo "Empty dir /usr/share/elasticsearch/config"
      else
        echo "Copying /usr/share/elasticsearch/config/* to /mnt/elastic-internal/elasticsearch-config-local/"
        cp -av /usr/share/elasticsearch/config/* /mnt/elastic-internal/elasticsearch-config-local/
      fi

      if [[ -z "$(ls -A /usr/share/elasticsearch/plugins)" ]]; then
        echo "Empty dir /usr/share/elasticsearch/plugins"
      else
        echo "Copying /usr/share/elasticsearch/plugins/* to /mnt/elastic-internal/elasticsearch-plugins-local/"
        cp -av /usr/share/elasticsearch/plugins/* /mnt/elastic-internal/elasticsearch-plugins-local/
      fi

    volumeMounts:
    - mountPath: /mnt/elastic-internal/elasticsearch-config-local
      name: internal-elasticsearch-config-local
    - mountPath: /mnt/elastic-internal/elasticsearch-plugins-local
      name: internal-elasticsearch-plugins-local
    {{ if eq .Values.objectStorage.type "s3" -}}
    - mountPath: /mnt/elastic-internal/s3-credentials
      name: s3-credentials
    {{ else if eq .Values.objectStorage.type "gcs" -}}
    - mountPath: /mnt/elastic-internal/
      name: gcs-credentials
    {{- end }}

  securityConfig:
    config:
      securityConfigSecret: opendistro-es-security-config-secret
      data:
        config.yml: |-
          _meta:
            type: "config"
            config_version: 2

          config:
            dynamic:
              authc:
                basic_internal_auth_domain:
                  description: "Authenticate via HTTP Basic against internal users database"
                  http_enabled: true
                  transport_enabled: true
                  order: 0
                  http_authenticator:
                    type: basic
                    challenge: false
                  authentication_backend:
                    type: internal
        {{ if .Values.elasticsearch.sso.enabled }}
                openid_auth_domain:
                  description: "openid connect"
                  http_enabled: true
                  transport_enabled: true
                  order: 1
                  http_authenticator:
                    type: openid
                    challenge: false
                    config:
                      openid_connect_url: http://dex.dex.svc.cluster.local:5556/.well-known/openid-configuration
                      openid_connect_idp.verify_hostnames: false
                      openid_connect_idp.enable_ssl: false
                      subject_key: {{ .Values.elasticsearch.sso.subject_key }}
                      roles_key: {{ .Values.elasticsearch.sso.roles_key }}
                  authentication_backend:
                    type: noop
        {{ end }}

        internal_users.yml: |-
          _meta:
            type: "internalusers"
            config_version: 2

          admin:
            hash: {{ .Values.elasticsearch.adminHash }}
            reserved: true
            opendistro_security_roles:
            - "all_access"
            description: "Admin user"

          kibanaserver:
            hash: {{ .Values.elasticsearch.kibanaHash }}
            reserved: true
            opendistro_security_roles:
            - "kibana_server"
            description: "Kibana server user"

          configurer:
            hash: {{ .Values.elasticsearch.configurerHash }}
            reserved: true
            opendistro_security_roles:
            - "kibana_user"
            - "configurer"
            description: "Configurer user"

        roles.yml: |-
          _meta:
            type: "roles"
            config_version: 2

          # Can probably be locked down further
          configurer:
            static: false
            hidden: false
            reserved: false
            cluster_permissions:
            - "cluster:admin/repository/put"
            - "cluster_manage_index_templates"
            - "cluster:admin/opendistro/ism/policy/*"
            index_permissions:
            - index_patterns:
              - "*"
              allowed_actions:
              - "create_index"
              - "crud"
              - "manage_aliases"
              - "indices:admin/index_template/*"

        # Needed
        roles_mapping.yml: |-
          _meta:
            type: "rolesmapping"
            config_version: 2

        # Needed
        tenants.yml: |-
          _meta:
            type: "tenants"
            config_version: 2

        # Needed
        action_groups.yml: |-
          _meta:
            type: "actiongroups"
            config_version: 2

        # Optional
        nodes_dn.yml: |-
          _meta:
            type: "nodesdn"
            config_version: 2

        # Optional
        whitelist.yml: |-
          _meta:
            type: "whitelist"
            config_version: 2
          config:
            enabled: false

  config:

    ############## Open Distro Security configuration ###############

    # Most options are listed here:
    # https://github.com/opendistro-for-elasticsearch/security/blob/master/securityconfig/elasticsearch.yml.example
    # For more details checkout the official search guard documentation:
    # https://docs.search-guard.com/latest/


    # Audit logging configuration settings
    opendistro_security.audit.type: internal_elasticsearch
    opendistro_security.audit.ignore_users: ["kibanaserver"]


    # REST Management API configuration settings
    opendistro_security.restapi.roles_enabled: ["all_access", "configurer"]

    # Constrain configurer. Nessecary?
    opendistro_security.restapi.endpoints_disabled.configurer.CACHE: ["GET","PUT","POST","DELETE","PATCH"]
    opendistro_security.restapi.endpoints_disabled.configurer.CONFIG: ["GET","PUT","POST","DELETE","PATCH"]
    opendistro_security.restapi.endpoints_disabled.configurer.ACTIONGROUPS: ["GET","PUT","POST","DELETE","PATCH"]
    opendistro_security.restapi.endpoints_disabled.configurer.INTERNALUSERS: ["POST","DELETE","PATCH"]
    opendistro_security.restapi.endpoints_disabled.configurer.ROLESMAPPING: ["POST","DELETE","PATCH"]
    opendistro_security.restapi.endpoints_disabled.configurer.ROLES: ["POST","DELETE","PATCH"]


    # Common configuration settings
    opendistro_security.nodes_dn:
    - 'CN=nodes.elastic-system.cluster.local,O=compliantkubernetes'
    opendistro_security.authcz.admin_dn:
    - 'CN=admin.elastic-system.cluster.local,O=compliantkubernetes'


    # Transport layer SSL configuration settings

    # https://github.com/opendistro-for-elasticsearch/deprecated-security-ssl/blob/master/opendistrosecurity-ssl-config-template.yml
    opendistro_security.ssl.transport.pemcert_filepath: elk-transport-crt.pem
    opendistro_security.ssl.transport.pemkey_filepath: elk-transport-key.pem
    opendistro_security.ssl.transport.pemtrustedcas_filepath: elk-transport-root-ca.pem
    opendistro_security.ssl.transport.enforce_hostname_verification: false


    # Expert settings
    opendistro_security.allow_default_init_securityindex: true


    ############## Elasticsearch configuration settings ##############
    action.auto_create_index: ".opendistro-*,.kibana*,security-auditlog-*"

    node:
      attr.box_type: hot

    {{ if eq .Values.objectStorage.type "s3" -}}
    s3.client.default.endpoint: {{ .Values.objectStorage.s3.regionEndpoint }}
    s3.client.default.path_style_access: true
    {{ else if eq .Values.objectStorage.type "gcs" -}}
    # TODO
    # Add config related to gcs (if any)
    {{- end }}


  # Master nodes configuration
  master:
    replicas: {{ .Values.elasticsearch.masterNode.count }}

    javaOpts: {{ .Values.elasticsearch.masterNode.javaOpts }}

    resources:    {{- toYaml .Values.elasticsearch.masterNode.resources | nindent 6 }}
    affinity:     {{- toYaml .Values.elasticsearch.masterNode.affinity | nindent 6 }}
    tolerations:  {{- toYaml .Values.elasticsearch.masterNode.tolerations | nindent 6 }}
    nodeSelector: {{- toYaml .Values.elasticsearch.masterNode.nodeSelector | nindent 6 }}

    persistence:
      size: {{ .Values.elasticsearch.masterNode.storageSize }}
      storageClass: {{ toYaml .Values.elasticsearch.masterNode.storageClass }}

  # Data nodes configuration
  data:
    ## Enables dedicated statefulset for data. Otherwise master nodes as data storage
    dedicatedPod:
      enabled: {{ .Values.elasticsearch.dataNode.dedicatedPods }}

    replicas: {{ .Values.elasticsearch.dataNode.count }}

    javaOpts: {{ .Values.elasticsearch.dataNode.javaOpts }}

    resources:    {{- toYaml .Values.elasticsearch.dataNode.resources | nindent 6 }}
    affinity:     {{- toYaml .Values.elasticsearch.dataNode.affinity | nindent 6 }}
    tolerations:  {{- toYaml .Values.elasticsearch.dataNode.tolerations | nindent 6 }}
    nodeSelector: {{- toYaml .Values.elasticsearch.dataNode.nodeSelector | nindent 6 }}

    persistence:
      size: {{ .Values.elasticsearch.dataNode.storageSize }}
      storageClass: {{ toYaml .Values.elasticsearch.dataNode.storageClass }}

  # Client nodes configuration
  client:
    ## Enables dedicated deployment for client/ingest. Otherwise master nodes as client/ingest
    dedicatedPod:
      enabled: {{ .Values.elasticsearch.clientNode.dedicatedPods }}

    replicas: {{ .Values.elasticsearch.clientNode.count }}

    javaOpts: {{ .Values.elasticsearch.clientNode.javaOpts }}

    resources:    {{- toYaml .Values.elasticsearch.clientNode.resources | nindent 6 }}
    affinity:     {{- toYaml .Values.elasticsearch.clientNode.affinity | nindent 6 }}
    tolerations:  {{- toYaml .Values.elasticsearch.clientNode.tolerations | nindent 6 }}
    nodeSelector: {{- toYaml .Values.elasticsearch.clientNode.nodeSelector | nindent 6 }}

    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: HTTP
        cert-manager.io/cluster-issuer: {{ .Values.global.issuer }}
        nginx.ingress.kubernetes.io/proxy-body-size: {{ .Values.elasticsearch.ingress.maxbodysize }}
        {{ if and .Values.externalTrafficPolicy.local .Values.externalTrafficPolicy.whitelistRange.elasticsearch }}
        nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.externalTrafficPolicy.whitelistRange.elasticsearch }}
        {{ end }}
      path: /
      hosts:
      - elastic.{{ .Values.global.opsDomain }}
      tls:
      - secretName: opendistro-es-es-ingress-cert
        hosts:
        - elastic.{{ .Values.global.opsDomain }}


# Kibana deployment configuration
kibana:
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: HTTP
      cert-manager.io/cluster-issuer: {{ .Values.global.issuer }}
      {{ if and .Values.externalTrafficPolicy.local .Values.externalTrafficPolicy.whitelistRange.kibana }}
      nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.externalTrafficPolicy.whitelistRange.kibana }}
      {{ end }}
    path: /
    hosts:
    - kibana.{{ .Values.global.baseDomain }}
    tls:
    - secretName: opendistro-es-kibana-ingress-cert
      hosts:
        - kibana.{{ .Values.global.baseDomain }}

  # Secret specifying kibana server user, password, and cookie encyrption key
  elasticsearchAccount:
    useExistingSecret: false
    username: kibanaserver
    password: {{ .Values.elasticsearch.kibanaPassword }}
    cookie: {{ .Values.elasticsearch.kibanaCookieEncKey }}
    secret: opendistro-es-kibanaserver-user

  resources:    {{- toYaml .Values.kibana.resources | nindent 4 }}
  affinity:     {{- toYaml .Values.kibana.affinity | nindent 4 }}
  tolerations:  {{- toYaml .Values.kibana.tolerations | nindent 4 }}
  nodeSelector: {{- toYaml .Values.kibana.nodeSelector | nindent 4 }}

  config:
    server.name: kibana
    server.host: "0"

    # Env read from kibana.elasticsearchAccount.secret
    elasticsearch.password: ${ELASTICSEARCH_PASSWORD}
    elasticsearch.username: ${ELASTICSEARCH_USERNAME}
    opendistro_security.cookie.password: ${COOKIE_PASS}
    opendistro_security.cookie.secure: false

    # Multitenancy disabled due to some "issues" in current version
    opendistro_security.multitenancy.enabled: false
    # opendistro_security.multitenancy.tenants.enable_global: true
    # opendistro_security.multitenancy.tenants.enable_private: true
    # opendistro_security.multitenancy.tenants.preferred: ["Global", "Private"]
    # elasticsearch.requestHeadersWhitelist: ["securitytenant","Authorization"]

    elasticsearch.hosts: http://opendistro-es-client-service:9200
    elasticsearch.requestTimeout: 60000

    {{ if .Values.elasticsearch.sso.enabled }}
    # https://docs.search-guard.com/latest/kibana-authentication-openid
    opendistro_security.auth.type: "openid"
    opendistro_security.openid.scope: {{ .Values.elasticsearch.sso.scope }}
    opendistro_security.openid.connect_url: https://dex.{{ .Values.global.baseDomain }}/.well-known/openid-configuration
    opendistro_security.openid.client_id: "kibana-sso"
    opendistro_security.openid.client_secret: {{ .Values.elasticsearch.clientSecret }}
    opendistro_security.openid.base_redirect_url: https://kibana.{{ .Values.global.baseDomain }}
    opendistro_security.openid.logout_url: https://kibana.{{ .Values.global.baseDomain }}
    {{ end }}

    newsfeed.enabled: false
    telemetry.optIn: false
    telemetry.enabled: false


# Certmanager certificates configuration
certmanager:
  enabled: true

  ca:
    commonName: {{ .Values.global.baseDomain }}
    organization:
    - compliantkubernetes

  elasticsearch:
    transport:
      commonName: nodes.elastic-system.cluster.local
      organization:
      - compliantkubernetes

    admin:
      commonName: admin.elastic-system.cluster.local
      organization:
      - compliantkubernetes


# Curator conjob configuration
curator:
  enabled: {{ .Values.elasticsearch.curator.enabled }}
  postgresql: {{ .Values | get "elasticsearch.curator.retention.postgresql" false }}
  startingDeadlineSeconds: 600
  affinity:     {{- toYaml .Values.elasticsearch.curator.affinity | nindent 4 }}
  tolerations:  {{- toYaml .Values.elasticsearch.curator.tolerations | nindent 4 }}
  nodeSelector: {{- toYaml .Values.elasticsearch.curator.nodeSelector | nindent 4 }}
  resources:    {{- toYaml .Values.elasticsearch.curator.resources | nindent 4 }}

  elasticsearchAccount:
    useExistingSecret: false
    username: curator
    password: {{ .Values.elasticsearch.curatorPassword }}
    secret: opendistro-es-curator-user

  retention:
    authlog_gb: {{ .Values.elasticsearch.curator.retention.authLogSizeGB }}
    authlog_days: {{ .Values.elasticsearch.curator.retention.authLogAgeDays }}
    other_gb: {{ .Values.elasticsearch.curator.retention.otherSizeGB }}
    other_days: {{ .Values.elasticsearch.curator.retention.otherAgeDays }}
    kubernetes_gb: {{ .Values.elasticsearch.curator.retention.kubernetesSizeGB }}
    kubernetes_days: {{ .Values.elasticsearch.curator.retention.kubernetesAgeDays }}
    kubeaudit_gb: {{ .Values.elasticsearch.curator.retention.kubeAuditSizeGB }}
    kubeaudit_days: {{ .Values.elasticsearch.curator.retention.kubeAuditAgeDays }}
    postgresql_gb: {{ .Values | get "elasticsearch.curator.retention.postgresqlSizeGB" nil }}
    postgresql_days: {{ .Values | get "elasticsearch.curator.retention.postgresqlAgeDays" nil }}

# Elasticsearch and kibana configurer job configuration
configurer:
  enabled: true

  snapshotRepository: {{ .Values.elasticsearch.snapshotRepository }}
  helm:
    deletePolicy: before-hook-creation

  ism:
    rolloverSize: {{ .Values.elasticsearch.ism.rolloverSizeGB }}
    rolloverAge: {{ .Values.elasticsearch.ism.rolloverAgeDays }}

  overwriteTemplates: {{ .Values.elasticsearch.overwriteTemplates }}
  updatePolicies: {{ .Values.elasticsearch.ism.overwritePolicies }}
  createIndices: {{ .Values.elasticsearch.createIndices }}

  defaultPolicies: {{ .Values.elasticsearch.ism.defaultPolicies }}
  defaultTemplates: {{ .Values.elasticsearch.defaultTemplates }}
  additionalPolicies: {{- toYaml .Values.elasticsearch.ism.additionalPolicies | nindent 4 }}
  additionalTemplates: {{- toYaml .Values.elasticsearch.additionalTemplates | nindent 4 }}

  activeDeadlineSeconds: 1200

  resources:
    limits:
     cpu: 100m
     memory: 128Mi
    requests:
     cpu: 10m
     memory: 32Mi

  elasticsearchAccount:
    useExistingSecret: false
    username: configurer
    password: {{ .Values.elasticsearch.configurerPassword }}
    secret: opendistro-es-configurer-user

  # Create users and roles for ck8s application
  securityPlugin:
    users:
    - username: fluentd
      definition:
        password: {{ .Values.elasticsearch.fluentdPassword }}
        opendistro_security_roles:
        - log_forwarder
    - username: curator
      definition:
        password: {{ .Values.elasticsearch.curatorPassword }}
        opendistro_security_roles:
        - curator
    - username: snapshotter
      definition:
        password: {{ .Values.elasticsearch.snapshotterPassword }}
        opendistro_security_roles:
        - manage_snapshots
    - username: metrics_exporter
      definition:
        password: {{ .Values.elasticsearch.metricsExporterPassword }}
        opendistro_security_roles:
        - metrics_exporter

    roles:
    - role_name: log_forwarder
      definition:
        cluster_permissions:
        - "cluster:monitor/main"
        - "indices:data/write/bulk"
        index_permissions:
        - index_patterns:
          - "kubernetes-*"
          - "kubeaudit-*"
          - "other-*"
          - "authlog-*"
          allowed_actions:
          - "index"
    - role_name: curator
      definition:
        cluster_permissions:
        - "cluster_monitor"
        - "cluster_composite_ops_ro"
        index_permissions:
        - index_patterns:
          - "*"
          allowed_actions:
          - "indices_monitor"
        - index_patterns:
          - "kubernetes-*"
          - "other-*"
          - "kubeaudit-*"
          - "authlog-*"
          allowed_actions:
          - "indices:admin/delete"
    - role_name: kubernetes_log_reader
      definition:
        index_permissions:
        - index_patterns:
          - "kubernetes-*"
          - "kubeaudit-*"
          allowed_actions:
          - "read"
    - role_name: backup_exporter
      definition:
        cluster_permissions:
        - "cluster:monitor/state"
        - "cluster:monitor/health"
        index_permissions:
        - index_patterns:
          - "*"
          allowed_actions:
          - "monitor"
        - index_patterns:
          - "kubernetes-*"
          - "kubeaudit-*"
          allowed_actions:
          - "read"
    - role_name: metrics_exporter
      definition:
        cluster_permissions:
        - "cluster_monitor"
        - "cluster:admin/repository/get"
        - "cluster:admin/snapshot/get"
        index_permissions:
        - index_patterns:
          - "*"
          allowed_actions:
          - "indices:monitor/stats"
          - "indices:monitor/settings/get"
    {{- with .Values.elasticsearch.extraRoles }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

    roles_mapping: {{- toYaml .Values.elasticsearch.extraRoleMappings | nindent 6 }}

# Create secret with credentials for the metrics exporter
metricsExporter:
  elasticsearchAccount:
    useExistingSecret: false
    username: metrics_exporter
    password: {{ .Values.elasticsearch.metricsExporterPassword }}
    secret: opendistro-es-metrics-exporter-user


# Create secret with credentials for the snapshot manager user
slm:
  elasticsearchAccount:
    useExistingSecret: false
    username: snapshotter
    password: {{ .Values.elasticsearch.snapshotterPassword }}
    secret: opendistro-es-snapshotter-user
