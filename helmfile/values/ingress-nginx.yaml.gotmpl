## nginx configuration
## Ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/index.md
##

controller:
  ingressClassResource:
    default: true

  watchIngressWithoutClass: true

  # Will add custom configuration options to Nginx https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/
  config:
    disable-ipv6-dns: "true"
    proxy-body-size: "200m"
    client-body-buffer-size: "256k"
    {{ if and .Values.externalTrafficPolicy.local .Values.externalTrafficPolicy.whitelistRange.global }}
    whitelist-source-range: {{ .Values.externalTrafficPolicy.whitelistRange.global }}
    {{ end }}
    use-proxy-protocol: {{ .Values.ingressNginx.controller.config.useProxyProtocol | quote }}
    {{- with .Values.ingressNginx.controller.additionalConfig }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

  # Optionally change this to ClusterFirstWithHostNet in case you have 'hostNetwork: true'.
  # By default, while using host network, name resolution uses the host's DNS. If you wish nginx-controller
  # to keep resolving names inside the k8s network, use ClusterFirstWithHostNet.
  {{ if .Values.ingressNginx.controller.useHostPort }}
  dnsPolicy: ClusterFirstWithHostNet
  {{ end }}

  # Set allow-snippet-annotations to false in order to mitigate CVE-2021-25742
  allowSnippetAnnotations: {{ .Values.ingressNginx.controller.allowSnippetAnnotations }}

  # Required for use with CNI based kubernetes installations (such as ones set up by kubeadm),
  # since CNI and hostport don't mix yet. Can be deprecated once https://github.com/kubernetes/kubernetes/issues/23920
  # is merged
  {{ if .Values.ingressNginx.controller.useHostPort }}
  hostNetwork: true
  {{ end }}

  ## Use host ports 80 and 443
  ## Disabled by default
  ##
  hostPort:
    enabled: {{ .Values.ingressNginx.controller.useHostPort }}

  ## Allows customization of the source of the IP address or FQDN to report
  ## in the ingress status field. By default, it reads the information provided
  ## by the service. If disable, the status field reports the IP address of the
  ## node or nodes where an ingress controller pod is running.
  publishService:
    enabled:  {{ .Values.ingressNginx.controller.enablepublishService }}

  ## DaemonSet or Deployment
  ##
  kind: DaemonSet

  # The update strategy to apply to the Deployment or DaemonSet
  ##
  updateStrategy:
    type: RollingUpdate

  # minReadySeconds to avoid killing pods before we are ready
  ##
  minReadySeconds: 10


  ## Node tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: {{- toYaml .Values.ingressNginx.controller.tolerations | nindent 4 }}

  ## Affinity and anti-affinity
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {{- toYaml .Values.ingressNginx.controller.affinity | nindent 4 }}

  ## terminationGracePeriodSeconds
  ## wait up to 1 minutes for the drain of connections
  ##
  terminationGracePeriodSeconds: 60

  ## Node labels for controller pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {{- toYaml .Values.ingressNginx.controller.nodeSelector | nindent 4 }}

  # Define requests resources to avoid probe issues due to CPU utilization in busy nodes
  # ref: https://github.com/kubernetes/ingress-nginx/issues/4735#issuecomment-551204903
  # Ideally, there should be no limits.
  # https://engineering.indeedblog.com/blog/2019/12/cpu-throttling-regression-fix/
  resources: {{- toYaml .Values.ingressNginx.controller.resources | nindent 4 }}

  service:
    {{ if .Values.externalTrafficPolicy.local }}
    ## Set external traffic policy to: "Local" to preserve source IP on
    ## providers supporting it
    ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
    ## Required for IP whitelisting
    externalTrafficPolicy: "Local"
    {{ end }}
    {{ if .Values.ingressNginx.controller.service.enabled }}
    enabled: true
    type: {{ .Values.ingressNginx.controller.service.type }}
    annotations: {{- toYaml .Values.ingressNginx.controller.service.annotations | nindent 6 }}
    loadBalancerSourceRanges: {{- toYaml .Values.ingressNginx.controller.service.loadBalancerSourceRanges | nindent 6 }}
    {{ else }}
    enabled: false
    {{ end }}
    {{ if eq .Values.ingressNginx.controller.service.type "NodePort" }}
    nodePorts: {{- toYaml .Values.ingressNginx.controller.service.nodePorts | nindent 6 }}
    {{ end }}

  metrics:
    enabled: true

    serviceMonitor:
       enabled: true

## Default 404 backend
##
defaultBackend:
  ##
  enabled: true

  name: default-backend

  ## Node tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: {{- toYaml .Values.ingressNginx.defaultBackend.tolerations | nindent 4 }}

  affinity: {{- toYaml .Values.ingressNginx.defaultBackend.affinity | nindent 4 }}

  ## Node labels for default backend pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {{- toYaml .Values.ingressNginx.defaultBackend.nodeSelector | nindent 4 }}

  resources: {{- toYaml .Values.ingressNginx.defaultBackend.resources | nindent 4 }}

# If true, create & use Pod Security Policy resources
# https://kubernetes.io/docs/concepts/policy/pod-security-policy/
podSecurityPolicy:
  enabled: {{ .Values.kubernetesPSP }}
