imageTag: "v2.26.0"

crd:
  present: false

rbac:
  create: true

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.global.issuer }}
    {{ if and .Values.externalTrafficPolicy.local .Values.externalTrafficPolicy.whitelistRange.dex }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.externalTrafficPolicy.whitelistRange.dex }}
    {{ end }}
  tls:
  - secretName: dex-tls
    hosts:
    - {{ .Values.dex.ingress.subdomain }}.{{ .Values.global.baseDomain }}
  hosts:
  - {{ .Values.dex.ingress.subdomain }}.{{ .Values.global.baseDomain }}

# https termination by ingress instead of through dex
https: false

{{- if .Values.dex.google.groupSupport }}
extraVolumeMounts:
- mountPath: /etc/dex/google
  name: google-sa
extraVolumes:
- name: google-sa
  secret:
      secretName: {{ .Values.dex.google.SASecretName }}
{{- end }}

config:
  issuer: https://{{ .Values.dex.ingress.subdomain }}.{{ .Values.global.baseDomain }}
  connectors:
  {{- toYaml .Values.dex.connectors | nindent 4 }}
  staticClients:
    - id: kubelogin
      name: 'Kubernetes CLI'
      secret: {{ .Values.dex.kubeloginClientSecret }}
      redirectURIs:
      - http://localhost:8000
      - http://localhost:8080/oauth2/callback
      {{- range $uri := .Values.dex.additionalKubeloginRedirects }}
      - {{ $uri }}
      {{- end }}
    - id: grafana
      secret: {{ .Values.grafana.clientSecret }}
      name: 'Grafana'
      redirectURIs:
        - https://grafana.{{ .Values.global.baseDomain }}/login/generic_oauth
{{- if .Values.prometheus.grafana.oidc.enabled }}
    - id: grafana-ops
      secret: {{ .Values.grafana.opsClientSecret }}
      name: 'Grafana ops'
      redirectURIs:
        - https://{{ .Values.prometheus.grafana.ingress.subdomain }}.{{ .Values.global.opsDomain }}/login/generic_oauth
{{- end }}
{{ if .Values.harbor.enabled }}
    - id: harbor
      secret: {{ .Values.harbor.clientSecret }}
      name: 'Harbor'
      redirectURIs:
        - https://harbor.{{ .Values.global.baseDomain }}/c/oidc/callback
{{ end }}
{{ if .Values.elasticsearch.sso.enabled }}
    - id: kibana-sso
      secret: {{ .Values.elasticsearch.clientSecret }}
      name: 'kibana-sso'
      redirectURIs:
        - https://kibana.{{ .Values.global.baseDomain }}
        - https://kibana.{{ .Values.global.baseDomain }}/auth/openid/login
        - https://kibana.{{ .Values.global.baseDomain }}/app/kibana
{{ end }}

{{ if .Values.dex.enableStaticLogin }}
  enablePasswordDB: true
  staticPasswords:
    - email: "admin@example.com"
      # bcrypt hash of the string "password"
      hash: {{ .Values.dex.staticPassword | default "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W" }}
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
{{ end }}

resources:
{{- toYaml .Values.dex.resources | nindent 2 }}

nodeSelector:
{{- toYaml .Values.dex.nodeSelector | nindent 2  }}

affinity:
{{- toYaml .Values.dex.affinity | nindent 2  }}

tolerations:
{{- toYaml .Values.dex.tolerations | nindent 2  }}
