{{- $valid := list "s3" "swift" }}
{{- if not (and (eq $.Values.objectStorage.type "s3") (has $.Values.objectStorage.sync.destinationType $valid)) }}
{{- fail "rclone-sync only supports using s3 and swift for source and destination" }}
{{- end }}

{{- if not (or .Values.objectStorage.sync.syncDefaultBuckets .Values.objectStorage.sync.buckets) }}
{{- fail "rclone-sync configured without buckets to sync" }}
{{- end }}

config:
{{- if hasKey .Values.objectStorage.sync "dryrun" }}
  dryrun: {{ .Values.objectStorage.sync.dryrun }}
{{- end }}

{{ $sourceS3 := "" }}
{{ $sourceSwift := "" }}
{{ $destinationS3 := "" }}
{{ $destinationSwift := "" }}
{{ $swiftEnabled := list }}

{{- if .Values.objectStorage.sync.syncDefaultBuckets }}
  {{- if eq .Values.thanos.objectStorage.type "swift" }}
    {{ $swiftEnabled = append $swiftEnabled .Values.objectStorage.buckets.thanos }}
    {{ $sourceSwift = "true" }}
    {{ $destinationSwift = "true" }}
  {{- end }}
  {{- if eq .Values.harbor.persistence.type "swift" }}
    {{ $swiftEnabled = append $swiftEnabled .Values.objectStorage.buckets.harbor }}
    {{ $sourceSwift = "true" }}
    {{ $destinationSwift = "true" }}
  {{- end }}
  {{- if eq .Values.objectStorage.type "s3" }}
    {{ $sourceS3 = "true" }}
    {{- end }}
    {{- if eq $.Values.objectStorage.sync.destinationType "s3" }}
    {{ $destinationS3 = "true" }}
    {{- else if eq $.Values.objectStorage.sync.destinationType "swift" }}
    {{ $destinationSwift = "true" }}
  {{- end }}
{{- end }}

{{- range .Values.objectStorage.sync.buckets }}
  {{- if not (hasKey . "sourceType") }}
  {{- $_ := set . "sourceType" $.Values.objectStorage.type }}
  {{- end }}
  {{- if eq .sourceType "s3" }}
  {{ $sourceS3 = "true" }}
  {{- else if eq .sourceType "swift" }}
  {{ $sourceSwift = "true" }}
  {{- else }}
  {{- fail "rclone-sync custom buckets only support s3 and swift for sourceType" }}
  {{- end }}

  {{- if not (hasKey . "destinationType") }}
  {{- $_ := set . "destinationType" $.Values.objectStorage.sync.destinationType }}
  {{- end }}
  {{- if eq .destinationType "s3" }}
  {{ $destinationS3 = "true" }}
  {{- else if eq .destinationType "swift" }}
  {{ $destinationSwift = "true" }}
  {{- else }}
  {{- fail "rclone-sync custom buckets only support s3 and swift for destinationType" }}
  {{- end }}
{{- end }}

  source:
  {{- if $sourceS3 }}
  - name: src-s3
    type: s3
    s3:
      accessKey: {{ .Values.objectStorage.s3.accessKey }}
      secretKey: {{ .Values.objectStorage.s3.secretKey }}
      region: {{ .Values.objectStorage.s3.region }}
      regionEndpoint: {{ .Values.objectStorage.s3.regionEndpoint }}
      forcePathStyle: {{ .Values.objectStorage.s3.forcePathStyle }}
    {{- if hasKey .Values.objectStorage.s3 "v2Auth" }}
      v2Auth: {{ .Values.objectStorage.s3.v2Auth }}
    {{- end }}
  {{- end }}

  {{- if $sourceSwift }}
  {{- $swift := .Values.objectStorage | getOrNil "swift" | required "Swift source enabled for rclone but not configured!" }}
  - name: src-swift
    type: swift
    swift:
      {{- if getOrNil "applicationCredentialID" $swift }}
      applicationCredentialID: {{ $swift.applicationCredentialID }}
      applicationCredentialSecret: {{ $swift.applicationCredentialSecret }}
      {{- else }}
      username: {{ $swift.username | quote }}
      password: {{ $swift.password | quote }}
      {{- end }}
      authUrl: {{ $swift.authUrl }}
      region: {{ $swift.region }}
      tenant: {{ $swift.projectName }}
      {{- if getOrNil "domainName" $swift }}
      domainName: {{ $swift.domainName }}
      {{- end }}
      {{- if getOrNil "projectDomainName" $swift }}
      projectDomainName: {{ $swift.projectDomainName }}
      {{- end }}
  {{- end }}

  destination:
  {{- if $destinationS3 }}
  - name: dest-s3
    type: s3
    s3:
      accessKey: {{ .Values.objectStorage.sync.s3.accessKey }}
      secretKey: {{ .Values.objectStorage.sync.s3.secretKey }}
      region: {{ .Values.objectStorage.sync.s3.region }}
      regionEndpoint: {{ .Values.objectStorage.sync.s3.regionEndpoint }}
      forcePathStyle: {{ .Values.objectStorage.sync.s3.forcePathStyle }}
      {{- if hasKey .Values.objectStorage.sync.s3 "v2Auth" }}
      v2Auth: {{ .Values.objectStorage.sync.s3.v2Auth }}
      {{- end }}
  {{- end }}

  {{- if $destinationSwift }}
  {{- $swift := .Values.objectStorage.sync | getOrNil "swift" | required "Swift destination enabled for rclone but not configured!" }}
  - name: dest-swift
    type: swift
    swift:
      {{- if getOrNil "applicationCredentialID" $swift }}
      applicationCredentialID: {{ $swift.applicationCredentialID }}
      applicationCredentialSecret: {{ $swift.applicationCredentialSecret }}
      {{- else }}
      username: {{ $swift.username | quote }}
      password: {{ $swift.password | quote }}
      {{- end }}
      authUrl: {{ $swift.authUrl }}
      region: {{ $swift.region }}
      tenant: {{ $swift.projectName }}
      {{- if getOrNil "domainName" $swift }}
      domainName: {{ $swift.domainName }}
      {{- end }}
      {{- if getOrNil "projectDomainName" $swift }}
      projectDomainName: {{ $swift.projectDomainName }}
      {{- end }}
  {{- end }}

  encrypt:
  {{- if .Values.objectStorage.sync.encrypt.enabled }}
    enabled: true
    name: encrypt
    password: {{ .Values.objectStorage.sync.encrypt.passwordObscured }}
    salt: {{ .Values.objectStorage.sync.encrypt.saltObscured }}
    directoryNames: {{ .Values.objectStorage.sync.encrypt.directoryNames }}
    fileNames: {{ .Values.objectStorage.sync.encrypt.fileNames }}
  {{- else }}
    enabled: false
  {{- end }}

defaultSchedule: {{ .Values.objectStorage.sync.defaultSchedule }}

buckets:
{{- if .Values.objectStorage.sync.syncDefaultBuckets }}
  {{- range (values .Values.objectStorage.buckets | sortAlpha) }}
  {{- if has . $swiftEnabled }}
  - source: {{ . }}
    destination: {{ . }}
    sourceType: swift
    destinationType: swift
  {{- else }}
  - source: {{ . }}
    destination: {{ . }}
    sourceType: {{ $.Values.objectStorage.type }}
    destinationType: {{ $.Values.objectStorage.sync.destinationType }}
  {{- end }}
  {{- end }}
{{- end }}
{{- if .Values.objectStorage.sync.buckets }}
  {{- range .Values.objectStorage.sync.buckets }}
  - source: {{ .source }}
    {{- if hasKey . "destination" }}
    destination: {{ .destination }}
    {{- else }}
    destination: {{ .source }}
    {{- end }}
    {{- if hasKey . "schedule" }}
    schedule: {{ .schedule | quote }}
    {{- end }}
    sourceType: {{ . | dig "sourceType" $.Values.objectStorage.type }}
    destinationType: {{ . | dig "destinationType" $.Values.objectStorage.sync.destinationType }}
  {{- end }}
{{- end }}

resources: {{- toYaml .Values.objectStorage.sync.resources | nindent 2 }}
