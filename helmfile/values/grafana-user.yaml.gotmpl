adminPassword: {{ .Values.user.grafanaPassword }}

image:
  repository: grafana/grafana
  tag: 8.4.7
testFramework:
  enabled: false

initChownData:
  enabled: false

deploymentStrategy:
  type: Recreate

ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.global.issuer }}
  {{ if and .Values.externalTrafficPolicy.local .Values.externalTrafficPolicy.whitelistRange.userGrafana }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.externalTrafficPolicy.whitelistRange.userGrafana }}
  {{ end }}
  hosts:
  - {{ .Values.user.grafana.subdomain }}.{{ .Values.global.baseDomain }}
  tls:
  - secretName: user-grafana-tls
    hosts:
    - {{ .Values.user.grafana.subdomain }}.{{ .Values.global.baseDomain }}
rbac:
  pspUseAppArmor: false
  pspEnabled: true
  namespaced: true

persistence:
  type: pvc
  enabled: true
  size: 10Gi
  accessModes:
    - ReadWriteOnce

sidecar:
  dashboards:
    enabled: true
    # This will pick up the prometheus-operator dashboards
    label: grafana_dashboard
    labelValue: "1"
  datasources:
    enabled: false
    defaultDatasourceEnabled: false
  resources: {{- toYaml .Values.prometheus.grafana.sidecar.resources | nindent 6 }}

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    {{- if and .Values.thanos.enabled .Values.thanos.query.enabled }}
    - name: "Service Cluster"
      access: proxy
      basicAuth: false
      editable: false
      isDefault: false
      orgId: 1
      type: prometheus
      url: http://grafana-label-enforcer:9090
      jsonData:
        customQueryParameters: "tenant_id={{ .Values.global.clusterName }}"
      version: 1

    {{- /*
      If only one workload cluster, don't bother naming the datasource and set to default.
      Otherwise set the name of the clusters so users know what they are looking at.
      */}}
    {{- if eq (len .Values.global.clustersMonitoring) 1 }}
    - name: "Workload Cluster"
      access: proxy
      basicAuth: false
      editable: false
      isDefault: true
      orgId: 1
      type: prometheus
      url: http://grafana-label-enforcer:9090
      version: 1
      jsonData:
        customQueryParameters: "tenant_id={{ first .Values.global.clustersMonitoring }}"
    {{- else }}
    {{- range .Values.global.clustersMonitoring }}
    - name: "{{ . }}"
      access: proxy
      basicAuth: false
      editable: false
      isDefault: false
      orgId: 1
      type: prometheus
      url: http://grafana-label-enforcer:9090
      version: 1
      jsonData:
        customQueryParameters: "tenant_id={{ . }}"
    {{- end }}
    {{- end }}
    {{- end }}


grafana.ini:
  server:
    root_url: https://{{ .Values.user.grafana.subdomain }}.{{ .Values.global.baseDomain }}
  auth.generic_oauth:
    name: dex
    enabled: true
    client_id: grafana
    client_secret: {{ .Values.grafana.clientSecret }}
    scopes: {{ .Values.user.grafana.oidc.scopes }}
    auth_url: https://{{ .Values.dex.subdomain }}.{{ .Values.global.baseDomain }}/auth
    token_url: https://{{ .Values.dex.subdomain }}.{{ .Values.global.baseDomain }}/token
    api_url: https://{{ .Values.dex.subdomain }}.{{ .Values.global.baseDomain }}/api
    allowed_domains: {{ join " " .Values.user.grafana.oidc.allowedDomains }}
    allow_sign_up: true
    tls_skip_verify_insecure: {{ not .Values.global.verifyTls }}
    role_attribute_path: contains(groups[*], '{{ .Values.user.grafana.oidc.userGroups.grafanaAdmin }}') && 'Admin' || contains(groups[*], '{{ .Values.user.grafana.oidc.userGroups.grafanaEditor }}') && 'Editor' || contains(groups[*], '{{ .Values.user.grafana.oidc.userGroups.grafanaViewer }}') && 'Viewer'
  users:
    viewers_can_edit: {{ .Values.user.grafana.viewersCanEdit }}

# Velero backup

labels:
  velero: backup

podLabels:
  velero: backup

resources: {{- toYaml .Values.user.grafana.resources | nindent 2 }}
nodeSelector: {{- toYaml .Values.user.grafana.nodeSelector | nindent 2 }}
affinity: {{- toYaml .Values.user.grafana.affinity | nindent 2  }}
tolerations: {{- toYaml .Values.user.grafana.tolerations | nindent 2  }}
