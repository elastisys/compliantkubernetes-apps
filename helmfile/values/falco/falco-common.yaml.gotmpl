falco:
  json_output: true
  syscall_event_drops:
    # Should be removed when fixed. Probably in 1.0.0 https://github.com/falcosecurity/falco/milestone/3
    actions:
      - ignore
  grpc:
    enabled: true
    bind_address: "unix:///var/run/falco/falco.sock"
    threadiness: 8

  grpc_output:
    enabled: true

tty: {{ .Values.falco.tty }}

{{- if eq .Values.falco.driver.kind "module" }}
containerSecurityContext:
  privileged: true
  allowPrivilegeEscalation: true
{{- end }}

podSecurityContext:
  runAsUser: 0

driver:
  kind: {{ .Values.falco.driver.kind }}
  {{- if eq .Values.falco.driver.kind "ebpf" }}
  ebpf:
    path: {{ .Values.falco.driver.ebpf.path }}
    hostNetwork: {{ .Values.falco.driver.ebpf.hostNetwork }}
    leastPrivileged: true
  {{- else if eq .Values.falco.driver.kind "modern-bpf" }}
  modern_bpf:
    leastPrivileged: true
  {{- end }}
  loader:
    initContainer:
      securityContext:
        runAsUser: 0
        privileged: true
        allowPrivilegeEscalation: true

resources: {{- toYaml .Values.falco.resources | nindent 2  }}
nodeSelector: {{- toYaml .Values.falco.nodeSelector | nindent 2  }}
affinity: {{- toYaml .Values.falco.affinity | nindent 2  }}
tolerations: {{- toYaml .Values.falco.tolerations | nindent 2  }}

falcoctl:
  artifact:
    install:
      enabled: false
    follow:
      enabled: false

customRules:
  overwrites.yaml: |-
    - list: trusted_image_repositories
      items: [
        docker.io/jaegertracing/jaeger-operator,
        quay.io/argoproj/argocd,
        docker.io/elastisys/curl-jq,
        ghcr.io/elastisys/argocd-managed-namespaces-manager,
        quay.io/kiwigrid/k8s-sidecar,
        ghcr.io/zalando/spilo-15,
        quay.io/calico/node,
        ghcr.io/elastisys/fluentd,
        docker.io/rabbitmqoperator/cluster-operator,
        docker.io/velero/velero,
        docker.io/library/rabbitmq,
        quay.io/prometheus/prometheus,
        ghcr.io/elastisys/logical-backup
        ]

    - macro: k8s_containers
      append: true
      condition: or (
            container.image.repository in (trusted_image_repositories)
          ) or (
              proc.cmdline = "kubectl get rolebindings --all-namespaces -o json"
          ) or (
            proc.cmdline startswith "kubectl patch secret -n argocd-system argocd-manager-config -p"
          )

    - macro: user_known_stand_streams_redirect_activities
      condition: (
          (container.image.repository = quay.io/calico/node and proc.name = calico-node) or
          (container.image.repository = registry.k8s.io/dns/k8s-dns-node-cache and proc.name = node-cache)
        )

    - macro: user_known_read_sensitive_files_activities
      condition: ( container.image.repository = ghcr.io/zalando/spilo-15 )

    - macro: user_shell_container_exclusions
      condition: ( container.image.repository in (trusted_image_repositories) )
falcosidekick:
  enabled: {{ .Values.falco.alerts.enabled }}
  config:
    debug: false
    {{ if eq .Values.falco.alerts.type "slack" }}
    slack:
      webhookurl: {{ .Values.falco.alerts.slackWebhook }}
      outputformat: "all"
      footer: ""
      icon: ""
      minimumpriority: {{ .Values.falco.alerts.priority }}
      messageformat: "Falco Alert : rule *{{`{{ .Rule }}`}}*"
    {{ end }}

  resources:    {{- toYaml .Values.falco.falcoSidekick.resources | nindent 4  }}
  nodeSelector: {{- toYaml .Values.falco.falcoSidekick.nodeSelector | nindent 4  }}
  affinity:     {{- toYaml .Values.falco.falcoSidekick.affinity | nindent 4  }}
  tolerations:  {{- toYaml .Values.falco.falcoSidekick.tolerations | nindent 4  }}
