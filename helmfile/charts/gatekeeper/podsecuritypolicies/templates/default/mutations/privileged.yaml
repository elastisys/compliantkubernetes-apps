apiVersion: mutations.gatekeeper.sh/v1
kind: Assign
metadata:
  name: mutation-privileged
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    scope: Namespaced
    kinds:
      - apiGroups: ["*"]
        kinds: ["Pod"]
    namespaces:
    {{- range $namespace, $services := .Values.constraints }}
      - {{ $namespace }}
    {{- end}}
    {{- if .Values.mutationExceptions }}
    labelSelector:
      matchExpressions:
        {{- range $value := .Values.mutationExceptions }}
        {{- range $labelkey, $labelvalue := $value }}
        - key: {{ $labelkey }}
          operator: NotIn
          values:
            - {{ $labelvalue | quote }}
        {{- end }}
        {{- end }}
    {{- end }}
  location: "spec.containers[name: *].securityContext.privileged"
  parameters:
    assign:
      value: false
    pathTests:
      - subPath: "spec.containers[name: *].securityContext.privileged"
        condition: MustNotExist
---
apiVersion: mutations.gatekeeper.sh/v1
kind: Assign
metadata:
  name: mutation-init-privileged
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    scope: Namespaced
    kinds:
      - apiGroups: ["*"]
        kinds: ["Pod"]
    namespaces:
    {{- range $namespace, $services := .Values.constraints }}
      - {{ $namespace }}
    {{- end}}
    {{- if .Values.mutationExceptions }}
    labelSelector:
      matchExpressions:
        {{- range $value := .Values.mutationExceptions }}
        {{- range $labelkey, $labelvalue := $value }}
        - key: {{ $labelkey }}
          operator: NotIn
          values:
            - {{ $labelvalue | quote }}
        {{- end }}
        {{- end }}
    {{- end }}
  location: "spec.initContainers[name: *].securityContext.privileged"
  parameters:
    assign:
      value: false
    pathTests:
      - subPath: "spec.initContainers[name: *].securityContext.privileged"
        condition: MustNotExist
