{{ if .Values.thanos.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-thanos
  namespace: thanos
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-receive
  namespace: thanos
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: receive
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: receive-distributor
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: query
      ports:
        - port: 10901
          protocol: TCP
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
      ports:
        - port: 10902
          protocol: TCP
  egress:
    - to:
        {{- range $ip := .Values.global.objectStorage.ips }}
        - ipBlock:
            cidr: {{ $ip }}
        {{- end }}
      ports:
        {{- range $port := .Values.global.objectStorage.ports }}
        - port: {{ $port }}
        {{- end }}
    - ports:
      - protocol: UDP
        port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-receive-distributor
  namespace: thanos
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: receive-distributor
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
      {{- if .Values.global.ingressUsingHostNetwork }}
        {{- range $ip := .Values.global.scNodes.ips }}
        - ipBlock:
            cidr: {{ $ip }}
        {{- end }}
      {{- else }}
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/component: controller
              app.kubernetes.io/instance: ingress-nginx
      {{- end }}
      ports:
        - port: 19291
          protocol: TCP
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: prometheus-blackbox-exporter
      ports:
        - port: 10902
          protocol: TCP
  egress:
    - to:
      - podSelector:
          matchLabels:
            app.kubernetes.io/component: receive
    - ports:
      - protocol: UDP
        port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-compactor
  namespace: thanos
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: compactor
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
      ports:
        - port: 10902
          protocol: TCP
  egress:
    - to:
        {{- range $ip := .Values.global.objectStorage.ips }}
        - ipBlock:
            cidr: {{ $ip }}
        {{- end }}
      ports:
        {{- range $port := .Values.global.objectStorage.ports }}
        - port: {{ $port }}
        {{- end }}
    - ports:
      - protocol: UDP
        port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-storegateway
  namespace: thanos
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: storegateway
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: query
      ports:
        - port: 10901
          protocol: TCP
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
      ports:
        - port: 10902
          protocol: TCP
  egress:
    - to:
        {{- range $ip := .Values.global.objectStorage.ips }}
        - ipBlock:
            cidr: {{ $ip }}
        {{- end }}
      ports:
        {{- range $port := .Values.global.objectStorage.ports }}
        - port: {{ $port }}
        {{- end }}
    - ports:
      - protocol: UDP
        port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-query
  namespace: thanos
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: query
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: query-frontend
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: prometheus-blackbox-exporter
      ports:
        - port: 10902
          protocol: TCP
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: receive
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: storegateway
      ports:
        - port: 10901
          protocol: TCP
    - ports:
      - protocol: UDP
        port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-query-fontend
  namespace: thanos
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: ruler
      ports:
        - port: 10902
          protocol: TCP
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/name: grafana
      ports:
        - port: 10902
          protocol: TCP
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: grafana-label-enforcer
      ports:
        - port: 10902
          protocol: TCP
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
      ports:
        - port: 10902
          protocol: TCP
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: query
      ports:
        - port: 10902
          protocol: TCP
    - ports:
      - protocol: UDP
        port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-bucketweb
  namespace: thanos
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: bucketweb
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
      ports:
        - port: 8080
          protocol: TCP
  egress:
    - to:
        {{- range $ip := .Values.global.objectStorage.ips }}
        - ipBlock:
            cidr: {{ $ip }}
        {{- end }}
      ports:
        {{- range $port := .Values.global.objectStorage.ports }}
        - port: {{ $port }}
        {{- end }}
    - ports:
      - protocol: UDP
        port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-ruler
  namespace: thanos
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: ruler
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
      ports:
        - port: 10902
          protocol: TCP
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: query-frontend
      ports:
        - port: 10902
          protocol: TCP
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app: alertmanager
      ports:
        - port: 9093
          protocol: TCP
    - to:
        {{- range $ip := .Values.global.objectStorage.ips }}
        - ipBlock:
            cidr: {{ $ip }}
        {{- end }}
      ports:
        {{- range $port := .Values.global.objectStorage.ports }}
        - port: {{ $port }}
        {{- end }}
    - ports:
      - protocol: UDP
        port: 53
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-cert-manager-resolver
  namespace: thanos
spec:
  podSelector:
    matchLabels:
      acme.cert-manager.io/http01-solver: "true"
  ingress:
    - from:
      {{- if .Values.global.ingressUsingHostNetwork }}
        {{- range $ip := .Values.global.scNodes.ips }}
        - ipBlock:
            cidr: {{ $ip }}
        {{- end }}
      {{- else }}
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/component: controller
              app.kubernetes.io/instance: ingress-nginx
      {{- end }}
      ports:
      - port: 8089
        protocol: TCP
{{- end }}
