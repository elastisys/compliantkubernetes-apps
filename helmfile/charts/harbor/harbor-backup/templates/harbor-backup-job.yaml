apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-cronjob
spec:
  schedule: {{ .Values.schedule }}
  startingDeadlineSeconds: {{ .Values.startingDeadlineSeconds }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            release: {{ .Release.Name }}
            component: backup
        spec:
          restartPolicy: OnFailure
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          containers:
            - name: run
              image: ghcr.io/elastisys/backup-postgres:1.3.0
              command: ['/bin/bash', '/scripts/harbor-backup.sh']
              env:
              {{- if .Values.s3.enabled }}
                - name: S3_BACKUP
                  value: "true"
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: harbor-backup-secret
                      key: aws-access-key-id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: harbor-backup-secret
                      key: aws-secret-access-key
                - name: BUCKET_NAME
                  value: {{ .Values.s3.bucket }}
                - name: S3_REGION_ENDPOINT
                  value: {{ .Values.s3.endpoint }}
              {{- else if .Values.gcs.enabled }}
                - name: GCS_BACKUP
                  value: "true"
                - name: GCS_KEYFILE
                  value: /etc/gcs/gcs-credentials.json
                - name: BUCKET_NAME
                  value: {{ .Values.gcs.bucket }}
              {{- end }}
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: harbor-backup-secret
                      key: db-password
                - name: PG_HOSTNAME
                  value: {{ .Values.pgHostname }}
                - name: DAYS_TO_RETAIN
                  value: "{{ .Values.retentionDays }}"
              volumeMounts:
                - name: scripts
                  mountPath: /scripts
                - name: backup
                  mountPath: /backup
                {{ if .Values.gcs.enabled -}}
                - name: gcs-credentials
                  mountPath: /etc/gcs
                {{- end }}
          volumes:
          - name: scripts
            configMap:
              name: {{ .Release.Name }}-cm
          - name: backup
            emptyDir: {}
          {{- if .Values.gcs.enabled }}
          - name: gcs-credentials
            secret:
              secretName: harbor-backup-secret
          {{- end }}
