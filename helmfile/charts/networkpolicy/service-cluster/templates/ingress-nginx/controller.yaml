{{ if .Values.ingressNginx.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: controller
  policyTypes:
    - Ingress
    - Egress
  ingress:
    {{- if or .Values.ingressNginx.ingressOverride.ips .Values.global.scNodes.ips .Values.global.scIngress.ips }}
    - from:
      {{- if and .Values.ingressNginx.ingressOverride.enabled .Values.ingressNginx.ingressOverride.ips }}
        {{- range $IP := .Values.ingressNginx.ingressOverride.ips }}
        - ipBlock:
            cidr: {{ $IP }}
        {{- end }}
      {{- else if not (or .Values.global.externalLoadBalancer .Values.global.ingressUsingHostNetwork) }}
        {{- if .Values.global.scNodes.ips }}
        {{- range $IP := .Values.global.scNodes.ips }}
        - ipBlock:
            cidr: {{ $IP }}
        {{- end }}
        {{- end }}
      {{- else if .Values.global.scIngress.ips }}
        {{- range $IP := .Values.global.scIngress.ips }}
        - ipBlock:
            cidr: {{ $IP }}
        {{- end }}
      {{- end }}
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus-blackbox-exporter
              app.kubernetes.io/instance: prometheus-blackbox-exporter
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80
    {{- end }}
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: kube-prometheus-stack-prometheus
      ports:
        - port: 10254
    - from:
        {{- if .Values.global.scApiserver.ips }}
        {{- range $IP := .Values.global.scApiserver.ips }}
        - ipBlock:
            cidr: {{ $IP }}
        {{- end }}
        {{- end }}
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus-blackbox-exporter
              app.kubernetes.io/instance: prometheus-blackbox-exporter
      ports:
        - protocol: TCP
          port: 8443 ## admission
  egress:
    - ports:
      - port: 53
        protocol: UDP
      - port: 53
        protocol: TCP
    {{- if or .Values.ingressNginx.ingressOverride.ips .Values.global.scIngress.ips }}
    - to:
      {{- if and .Values.ingressNginx.ingressOverride.enabled .Values.ingressNginx.ingressOverride.ips }}
        {{- range $IP := .Values.ingressNginx.ingressOverride.ips }}
        - ipBlock:
            cidr: {{ $IP }}
        {{- end }}
      {{- else if .Values.global.scIngress.ips }}
        {{- range $IP := .Values.global.scIngress.ips }}
        - ipBlock:
            cidr: {{ $IP }}
        {{- end }}
      {{- end }}
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80
    {{- end }}
    {{- if and .Values.global.scApiserver.ips .Values.global.scApiserver.port }}
    - to:
        {{- range $IP := .Values.global.scApiserver.ips }}
        - ipBlock:
            cidr: {{ $IP }}
        {{- end }}
      ports:
        - protocol: TCP
          port: {{ .Values.global.scApiserver.port }}
    {{- end }}
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/name: grafana
      ports:
        - port: 3000
    {{- if .Values.opensearch.enabled }}
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: opensearch-system
          podSelector:
            matchLabels:
              app: opensearch-dashboards
      ports:
        - port: 5601
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: opensearch-system
          podSelector:
            matchLabels:
              {{- if .Values.opensearch.client.enabled }}
              app.kubernetes.io/component: opensearch-client
              {{- else }}
              app.kubernetes.io/component: opensearch-master
              {{- end }}
      ports:
        - port: 9200
    {{- end }}
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: harbor
          podSelector:
            matchLabels:
              component: core
      ports:
        - port: 8080
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: harbor
          podSelector:
            matchLabels:
              component: portal
      ports:
        - port: 8080
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: dex
          podSelector:
            matchLabels:
              app.kubernetes.io/name: dex
      ports:
        - port: 5556
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: harbor
          podSelector:
            matchLabels:
              component: notary-server
      ports:
        - port: 4443
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: thanos
          podSelector:
            matchLabels:
              app.kubernetes.io/component: receive-distributor
      ports:
        - port: 10902 # HTTP API
        - port: 19291 # Remote Write
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: default-backend
      ports:
        - port: 8080
    - to:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              acme.cert-manager.io/http01-solver: "true"
      ports:
        - port: 8089
{{- end }}
