import '../commands/opensearch.js'
describe("opensearch static dex user", function() {
  before(function() {
    cy.yq("sc", "\"https://\" + .opensearch.dashboards.subdomain + \".\" + .global.baseDomain")
      .should("not.be.empty")
      .as('baseUrl')
    cy.yq("sc", ".opensearch.indexPerNamespace")
      .should("not.be.empty")
      .as('indexPerNamespace')
  })
  beforeEach(function() {
    cy.dexStaticUserLogin("admin@example.com", this.baseUrl, 'security_authentication')
    // turning off uncaught exception handling for location.href.split error generated by opensearch
    cy.on('uncaught:exception', (err, runnable) => {
      if (err.message.includes('location.href.split(...)[1] is undefined')) {
        return false
      } else if (err.message.includes("Cannot read properties of undefined (reading 'split')")) {
        return false
      }
    })
  })

  it('Welcome dashboard is visible', function () {
    cy.visit(this.baseUrl)
    cy.contains('Welcome to Compliant Kubernetes!')
  })

  it('open the Audit user  dashboard', function () {
    cy.testOpensearchDashboard(this.baseUrl, 'Audit user')

    // this will require that the user has some audit entries
    // cy.get('[data-test-subj="comboBoxToggleListButton"]').first().click()
    // cy.get('[data-test-subj="option_admin@example.com"]').click()
    // cy.get('[data-test-subj="comboBoxToggleListButton"]').first().click()
    // cy.contains('button', 'Apply changes').first().click()
  })

  it('test kubernetes index', function () {
    if (this.indexPerNamespace === "true") {
      this.skip()
    } else {
      cy.testOpensearchIndex(this.baseUrl, 'kubernetes')
    }
  })

  it('test kubeaudit index', function () {
    cy.testOpensearchIndex(this.baseUrl, 'kubeaudit')
  })

  // ToDo: decide if we want to add the admin@example.com user as admin and test more indices
})
