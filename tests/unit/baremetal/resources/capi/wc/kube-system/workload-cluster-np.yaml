---
# Source: networkpolicy-workload/templates/ingress-nginx/controller.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: controller
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - ipBlock:
            cidr: 0.0.0.0/0
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus-blackbox-exporter
              app.kubernetes.io/instance: prometheus-blackbox-exporter
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: kube-prometheus-stack-prometheus
      ports:
        - port: 10254
    - from:
        - ipBlock:
            cidr: 0.0.0.0/0
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus-blackbox-exporter
              app.kubernetes.io/instance: prometheus-blackbox-exporter
      ports:
        - protocol: TCP
          port: 8443
  egress:
    - ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 6443
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              component: kube-apiserver
      ports:
        - port: 3000
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: default-backend
      ports:
        - port: 8080
    - to:
        - namespaceSelector: {}
    - to:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              acme.cert-manager.io/http01-solver: "true"
      ports:
        - port: 8089
---
# Source: networkpolicy-workload/templates/ingress-nginx/default-backend.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-nginx-default-backend
  namespace: ingress-nginx
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: default-backend
  policyTypes:
    - Ingress
  ingress:
    - from:
      - ipBlock:
          cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 8080
---
# Source: networkpolicy-workload/templates/ingress-nginx/default-deny.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-nginx-deny-all
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
---
# Source: networkpolicy-workload/templates/ingress-nginx/webhook.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-nginx-webhook
  namespace: ingress-nginx
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: admission-webhook
  policyTypes:
    - Egress
  egress:
    - ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 6443

