#!/usr/bin/env bats

{{- define "template" -}}
#!/usr/bin/env bats

# Generated from {{ tmpl.Path }}

# bats file_tags=static,{{ .provider }}

setup_file() {
  # Not supported right now, might be able to leverage env.cache with some adaptions
  export BATS_NO_PARALLELIZE_WITHIN_FILE=true

  load "../../common/lib"
  load "../../common/lib/env"
  load "../../common/lib/gpg"

  gpg.setup
  env.setup

  env.init {{ .flavor }} {{ .provider }} {{ .k8sInstaller }}
}

setup() {
  load "../../common/lib"
  load "script"

  common_setup
}

teardown_file() {
  env.teardown
  gpg.teardown
}

@test "configuration is valid - {{ .k8sInstaller }}:{{ .provider }}:{{ .flavor }} - service cluster" {
  run ck8s validate sc <<< $'y\n'

  assert_success
}

@test "configuration is valid - {{ .k8sInstaller }}:{{ .provider }}:{{ .flavor }} - workload cluster" {
  run ck8s validate wc <<< $'y\n'

  assert_success
}

@test "configuration is invalid - {{ .k8sInstaller }}:{{ .provider }}:{{ .flavor }} - service cluster" {
  run yq_set 'sc' '.global.baseDomain' '"this is not a valid hostname"'
  run ck8s validate sc <<< $'y\n'

  assert_output --partial 'global.baseDomain'
}

@test "configuration is invalid - {{ .k8sInstaller }}:{{ .provider }}:{{ .flavor }} - workload cluster" {
  run yq_set 'wc' '.global.baseDomain' '"this is not a valid hostname"'
  run ck8s validate wc <<< $'y\n'

  assert_output --partial '"this is not a valid hostname"'
}

@test "manifests are valid - {{ .k8sInstaller }}:{{ .provider }}:{{ .flavor }} - service cluster" {
  run helmfile_template_kubeconform service_cluster

  assert_success
}

@test "manifests are valid - {{ .k8sInstaller }}:{{ .provider }}:{{ .flavor }} - workload cluster" {
  run helmfile_template_kubeconform workload_cluster

  assert_success
}
{{ end }}

# These tests are generated into these files:
{{- range $k8sInstaller := coll.Slice "kubespray" "capi" }}
{{- range $provider := coll.Slice "aws" "baremetal" "citycloud" "elastx" "exoscale" "safespring" "upcloud" }}
{{- range $flavor := coll.Slice "air-gapped" "dev" "prod" }}
{{- $file := tmpl.Path | path.Dir }}
{{- $file = printf "test-%s-%s-%s.gen.bats" $k8sInstaller $provider $flavor | path.Join $file }}
# - {{ $file }}
{{- coll.Dict "flavor" $flavor "provider" $provider "k8sInstaller" $k8sInstaller | tmpl.Exec "template" | file.Write $file }}
{{- end }}
{{- end }}
{{- end }}
