---
# Source: thanos/templates/query-frontend/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: thanos-query-query-frontend
  namespace: thanos
  labels:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.37.2
    helm.sh/chart: thanos-15.13.1
    app.kubernetes.io/component: query-frontend
automountServiceAccountToken: false
---
# Source: thanos/templates/query/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: thanos-query-query
  namespace: thanos
  labels:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.37.2
    helm.sh/chart: thanos-15.13.1
    app.kubernetes.io/component: query
automountServiceAccountToken: false
---
# Source: thanos/templates/query-frontend/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: thanos-query-query-frontend
  namespace: thanos
  labels:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.37.2
    helm.sh/chart: thanos-15.13.1
    app.kubernetes.io/component: query-frontend
    prometheus-operator/monitor: 'true'
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: http
      protocol: TCP
      name: http
      nodePort: null
  selector:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/name: thanos
    app.kubernetes.io/component: query-frontend
---
# Source: thanos/templates/query/service-grpc.yaml
apiVersion: v1
kind: Service
metadata:
  name: thanos-query-query-grpc
  namespace: thanos
  labels:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.37.2
    helm.sh/chart: thanos-15.13.1
    app.kubernetes.io/component: query
spec:
  type: ClusterIP
  ports:
    - port: 10901
      targetPort: grpc
      protocol: TCP
      name: grpc
      nodePort: null
  selector:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/name: thanos
    app.kubernetes.io/component: query
---
# Source: thanos/templates/query/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: thanos-query-query-headless
  namespace: thanos
  labels:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.37.2
    helm.sh/chart: thanos-15.13.1
    app.kubernetes.io/component: query
    prometheus-operator/monitor: 'true'
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 9090
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/name: thanos
    app.kubernetes.io/component: query
---
# Source: thanos/templates/query/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: thanos-query-query
  namespace: thanos
  labels:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.37.2
    helm.sh/chart: thanos-15.13.1
    app.kubernetes.io/component: query
    prometheus-operator/monitor: 'true'
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: http
      protocol: TCP
      name: http
      nodePort: null
  selector:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/name: thanos
    app.kubernetes.io/component: query
---
# Source: thanos/templates/query-frontend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query-query-frontend
  namespace: thanos
  labels:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.37.2
    helm.sh/chart: thanos-15.13.1
    app.kubernetes.io/component: query-frontend
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: thanos-query
      app.kubernetes.io/name: thanos
      app.kubernetes.io/component: query-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: thanos-query
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: thanos
        app.kubernetes.io/version: 0.37.2
        helm.sh/chart: thanos-15.13.1
        app.kubernetes.io/component: query-frontend
    spec:
      
      serviceAccountName: thanos-query-query-frontend
      automountServiceAccountToken: true
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: thanos-query
                    app.kubernetes.io/name: thanos
                    app.kubernetes.io/component: query-frontend
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      containers:
        - name: query-frontend
          image: ghcr.io/elastisys/bitnami/thanos:0.37.2-debian-12-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          args:
            - query-frontend
            - --log.level=info
            - --log.format=logfmt
            - --http-address=0.0.0.0:9090
            - --query-frontend.downstream-url=http://thanos-query-query:9090
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
            httpGet:
              path: /-/healthy
              port: http
              scheme: HTTP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
          resources:
            limits:
              cpu: 300m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 40Mi
          volumeMounts:
      volumes:
---
# Source: thanos/templates/query/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query-query
  namespace: thanos
  labels:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.37.2
    helm.sh/chart: thanos-15.13.1
    app.kubernetes.io/component: query
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: thanos-query
      app.kubernetes.io/name: thanos
      app.kubernetes.io/component: query
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: thanos-query
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: thanos
        app.kubernetes.io/version: 0.37.2
        helm.sh/chart: thanos-15.13.1
        app.kubernetes.io/component: query
    spec:
      
      serviceAccountName: thanos-query-query
      automountServiceAccountToken: true
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: thanos-query
                    app.kubernetes.io/name: thanos
                    app.kubernetes.io/component: query
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: query
              app.kubernetes.io/instance: thanos-query
              app.kubernetes.io/name: thanos
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: query
              app.kubernetes.io/instance: thanos-query
              app.kubernetes.io/name: thanos
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
      containers:
        - name: query
          image: ghcr.io/elastisys/bitnami/thanos:0.37.2-debian-12-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          args:
            - query
            - --log.level=info
            - --log.format=logfmt
            - --grpc-address=0.0.0.0:10901
            - --http-address=0.0.0.0:10902
            - --query.replica-label=replica
            - --query.replica-label=prometheus_replica
            - --endpoint=thanos-receiver-storegateway:10901
            - --endpoint=dnssrv+_grpc._tcp.thanos-receiver-receive-headless.thanos.svc
            - --endpoint=dnssrv+_grpc._tcp.thanos-receiver-ruler-headless.thanos.svc
            - --alert.query-url=http://thanos-query-query.thanos.svc.cluster.local:9090
            - --query.auto-downsampling
          ports:
            - name: http
              containerPort: 10902
              protocol: TCP
            - name: grpc
              containerPort: 10901
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
            httpGet:
              path: /-/healthy
              port: http
              scheme: HTTP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 60Mi
          volumeMounts:
      volumes:
---
# Source: thanos/templates/query-frontend/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: thanos-query-query-frontend
  namespace: "thanos"
  labels:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.37.2
    helm.sh/chart: thanos-15.13.1
    app.kubernetes.io/component: query-frontend
spec:
  endpoints:
    - port: http
  namespaceSelector:
    matchNames:
      - "thanos"
  selector:
    matchLabels:
      app.kubernetes.io/instance: thanos-query
      app.kubernetes.io/name: thanos
      app.kubernetes.io/component: query-frontend
      prometheus-operator/monitor: 'true'
---
# Source: thanos/templates/query/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: thanos-query-query
  namespace: "thanos"
  labels:
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.37.2
    helm.sh/chart: thanos-15.13.1
    app.kubernetes.io/component: query
spec:
  endpoints:
    - port: http
  namespaceSelector:
    matchNames:
      - "thanos"
  selector:
    matchLabels:
      app.kubernetes.io/instance: thanos-query
      app.kubernetes.io/name: thanos
      app.kubernetes.io/component: query
      prometheus-operator/monitor: 'true'

