---
# Source: networkpolicy-generator/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    helm.sh/chart: networkpolicy-generator-0.1.0
    app.kubernetes.io/name: networkpolicy-generator
    app.kubernetes.io/instance: networkpolicy
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: all-deny
  namespace: hnc-system
spec:
  podSelector: {}
  policyTypes:
    - Egress
    - Ingress
---
# Source: networkpolicy-generator/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    helm.sh/chart: networkpolicy-generator-0.1.0
    app.kubernetes.io/name: networkpolicy-generator
    app.kubernetes.io/instance: networkpolicy
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: controller-manager
  namespace: hnc-system
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: hnc-controller-manager
  policyTypes:
    - Egress
    - Ingress
  egress:
    # base: egress-rule-apiserver
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 6443
  ingress:
    # base: ingress-rule-prometheus
    - from:
        - namespaceSelector:
            matchLabels: 
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels: 
              app.kubernetes.io/name: prometheus
      ports:
        - protocol: TCP
          port: 8080
---
# Source: networkpolicy-generator/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    helm.sh/chart: networkpolicy-generator-0.1.0
    app.kubernetes.io/name: networkpolicy-generator
    app.kubernetes.io/instance: networkpolicy
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: webhook
  namespace: hnc-system
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: hnc-webhook
  policyTypes:
    - Egress
    - Ingress
  egress:
    # base: egress-rule-apiserver
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 6443
  ingress:
    # base: ingress-rule-apiserver
    - from:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 9443

