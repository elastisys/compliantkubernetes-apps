---
# Source: fluentd-elasticsearch/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-forwarder
  labels:
    helm.sh/chart: fluentd-elasticsearch-13.12.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-forwarder
    app.kubernetes.io/version: "v4.7.5"
    app.kubernetes.io/managed-by: Helm
    addonmanager.kubernetes.io/mode: Reconcile
---
# Source: fluentd-elasticsearch/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-forwarder
  labels:
    helm.sh/chart: fluentd-elasticsearch-13.12.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-forwarder
    app.kubernetes.io/version: "v4.7.5"
    app.kubernetes.io/managed-by: Helm
    addonmanager.kubernetes.io/mode: Reconcile
data:
  system.input.conf: |-
    # Example:
    # 2015-12-21 23:17:22,066 [salt.state       ][INFO    ] Completed state [net.ipv4.ip_forward] at time 23:17:22.066081
    <source>
      @id minion
      @type tail
      format /^(?<time>[^ ]* [^ ,]*)[^\[]*\[[^\]]*\]\[(?<severity>[^ \]]*) *\] (?<message>.*)$/
      time_format %Y-%m-%d %H:%M:%S
      path /var/log/salt/minion
      pos_file /var/log/salt.pos
      tag salt
    </source>

    # Example:
    # Dec 21 23:17:22 gke-foo-1-1-4b5cbd14-node-4eoj startupscript: Finished running startup script /var/run/google.startup.script
    <source>
      @id startupscript.log
      @type tail
      format syslog
      path /var/log/startupscript.log
      pos_file /var/log/startupscript.log.pos
      tag startupscript
    </source>

    # Examples:
    # time="2016-02-04T06:51:03.053580605Z" level=info msg="GET /containers/json"
    # time="2016-02-04T07:53:57.505612354Z" level=error msg="HTTP Error" err="No such image: -f" statusCode=404
    # TODO(random-liu): Remove this after cri container runtime rolls out.
    <source>
      @id docker.log
      @type tail
      format /time="(?<time>[^)]*)" level=(?<severity>[^ ]*) msg="(?<message>[^"]*)"( err="(?<error>[^"]*)")?( statusCode=($<status_code>\d+))?/
      path /var/log/docker.log
      pos_file /var/log/docker.log.pos
      tag docker
    </source>

    # Example:
    # 2016/02/04 06:52:38 filePurge: successfully removed file /var/etcd/data/member/wal/00000000000006d0-00000000010a23d1.wal
    <source>
      @id etcd.log
      @type tail
      # Not parsing this, because it doesn't have anything particularly useful to
      # parse out of it (like severities).
      format none
      path /var/log/etcd.log
      pos_file /var/log/etcd.log.pos
      tag etcd
    </source>

    # Multi-line parsing is required for all the kube logs because very large log
    # statements, such as those that include entire object bodies, get split into
    # multiple lines by glog.
    # Example:
    # I0204 07:32:30.020537    3368 server.go:1048] POST /stats/container/: (13.972191ms) 200 [[Go-http-client/1.1] 10.244.1.3:40537]
    <source>
      @id kubelet.log
      @type tail
      format multiline
      multiline_flush_interval 5s
      format_firstline /^\w\d{4}/
      format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
      time_format %m%d %H:%M:%S.%N
      path /var/log/kubelet.log
      pos_file /var/log/kubelet.log.pos
      tag kubelet
    </source>

    # Example:
    # I1118 21:26:53.975789       6 proxier.go:1096] Port "nodePort for kube-system/default-http-backend:http" (:31429/tcp) was open before and is still needed
    <source>
      @id kube-proxy.log
      @type tail
      format multiline
      multiline_flush_interval 5s
      format_firstline /^\w\d{4}/
      format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
      time_format %m%d %H:%M:%S.%N
      path /var/log/kube-proxy.log
      pos_file /var/log/kube-proxy.log.pos
      tag kube-proxy
    </source>

    # Example:
    # I0204 07:00:19.604280       5 handlers.go:131] GET /api/v1/nodes: (1.624207ms) 200 [[kube-controller-manager/v1.1.3 (linux/amd64) kubernetes/6a81b50] 127.0.0.1:38266]
    <source>
      @id kube-apiserver.log
      @type tail
      format multiline
      multiline_flush_interval 5s
      format_firstline /^\w\d{4}/
      format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
      time_format %m%d %H:%M:%S.%N
      path /var/log/kube-apiserver.log
      pos_file /var/log/kube-apiserver.log.pos
      tag kube-apiserver
    </source>

    # Example:
    # I0204 06:55:31.872680       5 servicecontroller.go:277] LB already exists and doesn't need update for service kube-system/kube-ui
    <source>
      @id kube-controller-manager.log
      @type tail
      format multiline
      multiline_flush_interval 5s
      format_firstline /^\w\d{4}/
      format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
      time_format %m%d %H:%M:%S.%N
      path /var/log/kube-controller-manager.log
      pos_file /var/log/kube-controller-manager.log.pos
      tag kube-controller-manager
    </source>

    # Example:
    # W0204 06:49:18.239674       7 reflector.go:245] pkg/scheduler/factory/factory.go:193: watch of *api.Service ended with: 401: The event in requested index is outdated and cleared (the requested history has been cleared [2578313/2577886]) [2579312]
    <source>
      @id kube-scheduler.log
      @type tail
      format multiline
      multiline_flush_interval 5s
      format_firstline /^\w\d{4}/
      format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
      time_format %m%d %H:%M:%S.%N
      path /var/log/kube-scheduler.log
      pos_file /var/log/kube-scheduler.log.pos
      tag kube-scheduler
    </source>

    # Example:
    # I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf
    <source>
      @id glbc.log
      @type tail
      format multiline
      multiline_flush_interval 5s
      format_firstline /^\w\d{4}/
      format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
      time_format %m%d %H:%M:%S.%N
      path /var/log/glbc.log
      pos_file /var/log/glbc.log.pos
      tag glbc
    </source>

    # Example:
    # TODO Add a proper example here.
    <source>
      @id cluster-autoscaler.log
      @type tail
      format multiline
      multiline_flush_interval 5s
      format_firstline /^\w\d{4}/
      format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
      time_format %m%d %H:%M:%S.%N
      path /var/log/cluster-autoscaler.log
      pos_file /var/log/cluster-autoscaler.log.pos
      tag cluster-autoscaler
    </source>

    # Logs from systemd-journal for interesting services.
    # TODO(random-liu): Remove this after cri container runtime rolls out.
    <source>
      @id journald-docker
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "docker.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-docker.pos
      </storage>
      <entry>
        fields_strip_underscores true
        fields_lowercase true
      </entry>
      read_from_head true
      tag docker
    </source>

    <source>
      @id journald-container-runtime
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "{{ fluentd_container_runtime_service }}.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-container-runtime.pos
      </storage>
      <entry>
        fields_strip_underscores true
        fields_lowercase true
      </entry>
      read_from_head true
      tag container-runtime
    </source>

    <source>
      @id journald-kubelet
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "kubelet.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-kubelet.pos
      </storage>
      <entry>
        fields_strip_underscores true
        fields_lowercase true
      </entry>
      read_from_head true
      tag kubelet
    </source>

    <source>
      @id journald-node-problem-detector
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "node-problem-detector.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-node-problem-detector.pos
      </storage>
      <entry>
        fields_strip_underscores true
        fields_lowercase true
      </entry>
      read_from_head true
      tag node-problem-detector
    </source>

    <source>
      @id kernel
      @type systemd
      matches [{ "_TRANSPORT": "kernel" }]
      <storage>
        @type local
        persistent true
        path /var/log/kernel.pos
      </storage>
      <entry>
        fields_strip_underscores true
        fields_lowercase true
      </entry>
      read_from_head true
      tag kernel
    </source>
  00-system.conf: |-
    <system>
      root_dir /tmp/fluentd-buffers/
      <log>
        format json
      </log>
    </system>
  01-monitoring.conf: |-
    # Prometheus Exporter Plugin
    # input plugin that exports metrics
    <source>
      @id prometheus
      @type prometheus
    </source>
    
    # input plugin that collects metrics from MonitorAgent
    <source>
      @id prometheus_monitor
      @type prometheus_monitor
      <labels>
        host ${hostname}
      </labels>
    </source>
    
    # input plugin that collects metrics for output plugin
    <source>
      @id prometheus_output_monitor
      @type prometheus_output_monitor
      <labels>
        host ${hostname}
      </labels>
    </source>
    
    # Don't include prometheus_tail_monitor since this will cause number of metrics to increase indefinitely
    # https://github.com/fluent/fluent-plugin-prometheus/issues/20
  10-authlog.conf: |-
    # Tail the authlog
    <source>
      @id authlog
      @type tail
      path /var/log/auth.log
      pos_file /var/log/auth.pos
      pos_file_compaction_interval 72h
      tag authlog.*
      skip_refresh_on_startup true
      <parse>
        @type regexp
        expression /^(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$/
      </parse>
    </source>
  11-kubeaudit.conf: |-
    # Tail the kubeaudit
    <source>
      @id kubeaudit
      @type tail
      path /var/log/kube-audit/kube-apiserver.log,/var/log/kubernetes/audit/kube-apiserver-audit.log
      pos_file /var/log/kube-audit/fluentd-kube-apiserver.pos
      pos_file_compaction_interval 72h
      tag kubeaudit.*
      read_from_head true
      skip_refresh_on_startup true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key stageTimestamp
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </pattern>
      </parse>
    </source>
    
    # Jsonify responseObject and requestObject keys so that their
    # contents won't be dynamically mapped in Opensearch and instead be indexed
    # as json text.
    <filter kubeaudit.**>
      @id kube_api_audit_normalize
      @type record_transformer
      auto_typecast false
      enable_ruby true
      <record>
        responseObject ${record["responseObject"].nil? ? "none": record["responseObject"].to_json}
        requestObject ${record["requestObject"].nil? ? "none": record["requestObject"].to_json}
      </record>
    </filter>
  12-kubernetes.conf: |-
    # Tail the kubernetes container logs
    
    # This config is taken from a default config that we have disabled
    # See the value "configMaps.useDefaults.containersInputConf: false" above
    # But we added "reserve_time true" in order to allow falco logs to use json
    <source>
      @id kubernetes
      @type tail
      path /var/log/containers/*.log
      exclude_path ["/var/log/containers/fluentd*"]
      pos_file /var/log/containers.log.pos
      pos_file_compaction_interval 72h
      tag raw.kubernetes.*
      read_from_head true
      skip_refresh_on_startup true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </pattern>
        <pattern>
          format /^(?<time>.+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$/
          time_format %Y-%m-%dT%H:%M:%S.%N%:z
        </pattern>
      </parse>
    </source>
    
    # Detect exceptions in the log output and forward them as one log entry.
    <match raw.kubernetes.**>
      @id raw.kubernetes
      @type detect_exceptions
      remove_tag_prefix raw
      message log
      stream stream
      multiline_flush_interval 5
      max_bytes 500000
      max_lines 1000
    </match>
    
    # Concatenate multi-line logs
    <filter **>
      @id filter_concat
      @type concat
      key message
      use_first_timestamp true
      partial_key logtag
      partial_value P
      separator ""
      # TODO: When we have updated this plugin to v2.5.0 change to this instead
      # @id filter_concat
      # @type concat
      # key message
      # use_partial_cri_logtag true
      # partial_cri_logtag_key logtag
      # partial_cri_stream_key stream
    </filter>
    
    # Fixes json fields in Elasticsearch
    <filter kubernetes.**>
      @id filter_parser
      @type parser
      key_name log
      reserve_data true
      reserve_time true # This is the line that is changed from the default config
      remove_key_name_field true
      <parse>
        @type multi_format
        <pattern>
          format json
        </pattern>
        <pattern>
          format none
        </pattern>
      </parse>
    </filter>
    
    # Enriches records with Kubernetes metadata
    <filter kubernetes.**>
      @id filter_kubernetes_metadata
      @type kubernetes_metadata
    </filter>
  20-filters.conf: |-
    <filter **>
      @type record_modifier
      char_encoding utf-8:utf-8
    </filter>
    
    <filter **>
      @type record_transformer
      <record>
        cluster.name "apps-tests-sc"
      </record>
    </filter>
    
    <filter kubernetes.**>
      @type dedot
      de_dot true
      de_dot_separator _
      de_dot_nested true
    </filter>
    
    # count the number of incoming records per tag
    <filter **>
      @type prometheus
      @id filter_prometheus
      <metric>
        name fluentd_input_status_num_records_total
        type counter
        desc The total number of incoming records
        <labels>
          tag ${tag_parts[0]}
          hostname ${hostname}
          namespace $.kubernetes.namespace_name
        </labels>
      </metric>
    </filter>
  30-output.conf: |-
    # Forward
    <match **>
      @id output-forwarding
      @type forward
      send_timeout 60s
      recover_wait 10s
      hard_timeout 60s
    
      <server>
        name aggregator
        host fluentd-aggregator-aggregator
        port 24224
        weight 60
      </server>
    
      <buffer>
        @include buffer.prop
        path /var/log/fluentd-buffers/audit
      </buffer>
    </match>
  buffer.prop: |-
    @type "#{ENV['OUTPUT_BUFFER_TYPE']}"
    flush_mode "#{ENV['OUTPUT_BUFFER_FLUSH_MODE']}"
    retry_type "#{ENV['OUTPUT_BUFFER_RETRY_TYPE']}"
    flush_thread_count "#{ENV['OUTPUT_BUFFER_FLUSH_THREAD_TYPE']}"
    flush_interval "#{ENV['OUTPUT_BUFFER_FLUSH_INTERVAL']}"
    retry_forever "#{ENV['OUTPUT_BUFFER_RETRY_FOREVER']}"
    retry_max_interval "#{ENV['OUTPUT_BUFFER_RETRY_MAX_INTERVAL']}"
    chunk_limit_size "#{ENV['OUTPUT_BUFFER_CHUNK_LIMIT']}"
    total_limit_size "#{ENV['OUTPUT_BUFFER_TOTAL_LIMIT_SIZE']}"
    overflow_action "#{ENV['OUTPUT_BUFFER_OVERFLOW_ACTION']}"
---
# Source: fluentd-elasticsearch/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-forwarder
  labels:
    helm.sh/chart: fluentd-elasticsearch-13.12.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-forwarder
    app.kubernetes.io/version: "v4.7.5"
    app.kubernetes.io/managed-by: Helm
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "namespaces"
  - "pods"
  verbs:
  - "get"
  - "watch"
  - "list"
---
# Source: fluentd-elasticsearch/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-forwarder
  labels:
    helm.sh/chart: fluentd-elasticsearch-13.12.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-forwarder
    app.kubernetes.io/version: "v4.7.5"
    app.kubernetes.io/managed-by: Helm
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: fluentd-forwarder
  namespace: fluentd-system
roleRef:
  kind: ClusterRole
  name: fluentd-forwarder
  apiGroup: rbac.authorization.k8s.io
---
# Source: fluentd-elasticsearch/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: fluentd-forwarder-metrics
  labels:
    helm.sh/chart: fluentd-elasticsearch-13.12.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-forwarder
    app.kubernetes.io/version: "v4.7.5"
    app.kubernetes.io/managed-by: Helm
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 24231
      targetPort: 24231
  selector:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-forwarder
---
# Source: fluentd-elasticsearch/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-forwarder
  labels:
    helm.sh/chart: fluentd-elasticsearch-13.12.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-forwarder
    app.kubernetes.io/version: "v4.7.5"
    app.kubernetes.io/managed-by: Helm
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fluentd
      app.kubernetes.io/instance: fluentd-forwarder
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fluentd
        app.kubernetes.io/instance: fluentd-forwarder
      annotations:
        checksum/config: 9200dc601e9aad2db9cdbab07c79aef67d84b94a09dcaa27b72e7eb163ccb781
    spec:
      serviceAccountName: fluentd-forwarder
      containers:
      - name: fluentd-forwarder
        image:  "ghcr.io/elastisys/fluentd-forwarder:v4.7.5-ck8s1"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: FLUENTD_ARGS
          value: "--no-supervisor -q"
        - name: OUTPUT_HOSTS
          value: "elasticsearch-client:9200"
        - name: OUTPUT_PATH
          value: ""
        - name: LOGSTASH_FORMAT
          value: "true"
        - name: LOGSTASH_DATEFORMAT
          value: "%Y.%m.%d"
        - name: LOGSTASH_PREFIX
          value: "logstash"
        - name: LOGSTASH_PREFIX_SEPARATOR
          value: "-"
        - name: INDEX_NAME
          value: "fluentd"
        - name: OUTPUT_SCHEME
          value: "http"
        - name: OUTPUT_TYPE
          value: "elasticsearch"
        - name: OUTPUT_SSL_VERIFY
          value: "true"
        - name: OUTPUT_SSL_VERSION
          value: "TLSv1_2"
        - name: OUTPUT_TYPE_NAME
          value: "_doc"
        - name: OUTPUT_BUFFER_CHUNK_LIMIT
          value: "256MB"
        - name: OUTPUT_BUFFER_TOTAL_LIMIT_SIZE
          value: "20GB"
        - name: OUTPUT_BUFFER_TYPE
          value: "file"
        - name: OUTPUT_BUFFER_PATH
          value: "/var/log/fluentd-buffers/kubernetes.system.buffer"
        - name: OUTPUT_BUFFER_FLUSH_MODE
          value: "interval"
        - name: OUTPUT_BUFFER_RETRY_TYPE
          value: "exponential_backoff"
        - name: OUTPUT_BUFFER_FLUSH_THREAD_TYPE
          value: "2"
        - name: OUTPUT_BUFFER_FLUSH_INTERVAL
          value: "5s"
        - name: OUTPUT_BUFFER_RETRY_FOREVER
          value: "true"
        - name: OUTPUT_BUFFER_RETRY_MAX_INTERVAL
          value: "30"
        - name: OUTPUT_BUFFER_OVERFLOW_ACTION
          value: "block"
        - name: OUTPUT_LOG_LEVEL
          value: "info"
        - name: OUTPUT_INCLUDE_TAG_KEY
          value: "true"
        - name: OUTPUT_LOG_400_REASON
          value: "false"
        - name: OUTPUT_RECONNECT_ON_ERROR
          value: "true"
        - name: OUTPUT_RELOAD_ON_FAILURE
          value: "false"
        - name: OUTPUT_RELOAD_CONNECTIONS
          value: "false"
        - name: OUTPUT_REQUEST_TIMEOUT
          value: "5s"
        - name: INCLUDE_TIMESTAMP
          value: "false"
        - name: LIVENESS_THRESHOLD_SECONDS
          value: "900"
        - name: OUTPUT_BUFFER_TOTAL_LIMIT
          value: "20G"
        - name: OUTPUT_PORT
          value: "443"
        - name: STUCK_THRESHOLD_SECONDS
          value: "1200"
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        resources:
          limits:
            cpu: 500m
            memory: 572Mi
          requests:
            cpu: 200m
            memory: 300Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: libsystemddir
          mountPath: /usr/lib64
          readOnly: true
        - name: config-volume
          mountPath: /etc/fluent/config.d  #pointing to fluentd Dockerfile
        livenessProbe:
          initialDelaySeconds: 600
          periodSeconds: 60
          exec:
            command:
            - /bin/sh
            - -c
            - |
              LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${STUCK_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then
                echo "Expected directory /var/log/fluentd-buffers does not exist. This is likely a configuration issue.";
                exit 1;
              fi; touch -d "${STUCK_THRESHOLD_SECONDS} seconds ago" /tmp/marker-stuck; if [ -z "$(find /var/log/fluentd-buffers -type d -newer /tmp/marker-stuck -print -quit)" ]; then
                echo "Elasticsearch buffers found stuck longer than $STUCK_THRESHOLD_SECONDS seconds. Clearing buffers."
                rm -rf /var/log/fluentd-buffers;
                exit 1;
              fi; touch -d "${LIVENESS_THRESHOLD_SECONDS} seconds ago" /tmp/marker-liveness; if [ -z "$(find /var/log/fluentd-buffers -type d -newer /tmp/marker-liveness -print -quit)" ]; then
                echo "Elasticsearch buffers found stuck longer than $LIVENESS_THRESHOLD_SECONDS seconds."
                exit 1;
              fi;
        ports:
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      # It is needed to copy systemd library to decompress journals
      - name: libsystemddir
        hostPath:
          path: /usr/lib64
      - name: config-volume
        configMap:
          name: fluentd-forwarder
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        value: ""
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        value: ""
---
# Source: fluentd-elasticsearch/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: fluentd-forwarder
  labels:
    helm.sh/chart: fluentd-elasticsearch-13.12.2
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-forwarder
    app.kubernetes.io/version: "v4.7.5"
    app.kubernetes.io/managed-by: Helm
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  endpoints:
  - interval: 30s
    honorLabels: true
    port: metrics
    path: /metrics
  jobLabel: ""
  selector:
    matchLabels:
      app.kubernetes.io/name: fluentd
      app.kubernetes.io/instance: fluentd-forwarder
  namespaceSelector:
    matchNames:
      - fluentd-system

