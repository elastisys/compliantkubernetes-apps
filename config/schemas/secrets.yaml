$schema: https://json-schema.org/draft/2020-12/schema
$id: https://github.com/elastisys/compliantkubernetes-apps/raw/main/config/schemas/secrets.yaml
title: Compliant Kubernetes Apps Secrets
description: |
  This describes the structure of the secrets for both the service and workload clusters.
$comment: |
  Since these are intended to be encrypted each property should have the `encrypted` definition combined with `anyOf or `oneOf` with the actual format.
$defs:
  encrypted:
    $comment: Combine this and the decrypted format using oneOf or anyOf
    pattern: ^ENC\[
    title: String encrypted using sops.
    type: string
  password:
    oneOf:
      - minLength: 8
        type: string
      - $ref: '#/$defs/encrypted'
    title: Password
  token:
    anyOf:
      - minLength: 20
        type: string
      - $ref: '#/$defs/encrypted'
    title: Opaque Token
properties:
  objectStorage:
    title: Object Storage Secrets
    description: |-
      Configuration options for using object storage in Compliant Kubernetes.
    type: object
    properties:
      azure:
        additionalProperties: false
        title: Azure Backend Secrets
        description: |-
          Secrets for using Azure as object storage in Compliant Kubernetes.
        type: object
        properties:
          storageAccountName:
            description: Storage account name to authenticate with.
            type: string
          storageAccountKey:
            description: Storage account key to authenticate with.
            type: string
      s3:
        additionalProperties: false
        title: S3 Backend Secrets
        description: |-
          Secrets for using S3 as object storage in Compliant Kubernetes.
        type: object
        properties:
          accessKey:
            description: Access key to authenticate with.
            type: string
          secretKey:
            description: Secret key to authenticate with.
            type: string
      swift:
        additionalProperties: false
        title: Swift Backend Secrets
        description: |-
          Secrets for using Swift as object storage in Compliant Kubernetes.

          > [!important]
          > Currently Harbor only supports `username` and `password` authentication.
        type: object
        properties:
          applicationCredentialID:
            description: |-
              Application Credential ID to authenticate with.
            type: string
          applicationCredentialName:
            description: |-
              Application Credential Name to authenticate with, requires username to be set.
            type: string
          applicationCredentialSecret:
            description: |-
              Application Credential Secret to authenticate with, requires username to be set.
            type: string
          password:
            type: string
          username:
            type: string
      sync:
        additionalProperties: false
        title: Rclone Sync Secrets
        description: |-
          Secrets for syncing object storage from the primary site to a secondary site with Rclone.
        type: object
        properties:
          encrypt:
            title: Rclone Crypt Secrets
            description: |-
              Secrets for encrypt data when syncing.
            properties:
              password:
                description: Crypt password, generate with `pwgen 32 1`.
                type: string
              passwordObscured:
                description: Obscured crypt password, generate with `rclone obscure <password>`.
                type: string
              salt:
                description: Crypt salt, generate with `pwgen 32 1`.
                type: string
              saltObscured:
                description: Obscured crypt salt, generate with `rclone obscure <salt>`.
                type: string
            type: object
          azure:
            $ref: '#/properties/objectStorage/properties/azure'
          s3:
            $ref: '#/properties/objectStorage/properties/s3'
          swift:
            $ref: '#/properties/objectStorage/properties/swift'
      restore:
        additionalProperties: false
        title: Rclone Restore Secrets
        description: |-
          Secrets for restoring object storage from a secondary site to the primary site with Rclone.
        type: object
        properties:
          destinations:
            title: Rclone Restore Destinations Secrets
            description: |-
              Allows for complete or partial overrides of the destinations of the restore, the main object storage configuration.
            type: object
            properties:
              azure:
                $ref: '#/properties/objectStorage/properties/azure'
              s3:
                $ref: '#/properties/objectStorage/properties/s3'
              swift:
                $ref: '#/properties/objectStorage/properties/swift'
            default: {}
          sources:
            title: Rclone Restore Sources Secrets
            description: |-
              Allows for complete or partial overrides of the sources of the restore, the sync object storage configuration.
            type: object
            properties:
              azure:
                $ref: '#/properties/objectStorage/properties/azure'
              s3:
                $ref: '#/properties/objectStorage/properties/s3'
              swift:
                $ref: '#/properties/objectStorage/properties/swift'
            default: {}
          decrypt:
            description: |-
              Allows for complete or partial overrides of the decrypt of the restore, the sync encrypt configuration.
            $ref: '#/properties/objectStorage/properties/sync/properties/encrypt'
            default: {}
  grafana:
    properties:
      clientSecret:
        type: string
      ops:
        properties:
          envRenderSecret:
            items:
              $comment: TODO
            type: array
        type: object
      opsClientSecret:
        type: string
      password:
        type: string
      user:
        properties:
          envRenderSecret:
            items:
              $comment: TODO same as ops above? env key-value pairs? map even?
            type: array
        type: object
    type: object
  harbor:
    title: Harbor Secret Config
    description: |-
      Secret configuration options for Harbor.
    properties:
      clientSecret:
        type: string
      coreSecret:
        type: string
      external:
        title: External Database
        description: |-
          External database password config.
        properties:
          databasePassword:
            title: External Database Password
            type: string
        type: object
      internal:
        title: Internal Database
        description: |-
          Internal database password config.
        properties:
          databasePassword:
            title: Internal Database Password
            type: string
        type: object
      jobserviceSecret:
        type: string
      password:
        type: string
      registrySecret:
        type: string
      xsrf:
        type: string
    type: object
  thanos:
    title: Thanos Secrets
    description: Secrets for Thanos.
    properties:
      receiver:
        title: Thanos Receiver
        description: Secrets for Thanos Receiver.
        properties:
          basic_auth:
            title: Thanos Receiver Basic Auth
            description: Configure authentication to Thanos Receiver,
            properties:
              password:
                title: Thanos Receiver Basic Auth Password
                description: Configure the password for authenticating to Thanos Receiver.
                type: string
            type: object
        type: object
    type: object
  user:
    title: User Secret Config
    description: |-
      Admin password for user Grafana and user Alertmanager.
    type: object
    properties:
      grafanaPassword:
        type: string
      alertmanagerPassword:
        type: string
  opensearch:
    title: OpenSearch Secrets
    description: |-
      Secrets for OpenSearch.
    type: object
    $defs:
      user:
        title: OpenSearch User
        description: Definitions for OpenSearch users.
        type: object
        properties:
          name:
            title: OpenSearch Username
            type: string
          definition:
            title: OpenSearch User Definition
            description: Configures the permissions the role will have.
            $comment: This schema does not cover the entire upstream object.
            type: object
            properties:
              attributes:
                $ref: "#/properties/opensearch/$defs/user/properties/attributes"
              backend_role:
                $ref: "#/properties/opensearch/$defs/user/properties/groups"
              opendistro_security_roles:
                $ref: "#/properties/opensearch/$defs/user/properties/securityRoles"
              password:
                $ref: "#/properties/opensearch/$defs/user/properties/password"
          attributes:
            title: OpenSearch User Attributes
            description: Configures the attributes the user will have.
            type: object
            additionalProperties:
              type: string
          groups:
            title: OpenSearch User Groups
            description: Configures the backend roles or groups the user will have.
            type: array
            items:
              type: string
          securityRoles:
            title: OpenSearch User Security Roles
            description: |
              Configures the security roles the user will have.

              > [!note]
              > These roles must exists or be created via `extraRoles`.
            type: array
            items:
              title: OpenSearch Security Role
              type: string
              examples:
                - kibana_user
          password:
            title: OpenSearch User Password
            type: string

    properties:
      adminHash:
        title: OpenSearch Admin User Hash
        type: string
      adminPassword:
        title: OpenSearch Admin User Password
        type: string
      configurerHash:
        title: OpenSearch Configurer User Hash
        type: string
      configurerPassword:
        title: OpenSearch Configurer User Password
        type: string
      dashboardsCookieEncKey:
        title: OpenSearch Dashboards Cookie Encryption Key
        type: string
      dashboardsHash:
        title: OpenSearch Dashboards User Hash
        type: string
      dashboardsPassword:
        title: OpenSearch Dashboards User Password
        type: string
      clientSecret:
        title: OpenSearch Client Secret
        type: string
      curatorPassword:
        title: OpenSearch Curator Password
        type: string
      fluentdPassword:
        title: OpenSearch Fluentd Password
        type: string
      metricsExporterPassword:
        title: OpenSearch Exporter Password
        type: string
      snapshotterPassword:
        title: OpenSearch Snapshot Password
        type: string
      extraUsers:
        title: OpenSearch Extra Users
        description: Configures extra users for OpenSearch Security.
        type: array
        items:
          title: OpenSearch Extra User
          description: |-
            Configures extra user for OpenSearch Security.

            > [!note]
            > See [the upstream documentation](https://opensearch.org/docs/latest/security/configuration/yaml/#internal_usersyml) for reference.
          type: object
          properties:
            username:
              $ref: "#/properties/opensearch/$defs/user/properties/name"
            definition:
              $ref: "#/properties/opensearch/$defs/user/properties/definition"
  kubeapiMetricsPassword:
    type: string
  alerts:
    properties:
      opsGenie:
        properties:
          apiKey:
            $ref: '#/$defs/token'
        type: object
      slack:
        properties:
          apiUrl:
            oneOf:
              - format: uri
              - $ref: '#/$defs/encrypted'
            title: Slack API URL
            type: string
        type: object
    type: object
  kured:
    title: Kured Notification Secrets
    description: |-
      Notification secrets for Kured (Kubernetes Reboot Daemon).
    properties:
      slack:
        title: Kured Slack Notification Secrets
        description: |-
          Notification secrets to send notifications from Kured to Slack.
        properties:
          botToken:
            title: Kured Bot Token For Slack Notification
            type: string
        type: object
    type: object
  dex:
    properties:
      additionalStaticClients:
        items:
          properties:
            id:
              type: string
            name:
              type: string
            redirectURIs:
              items:
                examples:
                  - http://192.168.42.219:31850/oauth2/callback
                oneOf:
                  - format: uri
                  - $ref: '#/$defs/encrypted'
                title: OAuth callback URI
                type: string
              type: array
            secret:
              type: string
          type: object
        type: array
      connectors:
        description: <https://dexidp.io/docs/connectors/oidc/>
        items:
          properties:
            config:
              $comment: |-
                fields depends on `type` of parent? better modelled as oneOf?
                TODO ldap has divergent fields from the oauth variants
              properties:
                adminEmail:
                  oneOf:
                    - format: email
                    - $ref: '#/$defs/encrypted'
                  type: string
                clientID:
                  type: string
                clientSecret:
                  type: string
                hostedDomains:
                  items:
                    oneOf:
                      - format: hostname
                      - $ref: '#/$defs/encrypted'
                    type: string
                  type: array
                issuer:
                  oneOf:
                    - format: uri
                    - $ref: '#/$defs/encrypted'
                  type: string
                redirectURI:
                  examples:
                    - https://dex.${BASE_DOMAIN}/callback
                  oneOf:
                    - format: uri
                    - $ref: '#/$defs/encrypted'
                  title: OAuth callback URI
                  type: string
                serviceAccountFilePath:
                  examples:
                    - /etc/dex/google/sa.json
                  type: string
              type: object
            id:
              examples:
                - google
              type: string
            name:
              examples:
                - Google
              type: string
            type:
              oneOf:
                - enum:
                    - atlassiancrowd
                    - authproxy
                    - bitbucketcloud
                    - gitea
                    - github
                    - gitlab
                    - google
                    - keystone
                    - ldap
                    - linkedin
                    - microsoft
                    - mock
                    - oauth
                    - oidc
                    - openshift
                    - saml
                - $ref: '#/$defs/encrypted'
              title: Dex connector
              type: string
          required:
            - type
            - name
          type: object
        type: array
      kubeloginClientSecret:
        type: string
      staticPassword:
        format: crypt
        type: string
    type: object
  issuers:
    properties:
      secrets:
        $comment: is this just passed through as-is?
        properties:
          route53-credentials-secret:
            properties:
              secretKey:
                type: string
            required:
              - secretKey
            type: object
        type: object
    type: object
type: object
