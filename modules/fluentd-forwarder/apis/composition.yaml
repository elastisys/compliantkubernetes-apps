apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: fluentdforwarder.modules.elastisys.com
spec:
  compositeTypeRef:
    apiVersion: modules.elastisys.com/v1alpha1
    kind: FluentdForwarder
  mode: Pipeline
  pipeline:
    - step: environmentConfigs
      functionRef:
        name: function-environment-configs
      input:
        apiVersion: environmentconfigs.fn.crossplane.io/v1beta1
        kind: Input
        spec:
          policy:
            resolution: Required
          environmentConfigs:
            - type: Reference
              ref:
                name: welkin.modules.capability.log-write
    - step: patch-and-transform
      functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - name: fluentd-forwarder
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              metadata:
                name: fluentd-forwarder
              spec:
                providerConfigRef:
                  name: helm
                forProvider:
                  wait: true
                  namespace: fluentd-system
                  chart:
                    repository: https://kokuwaio.github.io/helm-charts
                    name: fluentd-elasticsearch
                    version: "13.10.0"
                  values:
                    elasticsearch:
                      setOutputHostEnvVar: false
                      outputType: "opensearch"
                      logLevel: "info"
                      scheme: https
                      sslVerify: true
                      reloadOnFailure: true
                      log400Reason: true
                      auth:
                        enabled: true
                        password: null
                    secret:
                    - name: OUTPUT_HOSTS
                    - name: OUTPUT_USER
                    - name: OUTPUT_PASSWORD
                    nameOverride: fluentd
                    image:
                      # This is our own fork-image (https://github.com/elastisys/fluentd-elasticsearch).
                      # This can later be replaced with the original image (https://github.com/monotek/fluentd-elasticsearch) when our changes is merged.
                      # This image is included in falco k8s_containers and user_known_package_manager_in_container macros
                      repository: ghcr.io/elastisys/fluentd
                      tag: v4.3.9-ck8s1
                    serviceMonitor:
                      enabled: true
                      # Seems like it is double templated so the end result yields an empty string ""
                      jobLabel: '""'
                      interval: 30s
                    fluentdArgs: "--no-supervisor -q"
                    env:
                      OUTPUT_PORT: 443
                      OUTPUT_BUFFER_TOTAL_LIMIT: 20G
                    configMaps:
                      useDefaults:
                        containersInputConf: false
                        forwardInputConf: false
                        monitoringConf: false
                        outputConf: false
                        systemConf: false
                        systemInputConf: true
                    # Liveliness probe reverted from upstream changes to prevent that it fails if just one buffer is inactive.
                    # E.g. the authlog buffer will often be inactive, so it would make the probe fail.
                    livenessProbe:
                      kind:
                        exec:
                          command:
                          # Liveness probe is aimed to help in situations where fluentd
                          # silently hangs for no apparent reasons until manual restart.
                          # The idea of this probe is that if fluentd is not queueing or
                          # flushing chunks for 5 minutes, something is not right. If
                          # you want to change the fluentd configuration, reducing amount of
                          # logs fluentd collects, consider changing the threshold or turning
                          # liveness probe off completely.
                          - '/bin/sh'
                          - '-c'
                          - >
                            LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300};
                            STUCK_THRESHOLD_SECONDS=${STUCK_THRESHOLD_SECONDS:-900};
                            if [ ! -e /var/log/fluentd-buffers ];
                            then
                              echo "Expected directory /var/log/fluentd-buffers does not exist. This is likely a configuration issue.";
                              exit 1;
                            fi;
                            touch -d "${STUCK_THRESHOLD_SECONDS} seconds ago" /tmp/marker-stuck;
                            if [ -z "$(find /var/log/fluentd-buffers -type d -newer /tmp/marker-stuck -print -quit)" ];
                            then
                              echo "Elasticsearch buffers found stuck longer than $STUCK_THRESHOLD_SECONDS seconds. Clearing buffers."
                              rm -rf /var/log/fluentd-buffers;
                              exit 1;
                            fi;
                            touch -d "${LIVENESS_THRESHOLD_SECONDS} seconds ago" /tmp/marker-liveness;
                            if [ -z "$(find /var/log/fluentd-buffers -type d -newer /tmp/marker-liveness -print -quit)" ];
                            then
                              echo "Elasticsearch buffers found stuck longer than $LIVENESS_THRESHOLD_SECONDS seconds."
                              exit 1;
                            fi;
            patches:
              # log-write capability
              - type: FromEnvironmentFieldPath
                fromFieldPath: host.secretKeyRef.name
                toFieldPath: spec.forProvider.values.secret[0].secret_name
              - type: FromEnvironmentFieldPath
                fromFieldPath: host.secretKeyRef.key
                toFieldPath: spec.forProvider.values.secret[0].secret_key
              - type: FromEnvironmentFieldPath
                fromFieldPath: username.secretKeyRef.name
                toFieldPath: spec.forProvider.values.secret[1].secret_name
              - type: FromEnvironmentFieldPath
                fromFieldPath: username.secretKeyRef.key
                toFieldPath: spec.forProvider.values.secret[1].secret_key
              - type: FromEnvironmentFieldPath
                fromFieldPath: password.secretKeyRef.name
                toFieldPath: spec.forProvider.values.secret[2].secret_name
              - type: FromEnvironmentFieldPath
                fromFieldPath: password.secretKeyRef.key
                toFieldPath: spec.forProvider.values.secret[2].secret_key
              # spec
              - type: FromCompositeFieldPath
                fromFieldPath: spec.affinity
                toFieldPath: spec.forProvider.values.affinity
              - type: FromCompositeFieldPath
                fromFieldPath: spec.resources
                toFieldPath: spec.forProvider.values.resources
              - type: FromCompositeFieldPath
                fromFieldPath: spec.tolerations
                toFieldPath: spec.forProvider.values.tolerations
              # TODO: Lazy, real implementation should be stricter
              - type: FromCompositeFieldPath
                fromFieldPath: spec.buffer
                toFieldPath: spec.forProvider.values.elasticsearch.buffer
              - type: FromCompositeFieldPath
                fromFieldPath: spec.extraConfigMaps
                toFieldPath: spec.forProvider.values.extraConfigMaps
              - type: FromCompositeFieldPath
                fromFieldPath: spec.livenessThresholdSeconds
                toFieldPath: spec.forProvider.values.env.LIVENESS_THRESHOLD_SECONDS
              - type: FromCompositeFieldPath
                fromFieldPath: spec.stuckThresholdSeconds
                toFieldPath: spec.forProvider.values.env.STUCK_THRESHOLD_SECONDS
              - type: FromCompositeFieldPath
                fromFieldPath: spec.requestTimeout
                toFieldPath: spec.forProvider.values.elasticsearch.requestTimeout
