apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: dex.modules.elastisys.com
spec:
  compositeTypeRef:
    apiVersion: modules.elastisys.com/v1alpha1
    kind: Dex
  mode: Pipeline
  pipeline:
    - functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              metadata:
                name: dex
              spec:
                forProvider:
                  chart:
                    name: dex
                    repository: https://charts.dexidp.io
                    version: 0.18.0
                  namespace: dex
                  values:
                    replicaCount: 1
                    ingress:
                      enabled: true
                      className: nginx
                      annotations:
                        cert-manager.io/cluster-issuer: .global.issuer
                      tls:
                        - secretName: dex-tls
                          hosts: []
                      hosts:
                        - host: "dex.kapitest.dev-ck8s.com"
                          paths:
                            - path: /
                              pathType: ImplementationSpecific
                    volumeMounts:
                      - mountPath: /etc/dex/google
                        name: google-sa
                    volumes:
                      - name: google-sa
                        secret:
                          secretName: google-sa
                    config:
                      oauth2:
                        skipApprovalScreen: true
                      expiry:
                        deviceRequests: 5m
                        signingKeys: 6h
                        idTokens: 24h
                        refreshTokens:
                          reuseInterval: 3s
                          validIfNotUsedFor: 2160h
                          absoluteLifetime: 3960h
                      storage:
                        type: kubernetes
                        config:
                          inCluster: true
                      issuer: https://{{ .Values.dex.subdomain }}.{{ .Values.global.baseDomain }}
                      connectors: {}
                      staticClients:
                        - id: kubelogin
                          name: 'Kubernetes CLI'
                          secret: ""
                          redirectURIs:
                            - http://localhost:8000
                            - http://localhost:18000
                            - http://localhost:8080/oauth2/callback
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                      runAsNonRoot: true
                      seccompProfile:
                        type: RuntimeDefault
                    serviceMonitor:
                      enabled: false
                providerConfigRef:
                  name: helm
            name: dex
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.replicas
                toFieldPath: spec.forProvider.values.replicaCount
              - type: FromCompositeFieldPath
                fromFieldPath: spec.certIssuer
                toFieldPath: spec.forProvider.values.ingress.annotations["cert-manager.io/cluster-issuer"];
              - type: FromCompositeFieldPath
                fromFieldPath: whitelistSourceRange
                toFieldPath: spec.forProvider.values.ingress.annotations["nginx.ingress.kubernetes.io/whitelist-source-range"];
              - type: FromCompositeFieldPath
                fromFieldPath: spec.hostname
                toFieldPath: spec.forProvider.values.ingress.tls[0].hosts[0]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.hostname
                toFieldPath: spec.forProvider.values.ingress.hosts[0].host[0]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.groupsSecret
                toFieldPath: spec.forProvider.values.volumes[0].secret.secretName
              - type: CombineFromComposite
                combine:
                  variables:
                    - spec.hostname
                  strategy: string
                  string:
                    fmt: https://%s
                toFieldPath: spec.forProvider.values.config.issuer
              - type: FromCompositeFieldPath
                fromFieldPath: spec.resources
                toFieldPath: spec.forProvider.values.resources
              - type: FromCompositeFieldPath
                fromFieldPath: spec.nodeSelector
                toFieldPath: spec.forProvider.values.nodeSelector
              - type: FromCompositeFieldPath
                fromFieldPath: spec.topologySpreadConstraints
                toFieldPath: spec.forProvider.values.topologySpreadConstraints
              - type: FromCompositeFieldPath
                fromFieldPath: spec.affinity
                toFieldPath: spec.forProvider.values.affinity
              - type: FromCompositeFieldPath
                fromFieldPath: spec.tolerations
                toFieldPath: spec.forProvider.values.tolerations
      step: patch-and-transform
