apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: opensearch.modules.elastisys.com
spec:
  writeConnectionSecretsToNamespace: opensearch-system
  compositeTypeRef:
    apiVersion: modules.elastisys.com/v1alpha1
    kind: OpenSearch
  mode: Pipeline
  pipeline:
    - step: patch-and-transform
      functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - name: opensearch-master
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              metadata:
                name: opensearch-master
              spec:
                providerConfigRef:
                  name: helm
                forProvider:
                  wait: true
                  namespace: opensearch-system
                  chart:
                    repository: https://opensearch-project.github.io/helm-charts
                    name: opensearch
                    version: "2.30.1"
                  values:
                    nodeGroup: master
                    roles:
                      - master
                    networkPolicy:
                      create: true
                    rbac:
                      create: true
                    persistence:
                      enableInitChown: false
                    secretMounts:
                      - secretName: opensearch-transport-cert
                        name: opensearch-transport-cert
                        path: /usr/share/opensearch/config/transport
                        defaultMode: 0400
                      - secretName: opensearch-http-cert
                        name: opensearch-http-cert
                        path: /usr/share/opensearch/config/http
                        defaultMode: 0400
                    securityContext:
                      runAsNonRoot: true
                      runAsGroup: 1000
                      runAsUser: 1000
                      capabilities:
                        drop:
                          - ALL
                    podSecurityContext:
                      fsGroup: 1000
                    # To prevent the demo certs from generating: https://github.com/opensearch-project/helm-charts/issues/154
                    extraEnvs:
                      - name: DISABLE_INSTALL_DEMO_CONFIG
                        value: "true"
                    # This is a workaround to set vm.max_map_count before OpenSearch starts.
                    # The chart provides this using non privileged container, and instead allows the unsafe sysctl through PSP.
                    # However this relies on the unsafe sysctl to be allowed in kubelet, which it is not by default.
                    extraInitContainers:
                      - name: init-sysctl
                        image: ghcr.io/elastisys/curl-jq:1.0.0
                        command:
                          - sysctl
                          - -w
                          - vm.max_map_count=262144
                        securityContext:
                          allowPrivilegeEscalation: true
                          privileged: true
                          runAsNonRoot: false
                          runAsUser: 0
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.clusterName
                toFieldPath: spec.forProvider.values.clusterName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.clusterName
                toFieldPath: spec.forProvider.values.masterService
                transforms:
                  - type: string
                    string:
                      type: Format
                      fmt: "%s-master"

              - type: FromCompositeFieldPath
                fromFieldPath: spec.config
                toFieldPath: spec.forProvider.values.config
              - type: FromCompositeFieldPath
                fromFieldPath: spec.plugins
                toFieldPath: spec.forProvider.values.plugins
              - type: FromCompositeFieldPath
                fromFieldPath: spec.keystore
                toFieldPath: spec.forProvider.values.keystore

              - type: FromCompositeFieldPath
                fromFieldPath: spec.master.replicas
                toFieldPath: spec.forProvider.values.replicas
              - type: FromCompositeFieldPath
                fromFieldPath: spec.master.opensearchJavaOpts
                toFieldPath: spec.forProvider.values.opensearchJavaOpts
              - type: FromCompositeFieldPath
                fromFieldPath: spec.master.resources
                toFieldPath: spec.forProvider.values.resources
              - type: FromCompositeFieldPath
                fromFieldPath: spec.master.persistence.storageClass
                toFieldPath: spec.forProvider.values.persistence.storageClass
              - type: FromCompositeFieldPath
                fromFieldPath: spec.master.persistence.size
                toFieldPath: spec.forProvider.values.persistence.size
              - type: FromCompositeFieldPath
                fromFieldPath: spec.master.antiAffinityTopologyKey
                toFieldPath: spec.forProvider.values.antiAffinityTopologyKey
              - type: FromCompositeFieldPath
                fromFieldPath: spec.master.antiAffinity
                toFieldPath: spec.forProvider.values.antiAffinity
              - type: FromCompositeFieldPath
                fromFieldPath: spec.master.nodeAffinity
                toFieldPath: spec.forProvider.values.nodeAffinity
              - type: FromCompositeFieldPath
                fromFieldPath: spec.master.nodeSelector
                toFieldPath: spec.forProvider.values.nodeSelector
              - type: FromCompositeFieldPath
                fromFieldPath: spec.master.tolerations
                toFieldPath: spec.forProvider.values.tolerations
          - name: opensearch-client
            connectionDetails:
              - name: host
                type: FromConnectionSecretKey
                fromConnectionSecretKey: host
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              metadata:
                name: opensearch-client
              spec:
                providerConfigRef:
                  name: helm
                writeConnectionSecretToRef:
                  namespace: opensearch-system
                  name: welkin.modules.capability.log-write-host
                connectionDetails:
                  - apiVersion: networking.k8s.io/v1
                    kind: Ingress
                    namespace: opensearch-system
                    fieldPath: spec.rules[0].host
                    toConnectionSecretKey: host
                forProvider:
                  wait: true
                  namespace: opensearch-system
                  chart:
                    repository: https://opensearch-project.github.io/helm-charts
                    name: opensearch
                    version: "2.30.1"
                  values:
                    nodeGroup: client
                    roles:
                      - ingest
                      - remote_cluster_client
                    networkPolicy:
                      create: true
                    rbac:
                      create: true
                    persistence:
                      enableInitChown: false
                    secretMounts:
                      - secretName: opensearch-transport-cert
                        name: opensearch-transport-cert
                        path: /usr/share/opensearch/config/transport
                        defaultMode: 0400
                      - secretName: opensearch-http-cert
                        name: opensearch-http-cert
                        path: /usr/share/opensearch/config/http
                        defaultMode: 0400
                    securityContext:
                      runAsNonRoot: true
                      runAsGroup: 1000
                      runAsUser: 1000
                      capabilities:
                        drop:
                          - ALL
                    podSecurityContext:
                      fsGroup: 1000
                    # To prevent the demo certs from generating: https://github.com/opensearch-project/helm-charts/issues/154
                    extraEnvs:
                      - name: DISABLE_INSTALL_DEMO_CONFIG
                        value: "true"
                    # This is a workaround to set vm.max_map_count before OpenSearch starts.
                    # The chart provides this using non privileged container, and instead allows the unsafe sysctl through PSP.
                    # However this relies on the unsafe sysctl to be allowed in kubelet, which it is not by default.
                    extraInitContainers:
                      - name: init-sysctl
                        image: ghcr.io/elastisys/curl-jq:1.0.0
                        command:
                          - sysctl
                          - -w
                          - vm.max_map_count=262144
                        securityContext:
                          allowPrivilegeEscalation: true
                          privileged: true
                          runAsNonRoot: false
                          runAsUser: 0
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.clusterName
                toFieldPath: spec.connectionDetails[0].name
                transforms:
                  - type: string
                    string:
                      type: Format
                      fmt: "%s-client"

              - type: FromCompositeFieldPath
                fromFieldPath: spec.clusterName
                toFieldPath: spec.forProvider.values.clusterName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.clusterName
                toFieldPath: spec.forProvider.values.masterService
                transforms:
                  - type: string
                    string:
                      type: Format
                      fmt: "%s-master"

              - type: FromCompositeFieldPath
                fromFieldPath: spec.config
                toFieldPath: spec.forProvider.values.config
              - type: FromCompositeFieldPath
                fromFieldPath: spec.plugins
                toFieldPath: spec.forProvider.values.plugins
              - type: FromCompositeFieldPath
                fromFieldPath: spec.keystore
                toFieldPath: spec.forProvider.values.keystore

              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.replicas
                toFieldPath: spec.forProvider.values.replicas
              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.opensearchJavaOpts
                toFieldPath: spec.forProvider.values.opensearchJavaOpts
              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.resources
                toFieldPath: spec.forProvider.values.resources
              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.persistence.size
                toFieldPath: spec.forProvider.values.persistence.size
              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.persistence.storageClass
                toFieldPath: spec.forProvider.values.persistence.storageClass
              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.antiAffinityTopologyKey
                toFieldPath: spec.forProvider.values.antiAffinityTopologyKey
              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.antiAffinity
                toFieldPath: spec.forProvider.values.antiAffinity
              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.nodeAffinity
                toFieldPath: spec.forProvider.values.nodeAffinity
              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.nodeSelector
                toFieldPath: spec.forProvider.values.nodeSelector
              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.tolerations
                toFieldPath: spec.forProvider.values.tolerations
              # TODO: Lazy, real implementation should be stricter
              - type: FromCompositeFieldPath
                fromFieldPath: spec.client.ingress
                toFieldPath: spec.forProvider.values.ingress
          - name: opensearch-data
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              metadata:
                name: opensearch-data
              spec:
                providerConfigRef:
                  name: helm
                forProvider:
                  wait: true
                  namespace: opensearch-system
                  chart:
                    repository: https://opensearch-project.github.io/helm-charts
                    name: opensearch
                    version: "2.30.1"
                  values:
                    nodeGroup: data
                    roles:
                      - data
                    networkPolicy:
                      create: true
                    rbac:
                      create: true
                    persistence:
                      enableInitChown: false
                    secretMounts:
                      - secretName: opensearch-transport-cert
                        name: opensearch-transport-cert
                        path: /usr/share/opensearch/config/transport
                        defaultMode: 0400
                      - secretName: opensearch-http-cert
                        name: opensearch-http-cert
                        path: /usr/share/opensearch/config/http
                        defaultMode: 0400
                    securityContext:
                      runAsNonRoot: true
                      runAsGroup: 1000
                      runAsUser: 1000
                      capabilities:
                        drop:
                          - ALL
                    podSecurityContext:
                      fsGroup: 1000
                    # To prevent the demo certs from generating: https://github.com/opensearch-project/helm-charts/issues/154
                    extraEnvs:
                      - name: DISABLE_INSTALL_DEMO_CONFIG
                        value: "true"
                    # This is a workaround to set vm.max_map_count before OpenSearch starts.
                    # The chart provides this using non privileged container, and instead allows the unsafe sysctl through PSP.
                    # However this relies on the unsafe sysctl to be allowed in kubelet, which it is not by default.
                    extraInitContainers:
                      - name: init-sysctl
                        image: ghcr.io/elastisys/curl-jq:1.0.0
                        command:
                          - sysctl
                          - -w
                          - vm.max_map_count=262144
                        securityContext:
                          allowPrivilegeEscalation: true
                          privileged: true
                          runAsNonRoot: false
                          runAsUser: 0
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.clusterName
                toFieldPath: spec.forProvider.values.clusterName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.clusterName
                toFieldPath: spec.forProvider.values.masterService
                transforms:
                  - type: string
                    string:
                      type: Format
                      fmt: "%s-master"

              - type: FromCompositeFieldPath
                fromFieldPath: spec.config
                toFieldPath: spec.forProvider.values.config
              - type: FromCompositeFieldPath
                fromFieldPath: spec.plugins
                toFieldPath: spec.forProvider.values.plugins
              - type: FromCompositeFieldPath
                fromFieldPath: spec.keystore
                toFieldPath: spec.forProvider.values.keystore

              - type: FromCompositeFieldPath
                fromFieldPath: spec.data.replicas
                toFieldPath: spec.forProvider.values.replicas
              - type: FromCompositeFieldPath
                fromFieldPath: spec.data.opensearchJavaOpts
                toFieldPath: spec.forProvider.values.opensearchJavaOpts
              - type: FromCompositeFieldPath
                fromFieldPath: spec.data.resources
                toFieldPath: spec.forProvider.values.resources
              - type: FromCompositeFieldPath
                fromFieldPath: spec.data.persistence.size
                toFieldPath: spec.forProvider.values.persistence.size
              - type: FromCompositeFieldPath
                fromFieldPath: spec.data.persistence.storageClass
                toFieldPath: spec.forProvider.values.persistence.storageClass
              - type: FromCompositeFieldPath
                fromFieldPath: spec.data.antiAffinityTopologyKey
                toFieldPath: spec.forProvider.values.antiAffinityTopologyKey
              - type: FromCompositeFieldPath
                fromFieldPath: spec.data.antiAffinity
                toFieldPath: spec.forProvider.values.antiAffinity
              - type: FromCompositeFieldPath
                fromFieldPath: spec.data.nodeAffinity
                toFieldPath: spec.forProvider.values.nodeAffinity
              - type: FromCompositeFieldPath
                fromFieldPath: spec.data.nodeSelector
                toFieldPath: spec.forProvider.values.nodeSelector
              - type: FromCompositeFieldPath
                fromFieldPath: spec.data.tolerations
                toFieldPath: spec.forProvider.values.tolerations
          - name: capability-log-write-secret
            connectionDetails:
              - name: username
                type: FromConnectionSecretKey
                fromConnectionSecretKey: username
              - name: password
                type: FromConnectionSecretKey
                fromConnectionSecretKey: password
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                providerConfigRef:
                  name: kubernetes
                writeConnectionSecretToRef:
                  namespace: opensearch-system
                  name: welkin.modules.capability.log-write-username-password
                connectionDetails:
                  - apiVersion: v1
                    kind: Secret
                    name: fluentd-credentials
                    namespace: opensearch-system
                    fieldPath: data.username
                    toConnectionSecretKey: username
                  - apiVersion: v1
                    kind: Secret
                    name: fluentd-credentials
                    namespace: opensearch-system
                    fieldPath: data.password
                    toConnectionSecretKey: password
                managementPolicies: [Observe]
                watch: true
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: Secret
                    metadata:
                      name: fluentd-credentials
                      namespace: opensearch-system
    - step: detect-readiness
      functionRef:
        name: function-auto-ready
    - step: sequence-creation
      functionRef:
        name: function-sequencer
      input:
        apiVersion: sequencer.fn.crossplane.io/v1beta1
        kind: Input
        rules:
          - sequence:
            - opensearch-.*
            - capability-log-write-secret
